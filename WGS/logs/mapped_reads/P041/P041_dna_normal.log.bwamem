Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204108
	[0000][ M::kt_pipeline] read 1204108 sequences (180000075 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515639, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 282, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 675)
[0000][PE] mean and std.dev: (257.15, 103.96)
[0000][PE] low and high boundaries for proper pairs: (1, 839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 568)
[0000][PE] mean and std.dev: (336.88, 70.32)
[0000][PE] low and high boundaries for proper pairs: (10, 661)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (127, 318, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 802)
[0000][PE] mean and std.dev: (249.20, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204108 reads in 403.802 CPU sec, 24.014 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515278, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (119, 189, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (175.75, 62.38)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.00, 70.35)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 374.348 CPU sec, 23.310 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204110
	[0000][ M::kt_pipeline] read 1204110 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516126, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 211, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 518)
[0000][PE] mean and std.dev: (205.89, 85.51)
[0000][PE] low and high boundaries for proper pairs: (1, 644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 568)
[0000][PE] mean and std.dev: (337.22, 70.32)
[0000][PE] low and high boundaries for proper pairs: (10, 661)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (141, 175, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 615)
[0000][PE] mean and std.dev: (196.08, 77.03)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 380.045 CPU sec, 21.787 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516277, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 214, 272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (181.64, 56.67)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.52, 70.78)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 205, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 457)
[0000][PE] mean and std.dev: (215.53, 65.95)
[0000][PE] low and high boundaries for proper pairs: (1, 552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204110 reads in 365.648 CPU sec, 20.765 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515580, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 184, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2032)
[0000][PE] mean and std.dev: (284.55, 238.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.44, 70.68)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 218, 251)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 407)
[0000][PE] mean and std.dev: (230.22, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 361.542 CPU sec, 20.554 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1203998
	[0000][ M::kt_pipeline] read 1203998 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515488, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 185, 254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 506)
[0000][PE] mean and std.dev: (170.72, 59.18)
[0000][PE] low and high boundaries for proper pairs: (1, 632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.52, 70.55)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 220, 248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 416)
[0000][PE] mean and std.dev: (207.54, 39.29)
[0000][PE] low and high boundaries for proper pairs: (1, 500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 359.019 CPU sec, 20.510 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204318
	[0000][ M::kt_pipeline] read 1204318 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515933, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 208, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (43, 433)
[0000][PE] mean and std.dev: (221.08, 31.22)
[0000][PE] low and high boundaries for proper pairs: (1, 511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.33, 70.62)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (116, 230, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 626)
[0000][PE] mean and std.dev: (189.71, 78.36)
[0000][PE] low and high boundaries for proper pairs: (1, 796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203998 reads in 349.544 CPU sec, 21.630 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204026
	[0000][ M::kt_pipeline] read 1204026 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515741, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 244, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 466)
[0000][PE] mean and std.dev: (231.14, 49.00)
[0000][PE] low and high boundaries for proper pairs: (1, 566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.85, 70.70)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204318 reads in 352.697 CPU sec, 19.904 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204016
	[0000][ M::kt_pipeline] read 1204016 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516030, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 153, 186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 326)
[0000][PE] mean and std.dev: (143.81, 40.95)
[0000][PE] low and high boundaries for proper pairs: (1, 396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.87, 70.40)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 194, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 739)
[0000][PE] mean and std.dev: (241.80, 106.06)
[0000][PE] low and high boundaries for proper pairs: (1, 935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204026 reads in 352.235 CPU sec, 20.071 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515539, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 165, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (37, 337)
[0000][PE] mean and std.dev: (167.88, 50.62)
[0000][PE] low and high boundaries for proper pairs: (1, 397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.90, 70.79)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 165, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (16, 376)
[0000][PE] mean and std.dev: (176.77, 43.35)
[0000][PE] low and high boundaries for proper pairs: (1, 448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204016 reads in 348.071 CPU sec, 19.717 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204114
	[0000][ M::kt_pipeline] read 1204114 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515901, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 185, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 477)
[0000][PE] mean and std.dev: (192.92, 58.45)
[0000][PE] low and high boundaries for proper pairs: (1, 584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.81, 70.62)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 226, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (191.71, 65.29)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 346.950 CPU sec, 19.548 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516237, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.86, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 348, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (373.91, 206.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1943)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204114 reads in 342.865 CPU sec, 19.348 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516096, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 388, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 818)
[0000][PE] mean and std.dev: (269.90, 110.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.67, 70.32)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 238, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 439)
[0000][PE] mean and std.dev: (246.41, 55.41)
[0000][PE] low and high boundaries for proper pairs: (25, 507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 349.503 CPU sec, 19.685 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1203986
	[0000][ M::kt_pipeline] read 1203986 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516144, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 239, 4269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12451)
[0000][PE] mean and std.dev: (1300.41, 1695.21)
[0000][PE] low and high boundaries for proper pairs: (1, 16542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.02, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 198, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 496)
[0000][PE] mean and std.dev: (200.65, 60.05)
[0000][PE] low and high boundaries for proper pairs: (1, 599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 352.699 CPU sec, 19.980 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204256
	[0000][ M::kt_pipeline] read 1204256 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515883, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 186, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (169.42, 50.90)
[0000][PE] low and high boundaries for proper pairs: (1, 610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.03, 70.57)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 194, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 491)
[0000][PE] mean and std.dev: (211.31, 51.46)
[0000][PE] low and high boundaries for proper pairs: (1, 600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203986 reads in 356.700 CPU sec, 20.087 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515739, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 179, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (81, 266)
[0000][PE] mean and std.dev: (174.46, 28.02)
[0000][PE] low and high boundaries for proper pairs: (44, 303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.99, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 223, 264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 500)
[0000][PE] mean and std.dev: (196.89, 78.74)
[0000][PE] low and high boundaries for proper pairs: (1, 618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204256 reads in 364.711 CPU sec, 21.188 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515984, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 220, 265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 509)
[0000][PE] mean and std.dev: (214.46, 75.64)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.26, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 264, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 680)
[0000][PE] mean and std.dev: (268.46, 106.01)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 368.996 CPU sec, 20.910 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1203938
	[0000][ M::kt_pipeline] read 1203938 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515444, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 205, 231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 407)
[0000][PE] mean and std.dev: (191.54, 74.56)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.12, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 195, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 710)
[0000][PE] mean and std.dev: (230.67, 103.42)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 368.010 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515710, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 247, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 649)
[0000][PE] mean and std.dev: (252.15, 89.18)
[0000][PE] low and high boundaries for proper pairs: (1, 808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.23, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 241, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 715)
[0000][PE] mean and std.dev: (236.08, 83.37)
[0000][PE] low and high boundaries for proper pairs: (1, 897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203938 reads in 358.497 CPU sec, 20.340 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515998, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 181, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 717)
[0000][PE] mean and std.dev: (213.50, 98.87)
[0000][PE] low and high boundaries for proper pairs: (1, 900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.15, 70.57)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 356.591 CPU sec, 20.081 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516107, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 263, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 464)
[0000][PE] mean and std.dev: (267.89, 70.17)
[0000][PE] low and high boundaries for proper pairs: (1, 549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.34, 70.61)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 221, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 361)
[0000][PE] mean and std.dev: (215.53, 46.89)
[0000][PE] low and high boundaries for proper pairs: (28, 412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 354.827 CPU sec, 19.988 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204012
	[0000][ M::kt_pipeline] read 1204012 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515756, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.98, 70.44)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (120, 203, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 525)
[0000][PE] mean and std.dev: (180.22, 58.39)
[0000][PE] low and high boundaries for proper pairs: (1, 660)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 352.991 CPU sec, 19.898 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204004
	[0000][ M::kt_pipeline] read 1204004 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516270, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 175, 212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 364)
[0000][PE] mean and std.dev: (163.86, 37.59)
[0000][PE] low and high boundaries for proper pairs: (1, 440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.96, 70.37)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204012 reads in 351.753 CPU sec, 19.790 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516169, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 177, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 627)
[0000][PE] mean and std.dev: (181.31, 86.31)
[0000][PE] low and high boundaries for proper pairs: (1, 804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.02, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 196, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (213.25, 93.17)
[0000][PE] low and high boundaries for proper pairs: (1, 755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204004 reads in 347.983 CPU sec, 19.612 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515610, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 218, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (80, 350)
[0000][PE] mean and std.dev: (208.08, 60.35)
[0000][PE] low and high boundaries for proper pairs: (1, 449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.80, 70.40)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (171, 254, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 687)
[0000][PE] mean and std.dev: (254.50, 98.45)
[0000][PE] low and high boundaries for proper pairs: (1, 859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 353.578 CPU sec, 19.983 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515907, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 192, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 510)
[0000][PE] mean and std.dev: (202.25, 81.28)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.14, 70.54)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 247, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 771)
[0000][PE] mean and std.dev: (215.90, 86.84)
[0000][PE] low and high boundaries for proper pairs: (1, 972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 356.241 CPU sec, 20.126 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516216, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 249, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (235.85, 90.84)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.85, 70.45)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 257, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 536)
[0000][PE] mean and std.dev: (235.38, 65.02)
[0000][PE] low and high boundaries for proper pairs: (1, 656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 366.982 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515974, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.94, 70.56)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 265, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (265.00, 82.65)
[0000][PE] low and high boundaries for proper pairs: (1, 913)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 359.134 CPU sec, 20.216 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1203920
	[0000][ M::kt_pipeline] read 1203920 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515913, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 195, 236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 432)
[0000][PE] mean and std.dev: (199.85, 67.82)
[0000][PE] low and high boundaries for proper pairs: (1, 530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.18, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 351.037 CPU sec, 19.713 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515876, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 220, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 318)
[0000][PE] mean and std.dev: (179.20, 51.21)
[0000][PE] low and high boundaries for proper pairs: (1, 384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.97, 70.51)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (127, 142, 227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 427)
[0000][PE] mean and std.dev: (170.33, 61.79)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203920 reads in 349.168 CPU sec, 19.653 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203918
	[0000][ M::kt_pipeline] read 1203918 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516126, 2, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.79, 70.44)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 227, 280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 550)
[0000][PE] mean and std.dev: (237.00, 92.53)
[0000][PE] low and high boundaries for proper pairs: (1, 685)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 347.381 CPU sec, 19.551 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515675, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 194, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (196.69, 84.31)
[0000][PE] low and high boundaries for proper pairs: (1, 593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.15, 70.62)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (141, 245, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 672)
[0000][PE] mean and std.dev: (233.40, 88.39)
[0000][PE] low and high boundaries for proper pairs: (1, 849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203918 reads in 350.966 CPU sec, 19.726 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516473, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 211, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (347.31, 320.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.74, 70.43)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 194, 221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 387)
[0000][PE] mean and std.dev: (195.13, 72.02)
[0000][PE] low and high boundaries for proper pairs: (1, 483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 346.850 CPU sec, 19.562 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204072
	[0000][ M::kt_pipeline] read 1204072 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515847, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 215, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 348)
[0000][PE] mean and std.dev: (204.33, 61.30)
[0000][PE] low and high boundaries for proper pairs: (1, 450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.61, 70.59)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 257, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 379)
[0000][PE] mean and std.dev: (253.67, 44.96)
[0000][PE] low and high boundaries for proper pairs: (74, 433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 349.617 CPU sec, 19.750 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000076 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515419, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.63, 70.53)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 291, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 972)
[0000][PE] mean and std.dev: (392.36, 289.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1552)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204072 reads in 366.069 CPU sec, 23.899 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1203984
	[0000][ M::kt_pipeline] read 1203984 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515652, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 194, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (199.92, 62.55)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.58, 70.42)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 234, 300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 540)
[0000][PE] mean and std.dev: (228.75, 60.25)
[0000][PE] low and high boundaries for proper pairs: (1, 660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 351.171 CPU sec, 19.765 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1203944
	[0000][ M::kt_pipeline] read 1203944 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515808, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 226, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 444)
[0000][PE] mean and std.dev: (222.25, 80.47)
[0000][PE] low and high boundaries for proper pairs: (1, 544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.87, 70.67)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 235, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 500)
[0000][PE] mean and std.dev: (226.33, 75.16)
[0000][PE] low and high boundaries for proper pairs: (1, 602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203984 reads in 348.321 CPU sec, 19.615 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1203990
	[0000][ M::kt_pipeline] read 1203990 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515574, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 191, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 427)
[0000][PE] mean and std.dev: (170.95, 60.41)
[0000][PE] low and high boundaries for proper pairs: (1, 524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.75, 70.51)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 273, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (32, 517)
[0000][PE] mean and std.dev: (262.45, 49.31)
[0000][PE] low and high boundaries for proper pairs: (1, 614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203944 reads in 349.217 CPU sec, 19.659 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515965, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 192, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (241.67, 151.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.99, 70.48)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 272, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 675)
[0000][PE] mean and std.dev: (258.36, 57.49)
[0000][PE] low and high boundaries for proper pairs: (1, 826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203990 reads in 346.440 CPU sec, 19.594 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516023, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 241, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (23, 428)
[0000][PE] mean and std.dev: (228.28, 45.49)
[0000][PE] low and high boundaries for proper pairs: (1, 509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.77, 70.57)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 348.827 CPU sec, 19.606 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1203914
	[0000][ M::kt_pipeline] read 1203914 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516569, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 272, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 426)
[0000][PE] mean and std.dev: (232.64, 69.67)
[0000][PE] low and high boundaries for proper pairs: (1, 511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (338.03, 70.50)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 343.653 CPU sec, 19.333 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515976, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 269, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (241.94, 91.78)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (338.11, 70.49)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 214, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 449)
[0000][PE] mean and std.dev: (211.00, 48.71)
[0000][PE] low and high boundaries for proper pairs: (1, 539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203914 reads in 343.459 CPU sec, 19.618 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516170, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.48, 70.52)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (126, 215, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (206.62, 83.59)
[0000][PE] low and high boundaries for proper pairs: (1, 570)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 350.076 CPU sec, 19.747 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515872, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 165, 199)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 329)
[0000][PE] mean and std.dev: (170.45, 45.61)
[0000][PE] low and high boundaries for proper pairs: (1, 394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.35, 70.60)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 283, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (252.73, 103.11)
[0000][PE] low and high boundaries for proper pairs: (1, 964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 349.591 CPU sec, 19.710 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515696, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 281, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (257.07, 70.12)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.81, 70.42)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (158, 168, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (6, 386)
[0000][PE] mean and std.dev: (181.04, 56.80)
[0000][PE] low and high boundaries for proper pairs: (1, 462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 344.718 CPU sec, 19.356 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515960, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.46, 70.56)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 227, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (8, 473)
[0000][PE] mean and std.dev: (222.83, 53.86)
[0000][PE] low and high boundaries for proper pairs: (1, 566)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 352.659 CPU sec, 19.891 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515706, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 186, 212)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 334)
[0000][PE] mean and std.dev: (184.80, 43.94)
[0000][PE] low and high boundaries for proper pairs: (1, 395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.80, 70.49)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 267, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 686)
[0000][PE] mean and std.dev: (277.75, 139.09)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 353.229 CPU sec, 19.859 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204002
	[0000][ M::kt_pipeline] read 1204002 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515761, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 212, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (218.62, 78.90)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.87, 70.55)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 258, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (32, 452)
[0000][PE] mean and std.dev: (221.19, 70.38)
[0000][PE] low and high boundaries for proper pairs: (1, 536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 374.157 CPU sec, 21.243 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1203930
	[0000][ M::kt_pipeline] read 1203930 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516321, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 276, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 676)
[0000][PE] mean and std.dev: (265.67, 71.47)
[0000][PE] low and high boundaries for proper pairs: (1, 830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.96, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204002 reads in 381.276 CPU sec, 21.600 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516046, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 222, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 782)
[0000][PE] mean and std.dev: (238.95, 122.04)
[0000][PE] low and high boundaries for proper pairs: (1, 997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.16, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 445, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1613)
[0000][PE] mean and std.dev: (366.38, 227.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2092)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 216, 292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 518)
[0000][PE] mean and std.dev: (219.27, 88.83)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203930 reads in 351.153 CPU sec, 19.873 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203910
	[0000][ M::kt_pipeline] read 1203910 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516206, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 217, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 501)
[0000][PE] mean and std.dev: (205.23, 61.87)
[0000][PE] low and high boundaries for proper pairs: (1, 608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.27, 70.66)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (87, 171, 219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 483)
[0000][PE] mean and std.dev: (164.86, 93.51)
[0000][PE] low and high boundaries for proper pairs: (1, 615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 351.822 CPU sec, 19.989 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515317, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 214, 264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 466)
[0000][PE] mean and std.dev: (212.73, 60.83)
[0000][PE] low and high boundaries for proper pairs: (1, 567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.39, 70.60)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203910 reads in 354.424 CPU sec, 20.225 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203952
	[0000][ M::kt_pipeline] read 1203952 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515629, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 257, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (228.35, 69.59)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.23, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 323, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 588)
[0000][PE] mean and std.dev: (266.54, 76.12)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 354.493 CPU sec, 20.365 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515914, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 221, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 549)
[0000][PE] mean and std.dev: (215.11, 78.26)
[0000][PE] low and high boundaries for proper pairs: (1, 678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.50, 70.87)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203952 reads in 359.326 CPU sec, 20.914 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515521, 1, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.43, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 315, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (283.83, 95.17)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 361.440 CPU sec, 20.713 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515620, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 258, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 455)
[0000][PE] mean and std.dev: (219.08, 80.21)
[0000][PE] low and high boundaries for proper pairs: (1, 551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.74, 70.96)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 216, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 681)
[0000][PE] mean and std.dev: (175.00, 64.29)
[0000][PE] low and high boundaries for proper pairs: (1, 862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 360.605 CPU sec, 21.315 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515482, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 171, 198)
[0000][PE] low and high boundaries for computing mean and std.dev: (33, 308)
[0000][PE] mean and std.dev: (171.62, 32.26)
[0000][PE] low and high boundaries for proper pairs: (1, 363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.48, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 291, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 497)
[0000][PE] mean and std.dev: (239.00, 67.09)
[0000][PE] low and high boundaries for proper pairs: (1, 593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 352.464 CPU sec, 19.883 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515426, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 262, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (208.00, 76.60)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.40, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 518, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (534.25, 388.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 376.886 CPU sec, 21.318 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516415, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.36, 70.56)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 300, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (231, 391)
[0000][PE] mean and std.dev: (306.67, 16.53)
[0000][PE] low and high boundaries for proper pairs: (199, 423)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 368.849 CPU sec, 20.793 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204024
	[0000][ M::kt_pipeline] read 1204024 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515508, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 216, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 517)
[0000][PE] mean and std.dev: (206.23, 94.06)
[0000][PE] low and high boundaries for proper pairs: (1, 642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.71, 70.80)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 402, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 858)
[0000][PE] mean and std.dev: (301.08, 157.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 362.969 CPU sec, 20.492 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204056
	[0000][ M::kt_pipeline] read 1204056 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515723, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 235, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 713)
[0000][PE] mean and std.dev: (244.92, 91.48)
[0000][PE] low and high boundaries for proper pairs: (1, 898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.86, 70.69)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204024 reads in 367.994 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203826
	[0000][ M::kt_pipeline] read 1203826 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515332, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 172, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 451)
[0000][PE] mean and std.dev: (176.20, 33.04)
[0000][PE] low and high boundaries for proper pairs: (1, 546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.69, 70.82)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (134, 227, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 749)
[0000][PE] mean and std.dev: (223.27, 99.59)
[0000][PE] low and high boundaries for proper pairs: (1, 954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204056 reads in 372.913 CPU sec, 21.081 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515803, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 206, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 568)
[0000][PE] mean and std.dev: (191.27, 68.64)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.91, 70.71)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203826 reads in 370.230 CPU sec, 20.791 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204012
	[0000][ M::kt_pipeline] read 1204012 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515739, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 244, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (228.00, 97.67)
[0000][PE] low and high boundaries for proper pairs: (1, 753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.79, 70.57)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 357, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (276.91, 97.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 373.502 CPU sec, 21.005 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1203988
	[0000][ M::kt_pipeline] read 1203988 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515847, 1, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.89, 70.86)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 251, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 707)
[0000][PE] mean and std.dev: (248.26, 97.19)
[0000][PE] low and high boundaries for proper pairs: (1, 884)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204012 reads in 377.574 CPU sec, 21.283 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203994
	[0000][ M::kt_pipeline] read 1203994 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515871, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 214, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 877)
[0000][PE] mean and std.dev: (224.00, 96.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.11, 71.02)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (144, 173, 249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (195.94, 61.48)
[0000][PE] low and high boundaries for proper pairs: (1, 564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203988 reads in 377.379 CPU sec, 21.298 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515843, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.86, 70.57)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203994 reads in 382.355 CPU sec, 21.640 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516027, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.77, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 201, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 453)
[0000][PE] mean and std.dev: (206.14, 68.63)
[0000][PE] low and high boundaries for proper pairs: (1, 558)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 376.148 CPU sec, 21.166 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516216, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 224, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (262.16, 123.34)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.48, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 247, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 734)
[0000][PE] mean and std.dev: (267.94, 121.63)
[0000][PE] low and high boundaries for proper pairs: (1, 924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 379.136 CPU sec, 21.384 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203878
	[0000][ M::kt_pipeline] read 1203878 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516211, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 298, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 679)
[0000][PE] mean and std.dev: (269.12, 74.72)
[0000][PE] low and high boundaries for proper pairs: (1, 814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.72, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 379.576 CPU sec, 21.385 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515911, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 147, 215)
[0000][PE] low and high boundaries for computing mean and std.dev: (11, 351)
[0000][PE] mean and std.dev: (171.40, 57.48)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.42, 70.66)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 316, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (36, 601)
[0000][PE] mean and std.dev: (308.18, 70.82)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203878 reads in 376.580 CPU sec, 21.224 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204054
	[0000][ M::kt_pipeline] read 1204054 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515960, 2, 27)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.56, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 264, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 721)
[0000][PE] mean and std.dev: (279.93, 107.14)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 382.366 CPU sec, 21.555 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515541, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 204, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 554)
[0000][PE] mean and std.dev: (188.08, 78.63)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.86, 70.58)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (135, 258, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 507)
[0000][PE] mean and std.dev: (213.43, 85.88)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204054 reads in 386.133 CPU sec, 21.753 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204000
	[0000][ M::kt_pipeline] read 1204000 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516024, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 188, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1296)
[0000][PE] mean and std.dev: (250.87, 178.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.55, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 197, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (177.38, 78.33)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 376.651 CPU sec, 21.259 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515930, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.65, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 241, 309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (231.64, 64.78)
[0000][PE] low and high boundaries for proper pairs: (1, 693)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204000 reads in 377.064 CPU sec, 21.264 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516527, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 228, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 425)
[0000][PE] mean and std.dev: (199.50, 60.73)
[0000][PE] low and high boundaries for proper pairs: (1, 515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.70, 70.66)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 177, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (214.17, 80.23)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 374.952 CPU sec, 21.106 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516059, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.56, 70.55)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 239, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 529)
[0000][PE] mean and std.dev: (251.00, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 644)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 379.516 CPU sec, 21.415 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204112
	[0000][ M::kt_pipeline] read 1204112 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515657, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 217, 258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 478)
[0000][PE] mean and std.dev: (203.93, 68.90)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.25, 70.54)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 379.963 CPU sec, 21.448 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1203938
	[0000][ M::kt_pipeline] read 1203938 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515929, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.35, 70.69)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 265, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 700)
[0000][PE] mean and std.dev: (260.38, 104.75)
[0000][PE] low and high boundaries for proper pairs: (1, 872)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204112 reads in 376.183 CPU sec, 21.208 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515350, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 187, 230)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 320)
[0000][PE] mean and std.dev: (177.67, 31.91)
[0000][PE] low and high boundaries for proper pairs: (50, 365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.51, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203938 reads in 383.730 CPU sec, 21.701 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515386, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 242, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (50, 450)
[0000][PE] mean and std.dev: (243.67, 42.45)
[0000][PE] low and high boundaries for proper pairs: (1, 530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.59, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 377.932 CPU sec, 21.409 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515951, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 208, 238)
[0000][PE] low and high boundaries for computing mean and std.dev: (46, 366)
[0000][PE] mean and std.dev: (195.90, 43.50)
[0000][PE] low and high boundaries for proper pairs: (1, 430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.41, 70.66)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 220, 236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 410)
[0000][PE] mean and std.dev: (199.70, 58.96)
[0000][PE] low and high boundaries for proper pairs: (1, 497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 374.760 CPU sec, 21.116 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204024
	[0000][ M::kt_pipeline] read 1204024 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515522, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.56, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 349, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (144, 519)
[0000][PE] mean and std.dev: (309.50, 57.67)
[0000][PE] low and high boundaries for proper pairs: (69, 594)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 373.475 CPU sec, 21.005 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204020
	[0000][ M::kt_pipeline] read 1204020 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515032, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 154, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (64, 229)
[0000][PE] mean and std.dev: (148.08, 36.07)
[0000][PE] low and high boundaries for proper pairs: (4, 292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.33, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 267, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 645)
[0000][PE] mean and std.dev: (234.45, 72.07)
[0000][PE] low and high boundaries for proper pairs: (1, 789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204024 reads in 375.983 CPU sec, 21.214 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515943, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 217, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 546)
[0000][PE] mean and std.dev: (240.79, 89.63)
[0000][PE] low and high boundaries for proper pairs: (1, 657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.39, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 301, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (228.00, 79.47)
[0000][PE] low and high boundaries for proper pairs: (1, 911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204020 reads in 375.874 CPU sec, 21.204 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515958, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 228, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 526)
[0000][PE] mean and std.dev: (210.27, 69.96)
[0000][PE] low and high boundaries for proper pairs: (1, 655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.12, 70.60)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 198, 309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (215.82, 92.28)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 378.566 CPU sec, 21.409 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203958
	[0000][ M::kt_pipeline] read 1203958 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516160, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 151, 205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 361)
[0000][PE] mean and std.dev: (155.83, 53.32)
[0000][PE] low and high boundaries for proper pairs: (1, 439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.55, 70.47)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 279, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2003)
[0000][PE] mean and std.dev: (455.09, 350.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 379.770 CPU sec, 21.459 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203946
	[0000][ M::kt_pipeline] read 1203946 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 514962, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 276, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (722.74, 813.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.53, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 237, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 423)
[0000][PE] mean and std.dev: (236.00, 56.87)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203958 reads in 387.397 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204020
	[0000][ M::kt_pipeline] read 1204020 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515918, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 186, 212)
[0000][PE] low and high boundaries for computing mean and std.dev: (38, 328)
[0000][PE] mean and std.dev: (181.92, 43.12)
[0000][PE] low and high boundaries for proper pairs: (1, 386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.18, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 280, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 426)
[0000][PE] mean and std.dev: (276.46, 61.88)
[0000][PE] low and high boundaries for proper pairs: (29, 524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203946 reads in 389.385 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204026
	[0000][ M::kt_pipeline] read 1204026 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516293, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 187, 226)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 308)
[0000][PE] mean and std.dev: (185.88, 29.31)
[0000][PE] low and high boundaries for proper pairs: (62, 349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.34, 70.56)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (119, 171, 227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 443)
[0000][PE] mean and std.dev: (179.76, 72.22)
[0000][PE] low and high boundaries for proper pairs: (1, 551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204020 reads in 389.818 CPU sec, 21.958 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1203996
	[0000][ M::kt_pipeline] read 1203996 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515543, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 256, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (249.81, 87.01)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.80, 70.57)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 210, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 522)
[0000][PE] mean and std.dev: (219.10, 60.21)
[0000][PE] low and high boundaries for proper pairs: (1, 641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204026 reads in 382.957 CPU sec, 21.543 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516077, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.88, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203996 reads in 379.629 CPU sec, 21.373 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515772, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 167, 205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 409)
[0000][PE] mean and std.dev: (150.40, 48.74)
[0000][PE] low and high boundaries for proper pairs: (1, 511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.65, 70.79)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 289, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (5, 565)
[0000][PE] mean and std.dev: (283.78, 80.03)
[0000][PE] low and high boundaries for proper pairs: (1, 677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 381.963 CPU sec, 21.530 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1203982
	[0000][ M::kt_pipeline] read 1203982 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515303, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 299, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (261, 356)
[0000][PE] mean and std.dev: (308.44, 8.96)
[0000][PE] low and high boundaries for proper pairs: (242, 375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.91, 70.60)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (51, 934, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (876.90, 856.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8183)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (82, 168, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 664)
[0000][PE] mean and std.dev: (195.40, 104.14)
[0000][PE] low and high boundaries for proper pairs: (1, 858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 383.032 CPU sec, 21.598 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516387, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 266, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 470)
[0000][PE] mean and std.dev: (269.23, 65.06)
[0000][PE] low and high boundaries for proper pairs: (9, 541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.02, 70.66)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 304, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 461)
[0000][PE] mean and std.dev: (268.30, 65.14)
[0000][PE] low and high boundaries for proper pairs: (8, 529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203982 reads in 377.190 CPU sec, 21.219 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516210, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 237, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 443)
[0000][PE] mean and std.dev: (239.67, 67.29)
[0000][PE] low and high boundaries for proper pairs: (1, 515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.15, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (93, 405, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (813.00, 1113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 250, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (284.23, 89.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 376.781 CPU sec, 21.177 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1203944
	[0000][ M::kt_pipeline] read 1203944 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516003, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 163, 229)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 369)
[0000][PE] mean and std.dev: (173.00, 33.38)
[0000][PE] low and high boundaries for proper pairs: (1, 439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.50, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 381.531 CPU sec, 21.531 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204020
	[0000][ M::kt_pipeline] read 1204020 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515997, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 216, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 527)
[0000][PE] mean and std.dev: (215.13, 60.51)
[0000][PE] low and high boundaries for proper pairs: (1, 644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.71, 70.93)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 231, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 547)
[0000][PE] mean and std.dev: (268.33, 118.09)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203944 reads in 379.966 CPU sec, 21.429 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1203934
	[0000][ M::kt_pipeline] read 1203934 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515639, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.90, 70.89)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 278, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (69, 504)
[0000][PE] mean and std.dev: (277.00, 43.02)
[0000][PE] low and high boundaries for proper pairs: (1, 591)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204020 reads in 379.286 CPU sec, 21.352 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204246
	[0000][ M::kt_pipeline] read 1204246 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515884, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 170, 258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 462)
[0000][PE] mean and std.dev: (189.30, 76.78)
[0000][PE] low and high boundaries for proper pairs: (1, 564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.43, 70.82)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3630, 5102, 6111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11073)
[0000][PE] mean and std.dev: (4093.31, 1961.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13554)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 261, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 671)
[0000][PE] mean and std.dev: (225.00, 87.77)
[0000][PE] low and high boundaries for proper pairs: (1, 845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203934 reads in 378.350 CPU sec, 21.454 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516169, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.61, 70.85)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (124, 279, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 853)
[0000][PE] mean and std.dev: (243.40, 111.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1096)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204246 reads in 377.377 CPU sec, 21.299 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515930, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 230, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2351)
[0000][PE] mean and std.dev: (350.65, 297.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.54, 70.89)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 201, 300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (236.67, 110.46)
[0000][PE] low and high boundaries for proper pairs: (1, 679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 375.607 CPU sec, 21.143 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515461, 3, 27)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.82, 70.65)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 300, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1322)
[0000][PE] mean and std.dev: (366.64, 268.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1700)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 376.276 CPU sec, 21.178 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515622, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 163, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 988)
[0000][PE] mean and std.dev: (201.00, 133.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.90, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 379.032 CPU sec, 21.317 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515247, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 208, 289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (200.75, 77.03)
[0000][PE] low and high boundaries for proper pairs: (1, 760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.74, 70.62)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (115, 127, 207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 391)
[0000][PE] mean and std.dev: (161.00, 76.42)
[0000][PE] low and high boundaries for proper pairs: (1, 483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 357.589 CPU sec, 20.091 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 515725, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.67, 70.61)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 286, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (24, 584)
[0000][PE] mean and std.dev: (309.00, 103.61)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 350.099 CPU sec, 19.672 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516094, 0, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.36, 70.80)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 345.619 CPU sec, 19.448 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1203970
	[0000][ M::kt_pipeline] read 1203970 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516297, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 220, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 323)
[0000][PE] mean and std.dev: (218.82, 29.75)
[0000][PE] low and high boundaries for proper pairs: (89, 362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.76, 70.62)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 244, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (259.61, 77.86)
[0000][PE] low and high boundaries for proper pairs: (1, 942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 348.621 CPU sec, 19.596 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515950, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 264, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 408)
[0000][PE] mean and std.dev: (238.67, 56.64)
[0000][PE] low and high boundaries for proper pairs: (12, 473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.92, 70.95)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 243, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (71, 461)
[0000][PE] mean and std.dev: (225.21, 59.39)
[0000][PE] low and high boundaries for proper pairs: (1, 539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203970 reads in 351.387 CPU sec, 19.748 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515400, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 226, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 708)
[0000][PE] mean and std.dev: (235.27, 100.11)
[0000][PE] low and high boundaries for proper pairs: (1, 894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.64, 70.69)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 279, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (64, 434)
[0000][PE] mean and std.dev: (263.61, 69.19)
[0000][PE] low and high boundaries for proper pairs: (1, 540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 347.577 CPU sec, 19.573 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516332, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 183, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 443)
[0000][PE] mean and std.dev: (191.89, 71.07)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.94, 70.98)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 295, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 785)
[0000][PE] mean and std.dev: (270.08, 87.53)
[0000][PE] low and high boundaries for proper pairs: (1, 982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 351.470 CPU sec, 19.891 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516019, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.90, 70.87)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 233, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 511)
[0000][PE] mean and std.dev: (206.92, 66.66)
[0000][PE] low and high boundaries for proper pairs: (1, 633)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 349.154 CPU sec, 19.596 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515843, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 198, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 332)
[0000][PE] mean and std.dev: (201.50, 40.16)
[0000][PE] low and high boundaries for proper pairs: (41, 377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.37, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 209, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 546)
[0000][PE] mean and std.dev: (202.08, 69.34)
[0000][PE] low and high boundaries for proper pairs: (1, 675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 346.795 CPU sec, 19.479 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515565, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 235, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (171, 311)
[0000][PE] mean and std.dev: (242.89, 28.77)
[0000][PE] low and high boundaries for proper pairs: (128, 358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.61, 70.84)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 351.608 CPU sec, 19.836 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1203958
	[0000][ M::kt_pipeline] read 1203958 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515648, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 184, 228)
[0000][PE] low and high boundaries for computing mean and std.dev: (15, 370)
[0000][PE] mean and std.dev: (195.71, 57.68)
[0000][PE] low and high boundaries for proper pairs: (1, 441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.55, 70.62)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 346.773 CPU sec, 19.495 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515440, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 240, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (15, 415)
[0000][PE] mean and std.dev: (206.38, 53.86)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.51, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 202, 215)
[0000][PE] low and high boundaries for computing mean and std.dev: (11, 351)
[0000][PE] mean and std.dev: (186.92, 56.24)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203958 reads in 348.210 CPU sec, 19.600 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203874
	[0000][ M::kt_pipeline] read 1203874 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515372, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (115, 167, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 622)
[0000][PE] mean and std.dev: (173.46, 84.28)
[0000][PE] low and high boundaries for proper pairs: (1, 791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.27, 70.81)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 345.959 CPU sec, 19.443 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516312, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 246, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 458)
[0000][PE] mean and std.dev: (207.00, 58.35)
[0000][PE] low and high boundaries for proper pairs: (1, 559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.59, 70.76)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 248, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (300.00, 177.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203874 reads in 345.266 CPU sec, 19.416 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516184, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 210, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 673)
[0000][PE] mean and std.dev: (206.09, 71.30)
[0000][PE] low and high boundaries for proper pairs: (1, 845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.43, 70.84)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 345.343 CPU sec, 19.403 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516353, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.20, 70.69)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 285, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (305.73, 132.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1328)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 347.430 CPU sec, 19.535 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1203950
	[0000][ M::kt_pipeline] read 1203950 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515670, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 166, 214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 402)
[0000][PE] mean and std.dev: (157.38, 62.37)
[0000][PE] low and high boundaries for proper pairs: (1, 496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.33, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 293, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (18, 573)
[0000][PE] mean and std.dev: (272.00, 75.99)
[0000][PE] low and high boundaries for proper pairs: (1, 684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 349.245 CPU sec, 19.648 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204114
	[0000][ M::kt_pipeline] read 1204114 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516505, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 181, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 509)
[0000][PE] mean and std.dev: (182.67, 74.85)
[0000][PE] low and high boundaries for proper pairs: (1, 633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.32, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (136, 326, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1258)
[0000][PE] mean and std.dev: (349.93, 227.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203950 reads in 345.115 CPU sec, 19.454 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1204122
	[0000][ M::kt_pipeline] read 1204122 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515739, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 209, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 427)
[0000][PE] mean and std.dev: (216.08, 50.92)
[0000][PE] low and high boundaries for proper pairs: (1, 509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.25, 70.67)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 201, 240)
[0000][PE] low and high boundaries for computing mean and std.dev: (75, 350)
[0000][PE] mean and std.dev: (223.60, 59.78)
[0000][PE] low and high boundaries for proper pairs: (1, 463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204114 reads in 348.326 CPU sec, 19.627 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516287, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 188, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 631)
[0000][PE] mean and std.dev: (207.93, 65.52)
[0000][PE] low and high boundaries for proper pairs: (1, 780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.31, 70.80)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 233, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 803)
[0000][PE] mean and std.dev: (305.82, 194.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204122 reads in 347.086 CPU sec, 19.494 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516214, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 218, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 481)
[0000][PE] mean and std.dev: (215.06, 68.06)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.24, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 201, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 548)
[0000][PE] mean and std.dev: (193.17, 73.57)
[0000][PE] low and high boundaries for proper pairs: (1, 683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 345.296 CPU sec, 19.383 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204056
	[0000][ M::kt_pipeline] read 1204056 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515585, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 249, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (375.50, 338.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.54, 70.84)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 305, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 691)
[0000][PE] mean and std.dev: (229.36, 95.07)
[0000][PE] low and high boundaries for proper pairs: (1, 866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 346.708 CPU sec, 19.466 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515875, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 160, 178)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 238)
[0000][PE] mean and std.dev: (151.08, 34.13)
[0000][PE] low and high boundaries for proper pairs: (15, 288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.34, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204056 reads in 351.790 CPU sec, 19.918 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 516468, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.57)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 236, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (416.82, 356.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3182)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 343.257 CPU sec, 19.284 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515679, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 237, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (74, 414)
[0000][PE] mean and std.dev: (246.00, 72.46)
[0000][PE] low and high boundaries for proper pairs: (1, 536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.59, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (154, 242, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 682)
[0000][PE] mean and std.dev: (207.55, 95.08)
[0000][PE] low and high boundaries for proper pairs: (1, 858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 348.442 CPU sec, 19.658 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515876, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 186, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 436)
[0000][PE] mean and std.dev: (168.65, 65.08)
[0000][PE] low and high boundaries for proper pairs: (1, 537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.16, 70.82)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 250, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 795)
[0000][PE] mean and std.dev: (263.83, 101.08)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 349.006 CPU sec, 19.650 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203956
	[0000][ M::kt_pipeline] read 1203956 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516188, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 191, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (270.73, 130.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.18, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 196, 216)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 280)
[0000][PE] mean and std.dev: (189.22, 23.11)
[0000][PE] low and high boundaries for proper pairs: (88, 312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 345.346 CPU sec, 19.391 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515903, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 201, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (14, 419)
[0000][PE] mean and std.dev: (185.57, 75.10)
[0000][PE] low and high boundaries for proper pairs: (1, 500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.29, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 273, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1381)
[0000][PE] mean and std.dev: (325.13, 182.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203956 reads in 342.754 CPU sec, 19.232 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1203956
	[0000][ M::kt_pipeline] read 1203956 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515808, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 231, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (233.11, 102.82)
[0000][PE] low and high boundaries for proper pairs: (1, 753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.52, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 250, 258)
[0000][PE] low and high boundaries for computing mean and std.dev: (147, 332)
[0000][PE] mean and std.dev: (247.00, 35.88)
[0000][PE] low and high boundaries for proper pairs: (103, 391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 349.765 CPU sec, 19.712 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515590, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.51, 70.53)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 298, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 507)
[0000][PE] mean and std.dev: (249.22, 64.68)
[0000][PE] low and high boundaries for proper pairs: (1, 608)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203956 reads in 357.652 CPU sec, 20.069 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515024, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 236, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 445)
[0000][PE] mean and std.dev: (192.94, 55.26)
[0000][PE] low and high boundaries for proper pairs: (1, 548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.67, 70.57)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 244, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (56, 441)
[0000][PE] mean and std.dev: (220.09, 43.99)
[0000][PE] low and high boundaries for proper pairs: (1, 518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 350.811 CPU sec, 19.687 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515238, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 178, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 477)
[0000][PE] mean and std.dev: (205.79, 64.04)
[0000][PE] low and high boundaries for proper pairs: (1, 580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.76, 70.78)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 258, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 698)
[0000][PE] mean and std.dev: (230.89, 94.75)
[0000][PE] low and high boundaries for proper pairs: (1, 865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 355.897 CPU sec, 20.041 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516301, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 334, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.98, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 218, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (361.62, 275.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1529)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 348.461 CPU sec, 19.555 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204000
	[0000][ M::kt_pipeline] read 1204000 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516024, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 309, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (558.60, 583.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.04, 70.78)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 267, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (294.00, 103.70)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 346.931 CPU sec, 19.497 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515363, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.22, 70.85)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 222, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (26, 476)
[0000][PE] mean and std.dev: (218.00, 53.98)
[0000][PE] low and high boundaries for proper pairs: (1, 566)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204000 reads in 347.524 CPU sec, 19.530 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1203974
	[0000][ M::kt_pipeline] read 1203974 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515719, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 238, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 696)
[0000][PE] mean and std.dev: (212.07, 83.93)
[0000][PE] low and high boundaries for proper pairs: (1, 884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.97, 70.51)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (105, 168, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 651)
[0000][PE] mean and std.dev: (176.23, 85.15)
[0000][PE] low and high boundaries for proper pairs: (1, 833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 348.767 CPU sec, 19.576 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515691, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 198, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 636)
[0000][PE] mean and std.dev: (213.30, 103.40)
[0000][PE] low and high boundaries for proper pairs: (1, 790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.49, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203974 reads in 344.753 CPU sec, 19.346 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515035, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 215, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (195.90, 69.49)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.42, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 250, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 640)
[0000][PE] mean and std.dev: (239.00, 78.46)
[0000][PE] low and high boundaries for proper pairs: (1, 800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 346.843 CPU sec, 19.527 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515408, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.36, 70.81)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (141, 190, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (208.82, 73.25)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 350.710 CPU sec, 19.704 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1203996
	[0000][ M::kt_pipeline] read 1203996 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515707, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 246, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (213.82, 68.34)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.51, 70.67)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 320, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 667)
[0000][PE] mean and std.dev: (238.60, 91.85)
[0000][PE] low and high boundaries for proper pairs: (1, 836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 351.578 CPU sec, 19.902 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515540, 7, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.51, 70.68)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 201, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 615)
[0000][PE] mean and std.dev: (207.06, 75.70)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203996 reads in 346.341 CPU sec, 19.452 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204108
	[0000][ M::kt_pipeline] read 1204108 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515794, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 165, 240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 486)
[0000][PE] mean and std.dev: (180.64, 67.05)
[0000][PE] low and high boundaries for proper pairs: (1, 609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.50, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 347.638 CPU sec, 19.512 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203896
	[0000][ M::kt_pipeline] read 1203896 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515423, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 203, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (192.50, 59.89)
[0000][PE] low and high boundaries for proper pairs: (1, 607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.67, 70.81)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204108 reads in 349.373 CPU sec, 19.641 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515923, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 213, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 793)
[0000][PE] mean and std.dev: (211.10, 106.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.93, 70.98)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 239, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 622)
[0000][PE] mean and std.dev: (249.57, 83.49)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203896 reads in 343.655 CPU sec, 19.295 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516284, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 276, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (238.83, 75.28)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.94, 70.81)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 227, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 944)
[0000][PE] mean and std.dev: (261.00, 122.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 345.222 CPU sec, 19.468 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516454, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 247, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 518)
[0000][PE] mean and std.dev: (226.73, 71.59)
[0000][PE] low and high boundaries for proper pairs: (1, 624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.70, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 349.304 CPU sec, 19.679 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515460, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 185, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 447)
[0000][PE] mean and std.dev: (194.58, 94.31)
[0000][PE] low and high boundaries for proper pairs: (1, 572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.51, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 223, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 420)
[0000][PE] mean and std.dev: (200.36, 44.50)
[0000][PE] low and high boundaries for proper pairs: (1, 505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 350.700 CPU sec, 19.802 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515845, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 250, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 555)
[0000][PE] mean and std.dev: (224.43, 71.54)
[0000][PE] low and high boundaries for proper pairs: (1, 676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.60, 70.66)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 239, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (5, 545)
[0000][PE] mean and std.dev: (251.21, 68.17)
[0000][PE] low and high boundaries for proper pairs: (1, 653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 348.299 CPU sec, 19.629 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516148, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 134, 175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 299)
[0000][PE] mean and std.dev: (141.40, 46.53)
[0000][PE] low and high boundaries for proper pairs: (1, 361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.78, 70.68)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 345.802 CPU sec, 19.419 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204056
	[0000][ M::kt_pipeline] read 1204056 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515529, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 218, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 648)
[0000][PE] mean and std.dev: (205.00, 76.82)
[0000][PE] low and high boundaries for proper pairs: (1, 812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.70, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 265, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1195)
[0000][PE] mean and std.dev: (330.62, 224.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 352.560 CPU sec, 19.850 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515403, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 271, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (181, 386)
[0000][PE] mean and std.dev: (268.11, 32.87)
[0000][PE] low and high boundaries for proper pairs: (137, 427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.90, 70.77)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 235, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (572.00, 603.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204056 reads in 352.401 CPU sec, 19.818 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515265, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 174, 270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (183.70, 83.85)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.72, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 235, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (243.33, 124.38)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 358.804 CPU sec, 20.278 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515699, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.55, 70.67)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 291, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (279.67, 82.91)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 354.156 CPU sec, 19.939 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204114
	[0000][ M::kt_pipeline] read 1204114 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515582, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 312, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (279.14, 143.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.78, 70.60)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 354.687 CPU sec, 19.925 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204136
	[0000][ M::kt_pipeline] read 1204136 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 515786, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.51, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (128, 233, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 503)
[0000][PE] mean and std.dev: (206.00, 80.97)
[0000][PE] low and high boundaries for proper pairs: (1, 628)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204114 reads in 350.085 CPU sec, 19.761 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515560, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.53, 70.62)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 207, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (245.11, 105.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1134)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204136 reads in 350.033 CPU sec, 19.650 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1203908
	[0000][ M::kt_pipeline] read 1203908 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515845, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 190, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 424)
[0000][PE] mean and std.dev: (193.25, 49.57)
[0000][PE] low and high boundaries for proper pairs: (1, 511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.25, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (137, 204, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1211)
[0000][PE] mean and std.dev: (227.50, 126.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 349.685 CPU sec, 19.679 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516177, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 146, 280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 548)
[0000][PE] mean and std.dev: (192.67, 94.72)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.27, 70.48)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203908 reads in 346.957 CPU sec, 19.521 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1203972
	[0000][ M::kt_pipeline] read 1203972 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516185, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 223, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (219.30, 86.82)
[0000][PE] low and high boundaries for proper pairs: (1, 671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.18, 70.68)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 351.353 CPU sec, 19.791 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515952, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 220, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 456)
[0000][PE] mean and std.dev: (176.56, 76.88)
[0000][PE] low and high boundaries for proper pairs: (1, 572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.35, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 235, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 502)
[0000][PE] mean and std.dev: (223.93, 94.07)
[0000][PE] low and high boundaries for proper pairs: (1, 615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203972 reads in 344.413 CPU sec, 19.356 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204136
	[0000][ M::kt_pipeline] read 1204136 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515574, 3, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.39, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 215, 270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 512)
[0000][PE] mean and std.dev: (240.95, 98.85)
[0000][PE] low and high boundaries for proper pairs: (1, 636)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 346.471 CPU sec, 19.453 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203928
	[0000][ M::kt_pipeline] read 1203928 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515938, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 235, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 351)
[0000][PE] mean and std.dev: (243.64, 53.74)
[0000][PE] low and high boundaries for proper pairs: (29, 459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.10, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (126, 193, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 552)
[0000][PE] mean and std.dev: (186.00, 60.71)
[0000][PE] low and high boundaries for proper pairs: (1, 694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204136 reads in 347.479 CPU sec, 19.560 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516055, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 222, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 742)
[0000][PE] mean and std.dev: (238.00, 103.66)
[0000][PE] low and high boundaries for proper pairs: (1, 933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.24, 70.60)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 169, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 774)
[0000][PE] mean and std.dev: (231.00, 98.21)
[0000][PE] low and high boundaries for proper pairs: (1, 978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203928 reads in 345.856 CPU sec, 19.456 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 516591, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.22, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 347.113 CPU sec, 19.500 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515833, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.21, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 288, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 468)
[0000][PE] mean and std.dev: (273.00, 55.64)
[0000][PE] low and high boundaries for proper pairs: (50, 535)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 343.475 CPU sec, 19.291 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1203950
	[0000][ M::kt_pipeline] read 1203950 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516000, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 190, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (34, 339)
[0000][PE] mean and std.dev: (170.92, 37.32)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 286, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 538)
[0000][PE] mean and std.dev: (245.75, 60.31)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 344.529 CPU sec, 19.360 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516063, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.24, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 241, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 482)
[0000][PE] mean and std.dev: (247.40, 66.91)
[0000][PE] low and high boundaries for proper pairs: (1, 574)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203950 reads in 345.937 CPU sec, 19.489 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515831, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 173, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (506.20, 633.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.34, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 245, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 681)
[0000][PE] mean and std.dev: (266.00, 85.18)
[0000][PE] low and high boundaries for proper pairs: (1, 841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 347.199 CPU sec, 19.529 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1203922
	[0000][ M::kt_pipeline] read 1203922 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515869, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.10, 70.67)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 218, 258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 446)
[0000][PE] mean and std.dev: (203.19, 76.85)
[0000][PE] low and high boundaries for proper pairs: (1, 540)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 347.214 CPU sec, 19.599 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515954, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 198, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 376)
[0000][PE] mean and std.dev: (189.92, 54.35)
[0000][PE] low and high boundaries for proper pairs: (1, 452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.13, 70.68)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203922 reads in 344.177 CPU sec, 19.407 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516039, 1, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.35, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 260, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (367.88, 224.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1343)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 353.897 CPU sec, 20.027 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515751, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 210, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 526)
[0000][PE] mean and std.dev: (226.40, 100.21)
[0000][PE] low and high boundaries for proper pairs: (1, 645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.29, 70.61)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 207, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 852)
[0000][PE] mean and std.dev: (248.79, 89.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 347.330 CPU sec, 19.535 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1203920
	[0000][ M::kt_pipeline] read 1203920 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515633, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.23, 70.68)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 192, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 543)
[0000][PE] mean and std.dev: (221.58, 89.65)
[0000][PE] low and high boundaries for proper pairs: (1, 661)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 360.770 CPU sec, 20.307 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1203994
	[0000][ M::kt_pipeline] read 1203994 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515713, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 139, 235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 487)
[0000][PE] mean and std.dev: (171.18, 78.21)
[0000][PE] low and high boundaries for proper pairs: (1, 613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.78, 70.45)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (153, 197, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 639)
[0000][PE] mean and std.dev: (194.40, 55.98)
[0000][PE] low and high boundaries for proper pairs: (1, 801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203920 reads in 359.976 CPU sec, 20.414 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204122
	[0000][ M::kt_pipeline] read 1204122 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516262, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.90, 70.58)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (156, 254, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (606.08, 661.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203994 reads in 361.482 CPU sec, 29.102 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515884, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 197, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (215.09, 75.30)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.80, 70.51)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 220, 220)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 282)
[0000][PE] mean and std.dev: (205.33, 23.95)
[0000][PE] low and high boundaries for proper pairs: (96, 313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204122 reads in 358.992 CPU sec, 20.231 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516323, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 197, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (211.27, 116.92)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.80, 70.68)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 253, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (274.56, 112.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 354.531 CPU sec, 19.947 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1203808
	[0000][ M::kt_pipeline] read 1203808 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515368, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 574)
[0000][PE] mean and std.dev: (337.96, 70.71)
[0000][PE] low and high boundaries for proper pairs: (4, 669)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 330, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 449)
[0000][PE] mean and std.dev: (307.67, 46.34)
[0000][PE] low and high boundaries for proper pairs: (122, 502)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 353.337 CPU sec, 19.892 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1203966
	[0000][ M::kt_pipeline] read 1203966 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515364, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 232, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (196.00, 84.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.80, 70.64)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (153, 186, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 783)
[0000][PE] mean and std.dev: (217.33, 100.83)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203808 reads in 351.733 CPU sec, 19.794 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516188, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 269, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 525)
[0000][PE] mean and std.dev: (239.90, 83.76)
[0000][PE] low and high boundaries for proper pairs: (1, 640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.03, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203966 reads in 349.761 CPU sec, 19.687 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204056
	[0000][ M::kt_pipeline] read 1204056 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515986, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 197, 226)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 294)
[0000][PE] mean and std.dev: (207.80, 29.11)
[0000][PE] low and high boundaries for proper pairs: (90, 328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.99, 70.46)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 256, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 459)
[0000][PE] mean and std.dev: (256.29, 66.17)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 340.304 CPU sec, 19.148 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515895, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 182, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 461)
[0000][PE] mean and std.dev: (208.86, 79.95)
[0000][PE] low and high boundaries for proper pairs: (1, 560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.12, 70.78)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 295, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 517)
[0000][PE] mean and std.dev: (242.25, 59.32)
[0000][PE] low and high boundaries for proper pairs: (1, 622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204056 reads in 343.813 CPU sec, 19.307 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515114, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (100, 138, 188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 364)
[0000][PE] mean and std.dev: (141.07, 53.39)
[0000][PE] low and high boundaries for proper pairs: (1, 452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.25, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 415)
[0000][PE] mean and std.dev: (239.65, 70.88)
[0000][PE] low and high boundaries for proper pairs: (1, 523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 351.751 CPU sec, 19.763 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515324, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 171, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 541)
[0000][PE] mean and std.dev: (224.40, 126.55)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.40, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 348.401 CPU sec, 19.552 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516045, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 154, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 431)
[0000][PE] mean and std.dev: (171.29, 62.02)
[0000][PE] low and high boundaries for proper pairs: (1, 528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.54, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 345.830 CPU sec, 19.437 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515932, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.45, 70.59)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 268, 292)
[0000][PE] low and high boundaries for computing mean and std.dev: (202, 352)
[0000][PE] mean and std.dev: (260.20, 27.27)
[0000][PE] low and high boundaries for proper pairs: (151, 382)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 348.560 CPU sec, 19.610 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515153, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 281, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 625)
[0000][PE] mean and std.dev: (233.22, 85.77)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.55, 70.76)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 403, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 871)
[0000][PE] mean and std.dev: (261.50, 112.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 355.433 CPU sec, 20.026 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516134, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 178, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 517)
[0000][PE] mean and std.dev: (187.00, 77.98)
[0000][PE] low and high boundaries for proper pairs: (1, 648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.65, 70.55)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 348.904 CPU sec, 19.603 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515678, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 164, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 656)
[0000][PE] mean and std.dev: (201.31, 83.84)
[0000][PE] low and high boundaries for proper pairs: (1, 830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.65, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 348.310 CPU sec, 19.615 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516193, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 144, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (168.92, 66.94)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.70, 70.81)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 352.422 CPU sec, 19.820 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203756
	[0000][ M::kt_pipeline] read 1203756 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516341, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 183, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (80, 320)
[0000][PE] mean and std.dev: (171.58, 45.67)
[0000][PE] low and high boundaries for proper pairs: (1, 368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.62, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (129, 177, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 519)
[0000][PE] mean and std.dev: (208.57, 112.82)
[0000][PE] low and high boundaries for proper pairs: (1, 660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 348.992 CPU sec, 19.638 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 516261, 2, 23)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.65, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (118, 215, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 883)
[0000][PE] mean and std.dev: (190.32, 96.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203756 reads in 348.335 CPU sec, 19.593 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515677, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.63, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 240, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (258.90, 95.16)
[0000][PE] low and high boundaries for proper pairs: (1, 955)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 351.685 CPU sec, 19.817 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 516692, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.90, 70.99)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 350.387 CPU sec, 19.656 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515717, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 200, 289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (263.18, 184.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.00, 70.78)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 232, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 475)
[0000][PE] mean and std.dev: (214.93, 50.32)
[0000][PE] low and high boundaries for proper pairs: (1, 573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 355.223 CPU sec, 19.965 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516245, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 256, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 517)
[0000][PE] mean and std.dev: (240.07, 70.67)
[0000][PE] low and high boundaries for proper pairs: (1, 616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.62, 70.67)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (127, 195, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 649)
[0000][PE] mean and std.dev: (197.21, 87.25)
[0000][PE] low and high boundaries for proper pairs: (1, 823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 354.064 CPU sec, 19.882 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1203948
	[0000][ M::kt_pipeline] read 1203948 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516220, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 207, 252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 464)
[0000][PE] mean and std.dev: (189.53, 83.80)
[0000][PE] low and high boundaries for proper pairs: (1, 570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.39, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 205, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 331)
[0000][PE] mean and std.dev: (203.78, 44.78)
[0000][PE] low and high boundaries for proper pairs: (25, 383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 348.383 CPU sec, 19.578 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203942
	[0000][ M::kt_pipeline] read 1203942 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516151, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 165, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 537)
[0000][PE] mean and std.dev: (196.09, 74.77)
[0000][PE] low and high boundaries for proper pairs: (1, 669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.29, 70.59)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 276, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (251.92, 91.03)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203948 reads in 352.708 CPU sec, 19.828 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204012
	[0000][ M::kt_pipeline] read 1204012 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516091, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.62, 70.62)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (110, 176, 272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (190.93, 85.26)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203942 reads in 346.943 CPU sec, 19.511 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515516, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 175, 272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 614)
[0000][PE] mean and std.dev: (194.92, 104.76)
[0000][PE] low and high boundaries for proper pairs: (1, 785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.62, 70.55)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (109, 190, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 763)
[0000][PE] mean and std.dev: (211.46, 99.48)
[0000][PE] low and high boundaries for proper pairs: (1, 981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204012 reads in 359.895 CPU sec, 20.299 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516086, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 237, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (63, 423)
[0000][PE] mean and std.dev: (226.33, 31.67)
[0000][PE] low and high boundaries for proper pairs: (1, 495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.25, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 257, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 631)
[0000][PE] mean and std.dev: (238.10, 89.58)
[0000][PE] low and high boundaries for proper pairs: (1, 785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 351.879 CPU sec, 19.796 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515872, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 263, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 624)
[0000][PE] mean and std.dev: (277.87, 80.12)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 350.250 CPU sec, 19.674 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516040, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 241, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (18, 423)
[0000][PE] mean and std.dev: (204.18, 64.45)
[0000][PE] low and high boundaries for proper pairs: (1, 504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.52, 70.68)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 354.340 CPU sec, 19.948 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516585, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.23, 70.50)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 275, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (250.40, 78.31)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 352.975 CPU sec, 20.015 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000281 bp)...
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204036
	[0000][ M::kt_pipeline] read 1204036 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515848, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 162, 247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 487)
[0000][PE] mean and std.dev: (178.93, 56.01)
[0000][PE] low and high boundaries for proper pairs: (1, 607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.44, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 225, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 697)
[0000][PE] mean and std.dev: (231.11, 100.94)
[0000][PE] low and high boundaries for proper pairs: (1, 873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 351.385 CPU sec, 19.980 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515501, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 168, 254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 464)
[0000][PE] mean and std.dev: (194.20, 49.75)
[0000][PE] low and high boundaries for proper pairs: (1, 569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.28, 70.59)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 295, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 485)
[0000][PE] mean and std.dev: (294.18, 69.17)
[0000][PE] low and high boundaries for proper pairs: (17, 571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204036 reads in 355.981 CPU sec, 20.061 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204026
	[0000][ M::kt_pipeline] read 1204026 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516162, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 242, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 642)
[0000][PE] mean and std.dev: (246.00, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 806)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 355.922 CPU sec, 20.034 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516436, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 157, 220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 398)
[0000][PE] mean and std.dev: (155.50, 63.56)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.39, 70.57)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 198, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 532)
[0000][PE] mean and std.dev: (209.85, 84.28)
[0000][PE] low and high boundaries for proper pairs: (1, 659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204026 reads in 351.220 CPU sec, 19.732 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515954, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 141, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 653)
[0000][PE] mean and std.dev: (180.73, 83.57)
[0000][PE] low and high boundaries for proper pairs: (1, 828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.36, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 299, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1297)
[0000][PE] mean and std.dev: (291.54, 163.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 354.713 CPU sec, 20.013 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516184, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 220, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 724)
[0000][PE] mean and std.dev: (216.30, 94.80)
[0000][PE] low and high boundaries for proper pairs: (1, 926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.45, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 209, 297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 541)
[0000][PE] mean and std.dev: (224.23, 86.57)
[0000][PE] low and high boundaries for proper pairs: (1, 663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 350.309 CPU sec, 19.690 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203982
	[0000][ M::kt_pipeline] read 1203982 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515628, 2, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.26, 70.52)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 232, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (74, 389)
[0000][PE] mean and std.dev: (226.00, 59.01)
[0000][PE] low and high boundaries for proper pairs: (1, 462)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 355.093 CPU sec, 20.121 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204024
	[0000][ M::kt_pipeline] read 1204024 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515780, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 203, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 521)
[0000][PE] mean and std.dev: (177.45, 65.58)
[0000][PE] low and high boundaries for proper pairs: (1, 643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.49, 70.59)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 214, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (317.58, 236.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203982 reads in 352.012 CPU sec, 19.859 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515717, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.38, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 258, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (257.58, 110.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1153)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204024 reads in 352.915 CPU sec, 19.864 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204024
	[0000][ M::kt_pipeline] read 1204024 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516188, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 141, 247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 507)
[0000][PE] mean and std.dev: (181.67, 103.10)
[0000][PE] low and high boundaries for proper pairs: (1, 637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.69)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 238, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (223.12, 102.45)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 350.092 CPU sec, 19.706 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516406, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 278, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 392)
[0000][PE] mean and std.dev: (249.46, 44.53)
[0000][PE] low and high boundaries for proper pairs: (50, 449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.15, 70.57)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204024 reads in 353.489 CPU sec, 19.963 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204024
	[0000][ M::kt_pipeline] read 1204024 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516124, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 223, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (209.67, 81.86)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.72)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 218, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (220.20, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 349.721 CPU sec, 19.666 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515783, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 168, 199)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 319)
[0000][PE] mean and std.dev: (165.17, 47.60)
[0000][PE] low and high boundaries for proper pairs: (1, 379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.53, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 177, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 670)
[0000][PE] mean and std.dev: (193.83, 76.93)
[0000][PE] low and high boundaries for proper pairs: (1, 843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204024 reads in 352.066 CPU sec, 19.985 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1203966
	[0000][ M::kt_pipeline] read 1203966 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515919, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.48, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (127, 229, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 652)
[0000][PE] mean and std.dev: (208.08, 76.16)
[0000][PE] low and high boundaries for proper pairs: (1, 827)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 357.506 CPU sec, 20.240 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515904, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.18, 70.48)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 226, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (316.56, 250.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3114)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203966 reads in 367.064 CPU sec, 20.609 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516393, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 261, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2034)
[0000][PE] mean and std.dev: (435.77, 420.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.05, 70.58)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 359.522 CPU sec, 20.346 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516321, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 246, 246)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 332)
[0000][PE] mean and std.dev: (233.15, 39.90)
[0000][PE] low and high boundaries for proper pairs: (74, 393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.37, 70.61)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (124, 199, 249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 499)
[0000][PE] mean and std.dev: (185.00, 58.04)
[0000][PE] low and high boundaries for proper pairs: (1, 624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 352.902 CPU sec, 19.834 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204178
	[0000][ M::kt_pipeline] read 1204178 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515785, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 199, 238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 454)
[0000][PE] mean and std.dev: (183.21, 50.05)
[0000][PE] low and high boundaries for proper pairs: (1, 562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.43, 70.66)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 201, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 356)
[0000][PE] mean and std.dev: (191.45, 35.67)
[0000][PE] low and high boundaries for proper pairs: (38, 409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 357.917 CPU sec, 20.173 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204010
	[0000][ M::kt_pipeline] read 1204010 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515748, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 228, 248)
[0000][PE] low and high boundaries for computing mean and std.dev: (179, 294)
[0000][PE] mean and std.dev: (226.62, 17.06)
[0000][PE] low and high boundaries for proper pairs: (156, 317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.48, 70.63)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 355, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 789)
[0000][PE] mean and std.dev: (301.09, 157.72)
[0000][PE] low and high boundaries for proper pairs: (1, 997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204178 reads in 355.973 CPU sec, 20.031 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515341, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 238, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (250.73, 60.04)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 334, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.52, 70.48)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (929, 2682, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1941.80, 1207.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 209, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 479)
[0000][PE] mean and std.dev: (199.72, 73.16)
[0000][PE] low and high boundaries for proper pairs: (1, 591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204010 reads in 355.418 CPU sec, 20.021 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1203950
	[0000][ M::kt_pipeline] read 1203950 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515538, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 175, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 700)
[0000][PE] mean and std.dev: (189.90, 91.22)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.68, 70.58)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 176, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1413)
[0000][PE] mean and std.dev: (216.10, 130.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 355.970 CPU sec, 20.020 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515714, 11, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.13, 70.53)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (393, 434, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1087.82, 1155.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 236, 283)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 401)
[0000][PE] mean and std.dev: (233.56, 49.78)
[0000][PE] low and high boundaries for proper pairs: (34, 460)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203950 reads in 354.788 CPU sec, 19.979 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1203942
	[0000][ M::kt_pipeline] read 1203942 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515536, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 262, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2236)
[0000][PE] mean and std.dev: (635.36, 768.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.91, 70.58)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 243, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 382)
[0000][PE] mean and std.dev: (256.13, 50.25)
[0000][PE] low and high boundaries for proper pairs: (55, 457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 359.264 CPU sec, 20.203 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1203904
	[0000][ M::kt_pipeline] read 1203904 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515389, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 253, 285)
[0000][PE] low and high boundaries for computing mean and std.dev: (42, 447)
[0000][PE] mean and std.dev: (246.94, 89.96)
[0000][PE] low and high boundaries for proper pairs: (1, 607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.17, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 247, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 456)
[0000][PE] mean and std.dev: (227.54, 76.51)
[0000][PE] low and high boundaries for proper pairs: (1, 539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203942 reads in 361.442 CPU sec, 20.436 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515891, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 221, 229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 461)
[0000][PE] mean and std.dev: (181.00, 61.50)
[0000][PE] low and high boundaries for proper pairs: (1, 577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.06, 70.60)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 231, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 523)
[0000][PE] mean and std.dev: (237.23, 63.35)
[0000][PE] low and high boundaries for proper pairs: (1, 637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203904 reads in 359.622 CPU sec, 20.359 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515457, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 160, 229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 399)
[0000][PE] mean and std.dev: (183.45, 54.58)
[0000][PE] low and high boundaries for proper pairs: (1, 484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.00, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 303, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (465.00, 376.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 361.596 CPU sec, 20.353 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515993, 6, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.26, 70.78)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 240, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 500)
[0000][PE] mean and std.dev: (235.90, 58.89)
[0000][PE] low and high boundaries for proper pairs: (1, 605)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 355.806 CPU sec, 19.998 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515656, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 219, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (208.77, 69.27)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.50, 70.80)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 231, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1377)
[0000][PE] mean and std.dev: (256.50, 185.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 360.970 CPU sec, 20.304 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515598, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (338.07, 70.33)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 355.397 CPU sec, 19.996 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203992
	[0000][ M::kt_pipeline] read 1203992 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515328, 0, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.28, 70.52)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 247, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (360.25, 354.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 356.799 CPU sec, 20.095 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515640, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 168, 260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 520)
[0000][PE] mean and std.dev: (173.83, 60.53)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.22, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (120, 162, 216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 408)
[0000][PE] mean and std.dev: (176.82, 85.04)
[0000][PE] low and high boundaries for proper pairs: (1, 517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203992 reads in 352.784 CPU sec, 19.831 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204248
	[0000][ M::kt_pipeline] read 1204248 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516726, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.32, 70.78)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 360.477 CPU sec, 20.261 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515471, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 179, 208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 356)
[0000][PE] mean and std.dev: (173.18, 40.82)
[0000][PE] low and high boundaries for proper pairs: (1, 430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.42, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 194, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 487)
[0000][PE] mean and std.dev: (203.58, 60.58)
[0000][PE] low and high boundaries for proper pairs: (1, 587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204248 reads in 359.608 CPU sec, 20.214 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1203928
	[0000][ M::kt_pipeline] read 1203928 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516128, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 164, 206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 358)
[0000][PE] mean and std.dev: (175.15, 74.31)
[0000][PE] low and high boundaries for proper pairs: (1, 472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.15, 70.62)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 358.384 CPU sec, 20.230 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515926, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 232, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 691)
[0000][PE] mean and std.dev: (235.00, 83.23)
[0000][PE] low and high boundaries for proper pairs: (1, 868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.49, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 246, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 546)
[0000][PE] mean and std.dev: (230.47, 63.24)
[0000][PE] low and high boundaries for proper pairs: (1, 663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203928 reads in 354.172 CPU sec, 19.915 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515642, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 185, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 553)
[0000][PE] mean and std.dev: (179.64, 72.85)
[0000][PE] low and high boundaries for proper pairs: (1, 692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.52, 70.67)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (122, 193, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 662)
[0000][PE] mean and std.dev: (186.00, 73.22)
[0000][PE] low and high boundaries for proper pairs: (1, 842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 358.599 CPU sec, 20.153 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515960, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.29, 70.73)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 204, 297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 535)
[0000][PE] mean and std.dev: (224.40, 57.31)
[0000][PE] low and high boundaries for proper pairs: (1, 654)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 360.920 CPU sec, 20.320 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516177, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 322, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 629)
[0000][PE] mean and std.dev: (269.30, 74.01)
[0000][PE] low and high boundaries for proper pairs: (1, 779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.26, 70.76)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 229, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (221.27, 97.77)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 357.454 CPU sec, 20.237 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204036
	[0000][ M::kt_pipeline] read 1204036 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516173, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 179, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 691)
[0000][PE] mean and std.dev: (198.08, 94.45)
[0000][PE] low and high boundaries for proper pairs: (1, 874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.29, 70.76)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 225, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 772)
[0000][PE] mean and std.dev: (213.21, 69.58)
[0000][PE] low and high boundaries for proper pairs: (1, 966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 360.521 CPU sec, 20.279 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203990
	[0000][ M::kt_pipeline] read 1203990 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515635, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 178, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1301)
[0000][PE] mean and std.dev: (254.44, 154.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.07, 70.68)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 275, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 640)
[0000][PE] mean and std.dev: (275.80, 96.98)
[0000][PE] low and high boundaries for proper pairs: (1, 778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204036 reads in 361.073 CPU sec, 20.316 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514924, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 143, 264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (137.75, 64.40)
[0000][PE] low and high boundaries for proper pairs: (1, 747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.24, 70.58)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 238, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1015)
[0000][PE] mean and std.dev: (276.00, 135.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203990 reads in 367.127 CPU sec, 20.721 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516089, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 162, 175)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 235)
[0000][PE] mean and std.dev: (158.10, 30.55)
[0000][PE] low and high boundaries for proper pairs: (36, 280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.22, 70.54)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 285, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (233.60, 105.30)
[0000][PE] low and high boundaries for proper pairs: (1, 958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 358.473 CPU sec, 20.198 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515746, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.06, 70.60)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (126, 202, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (194.55, 80.31)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 360.789 CPU sec, 20.309 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516224, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 140, 188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 336)
[0000][PE] mean and std.dev: (152.94, 56.58)
[0000][PE] low and high boundaries for proper pairs: (1, 410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.96, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (99, 168, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 498)
[0000][PE] mean and std.dev: (171.31, 91.87)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 357.844 CPU sec, 20.265 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204094
	[0000][ M::kt_pipeline] read 1204094 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516034, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 229, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (505.91, 496.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (338.04, 70.41)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 353.464 CPU sec, 19.889 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516422, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 186, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 494)
[0000][PE] mean and std.dev: (204.00, 77.99)
[0000][PE] low and high boundaries for proper pairs: (1, 613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.19, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204094 reads in 358.271 CPU sec, 20.219 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515594, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 133, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 697)
[0000][PE] mean and std.dev: (174.33, 78.86)
[0000][PE] low and high boundaries for proper pairs: (1, 886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.93, 70.33)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 236, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (633.36, 734.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 360.058 CPU sec, 20.284 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515519, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 217, 252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 514)
[0000][PE] mean and std.dev: (186.00, 73.77)
[0000][PE] low and high boundaries for proper pairs: (1, 645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.67, 70.47)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 254, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 515)
[0000][PE] mean and std.dev: (237.25, 72.48)
[0000][PE] low and high boundaries for proper pairs: (1, 622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 357.747 CPU sec, 20.118 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203956
	[0000][ M::kt_pipeline] read 1203956 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516596, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 281, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (234.23, 103.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.83, 70.46)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 201, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 508)
[0000][PE] mean and std.dev: (209.70, 62.46)
[0000][PE] low and high boundaries for proper pairs: (1, 621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 356.960 CPU sec, 20.081 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516013, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 204, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (184.09, 92.17)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 571)
[0000][PE] mean and std.dev: (337.64, 70.50)
[0000][PE] low and high boundaries for proper pairs: (7, 665)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 245, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 843)
[0000][PE] mean and std.dev: (243.33, 84.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203956 reads in 360.632 CPU sec, 20.326 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203998
	[0000][ M::kt_pipeline] read 1203998 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515658, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 218, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (238.38, 77.13)
[0000][PE] low and high boundaries for proper pairs: (1, 795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.77, 70.42)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 222, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 523)
[0000][PE] mean and std.dev: (223.78, 59.10)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 354.897 CPU sec, 20.029 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204054
	[0000][ M::kt_pipeline] read 1204054 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515860, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 226, 252)
[0000][PE] low and high boundaries for computing mean and std.dev: (57, 382)
[0000][PE] mean and std.dev: (202.18, 40.50)
[0000][PE] low and high boundaries for proper pairs: (1, 447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.99, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203998 reads in 354.640 CPU sec, 20.006 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516110, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 235, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 795)
[0000][PE] mean and std.dev: (254.82, 91.79)
[0000][PE] low and high boundaries for proper pairs: (1, 990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.02, 70.62)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 332, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 832)
[0000][PE] mean and std.dev: (264.92, 91.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204054 reads in 353.484 CPU sec, 20.062 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1203976
	[0000][ M::kt_pipeline] read 1203976 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516044, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 180, 235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 397)
[0000][PE] mean and std.dev: (212.36, 82.57)
[0000][PE] low and high boundaries for proper pairs: (1, 543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.98, 70.64)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 357.158 CPU sec, 20.094 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515331, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 174, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 536)
[0000][PE] mean and std.dev: (182.65, 72.39)
[0000][PE] low and high boundaries for proper pairs: (1, 667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (337.92, 70.57)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 241, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (260.33, 160.36)
[0000][PE] low and high boundaries for proper pairs: (1, 948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203976 reads in 359.237 CPU sec, 20.253 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1203982
	[0000][ M::kt_pipeline] read 1203982 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515275, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 214, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 535)
[0000][PE] mean and std.dev: (192.38, 52.36)
[0000][PE] low and high boundaries for proper pairs: (1, 666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.74, 70.35)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 270, 3398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9874)
[0000][PE] mean and std.dev: (1160.40, 1465.88)
[0000][PE] low and high boundaries for proper pairs: (1, 13112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 358.964 CPU sec, 20.240 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516328, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 250, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (214.64, 59.26)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.89, 70.43)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 282, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (275.58, 109.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203982 reads in 364.238 CPU sec, 20.527 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1203932
	[0000][ M::kt_pipeline] read 1203932 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515595, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 280, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 572)
[0000][PE] mean and std.dev: (240.67, 81.74)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.91, 70.49)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 302, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 961)
[0000][PE] mean and std.dev: (290.10, 110.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 364.952 CPU sec, 20.589 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 516184, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.04, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 205, 220)
[0000][PE] low and high boundaries for computing mean and std.dev: (64, 324)
[0000][PE] mean and std.dev: (185.18, 24.19)
[0000][PE] low and high boundaries for proper pairs: (12, 376)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203932 reads in 366.439 CPU sec, 20.629 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204028
	[0000][ M::kt_pipeline] read 1204028 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515310, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (337.85, 70.49)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 369.287 CPU sec, 20.831 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204094
	[0000][ M::kt_pipeline] read 1204094 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515322, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 220, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (248.00, 77.30)
[0000][PE] low and high boundaries for proper pairs: (1, 854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.30, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 198, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 567)
[0000][PE] mean and std.dev: (222.90, 47.47)
[0000][PE] low and high boundaries for proper pairs: (1, 690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204028 reads in 365.561 CPU sec, 20.609 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515533, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 234, 252)
[0000][PE] low and high boundaries for computing mean and std.dev: (54, 384)
[0000][PE] mean and std.dev: (213.71, 53.02)
[0000][PE] low and high boundaries for proper pairs: (1, 450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.23, 70.78)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 205, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (220.08, 63.63)
[0000][PE] low and high boundaries for proper pairs: (1, 695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204094 reads in 365.602 CPU sec, 20.614 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204110
	[0000][ M::kt_pipeline] read 1204110 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515685, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 178, 183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (156.19, 36.29)
[0000][PE] low and high boundaries for proper pairs: (1, 393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 569)
[0000][PE] mean and std.dev: (338.00, 70.37)
[0000][PE] low and high boundaries for proper pairs: (11, 662)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 362.235 CPU sec, 20.341 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204082
	[0000][ M::kt_pipeline] read 1204082 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515711, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.62, 70.88)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (132, 186, 246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 474)
[0000][PE] mean and std.dev: (189.64, 54.32)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204110 reads in 364.588 CPU sec, 20.536 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1203888
	[0000][ M::kt_pipeline] read 1203888 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515206, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (91, 165, 173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (132.83, 39.13)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.69, 70.71)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204082 reads in 369.308 CPU sec, 20.762 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515412, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 325, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (260.42, 77.13)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.57, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203888 reads in 370.067 CPU sec, 21.012 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515522, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 192, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 406)
[0000][PE] mean and std.dev: (174.81, 50.31)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.84, 71.04)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 238, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 858)
[0000][PE] mean and std.dev: (231.00, 85.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 367.735 CPU sec, 20.708 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515054, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 209, 220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (188.47, 68.73)
[0000][PE] low and high boundaries for proper pairs: (1, 463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.69, 71.10)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 232, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 494)
[0000][PE] mean and std.dev: (248.85, 71.57)
[0000][PE] low and high boundaries for proper pairs: (1, 584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 368.943 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515181, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 184, 221)
[0000][PE] low and high boundaries for computing mean and std.dev: (77, 317)
[0000][PE] mean and std.dev: (176.72, 32.70)
[0000][PE] low and high boundaries for proper pairs: (29, 365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.64, 70.87)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (144, 195, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 678)
[0000][PE] mean and std.dev: (228.33, 96.11)
[0000][PE] low and high boundaries for proper pairs: (1, 856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 372.840 CPU sec, 21.014 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204090
	[0000][ M::kt_pipeline] read 1204090 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515805, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.63, 70.63)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 361.732 CPU sec, 20.382 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516477, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 226, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 479)
[0000][PE] mean and std.dev: (212.58, 57.01)
[0000][PE] low and high boundaries for proper pairs: (1, 587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.02, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 186, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (7, 402)
[0000][PE] mean and std.dev: (191.57, 60.02)
[0000][PE] low and high boundaries for proper pairs: (1, 481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204090 reads in 370.172 CPU sec, 20.941 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515701, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 196, 207)
[0000][PE] low and high boundaries for computing mean and std.dev: (9, 339)
[0000][PE] mean and std.dev: (179.70, 51.52)
[0000][PE] low and high boundaries for proper pairs: (1, 405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.06, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 215, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 345)
[0000][PE] mean and std.dev: (185.64, 54.34)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 367.641 CPU sec, 20.685 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204134
	[0000][ M::kt_pipeline] read 1204134 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515582, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 200, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 744)
[0000][PE] mean and std.dev: (216.58, 96.28)
[0000][PE] low and high boundaries for proper pairs: (1, 945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.07, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 208, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 536)
[0000][PE] mean and std.dev: (215.50, 80.70)
[0000][PE] low and high boundaries for proper pairs: (1, 665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 367.254 CPU sec, 20.693 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515292, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 211, 265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 471)
[0000][PE] mean and std.dev: (191.80, 61.48)
[0000][PE] low and high boundaries for proper pairs: (1, 574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.15, 71.05)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 190, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (27, 377)
[0000][PE] mean and std.dev: (196.73, 62.79)
[0000][PE] low and high boundaries for proper pairs: (1, 448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204134 reads in 368.363 CPU sec, 20.735 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515781, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 170, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 495)
[0000][PE] mean and std.dev: (180.00, 82.84)
[0000][PE] low and high boundaries for proper pairs: (1, 620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.22, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 186, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (218.15, 107.95)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 364.537 CPU sec, 20.496 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516045, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 163, 189)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 285)
[0000][PE] mean and std.dev: (172.40, 48.79)
[0000][PE] low and high boundaries for proper pairs: (1, 368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.98, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 247, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 456)
[0000][PE] mean and std.dev: (235.18, 65.88)
[0000][PE] low and high boundaries for proper pairs: (1, 539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 368.448 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515858, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 203, 270)
[0000][PE] low and high boundaries for computing mean and std.dev: (18, 438)
[0000][PE] mean and std.dev: (215.52, 61.00)
[0000][PE] low and high boundaries for proper pairs: (1, 522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.07, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 361.735 CPU sec, 20.343 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515634, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.31, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (140, 177, 247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 461)
[0000][PE] mean and std.dev: (187.90, 65.27)
[0000][PE] low and high boundaries for proper pairs: (1, 568)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 362.171 CPU sec, 20.368 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515714, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.27, 70.73)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 235, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (325.29, 188.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1494)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 361.663 CPU sec, 20.420 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515532, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 217, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 918)
[0000][PE] mean and std.dev: (222.31, 154.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.01, 70.70)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 186, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 525)
[0000][PE] mean and std.dev: (203.56, 94.56)
[0000][PE] low and high boundaries for proper pairs: (1, 640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 369.845 CPU sec, 20.851 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515461, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 167, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 453)
[0000][PE] mean and std.dev: (191.57, 62.26)
[0000][PE] low and high boundaries for proper pairs: (1, 550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.15, 70.75)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 278, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 681)
[0000][PE] mean and std.dev: (245.64, 67.86)
[0000][PE] low and high boundaries for proper pairs: (1, 844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 382.229 CPU sec, 21.503 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516373, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 174, 199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 401)
[0000][PE] mean and std.dev: (147.18, 52.40)
[0000][PE] low and high boundaries for proper pairs: (1, 502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.22, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 249, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (5, 525)
[0000][PE] mean and std.dev: (243.69, 73.06)
[0000][PE] low and high boundaries for proper pairs: (1, 629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 372.513 CPU sec, 20.961 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515241, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 184, 227)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 343)
[0000][PE] mean and std.dev: (191.36, 43.32)
[0000][PE] low and high boundaries for proper pairs: (1, 401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.09, 70.80)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 235, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (236.79, 79.43)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 377.585 CPU sec, 21.360 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1203972
	[0000][ M::kt_pipeline] read 1203972 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515496, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 223, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (23, 433)
[0000][PE] mean and std.dev: (222.80, 48.45)
[0000][PE] low and high boundaries for proper pairs: (1, 515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.27, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 270, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 712)
[0000][PE] mean and std.dev: (262.13, 135.59)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 369.933 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516380, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 157, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8083)
[0000][PE] mean and std.dev: (825.42, 1133.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.00, 70.77)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 274, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (574.31, 422.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203972 reads in 364.058 CPU sec, 20.491 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1203898
	[0000][ M::kt_pipeline] read 1203898 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514979, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.17, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 265, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 657)
[0000][PE] mean and std.dev: (269.53, 74.40)
[0000][PE] low and high boundaries for proper pairs: (1, 806)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 365.188 CPU sec, 20.535 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1203976
	[0000][ M::kt_pipeline] read 1203976 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515824, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 146, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 541)
[0000][PE] mean and std.dev: (174.33, 67.17)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.10, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 301, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1147)
[0000][PE] mean and std.dev: (301.91, 132.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203898 reads in 361.252 CPU sec, 20.280 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515022, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 279, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 772)
[0000][PE] mean and std.dev: (230.17, 90.40)
[0000][PE] low and high boundaries for proper pairs: (1, 958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.06, 70.75)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203976 reads in 363.739 CPU sec, 20.468 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204176
	[0000][ M::kt_pipeline] read 1204176 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515265, 3, 23)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.96, 70.81)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 227, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 486)
[0000][PE] mean and std.dev: (222.09, 76.94)
[0000][PE] low and high boundaries for proper pairs: (1, 595)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 361.648 CPU sec, 20.369 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515853, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.95, 70.71)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 220, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (215.23, 60.73)
[0000][PE] low and high boundaries for proper pairs: (1, 552)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204176 reads in 363.372 CPU sec, 20.413 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515468, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 239, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 535)
[0000][PE] mean and std.dev: (252.15, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.73, 70.65)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 228, 238)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 388)
[0000][PE] mean and std.dev: (202.09, 47.01)
[0000][PE] low and high boundaries for proper pairs: (1, 463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 366.038 CPU sec, 20.552 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203954
	[0000][ M::kt_pipeline] read 1203954 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515949, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 182, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 863)
[0000][PE] mean and std.dev: (217.73, 104.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.74, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 234, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (54, 429)
[0000][PE] mean and std.dev: (234.94, 51.88)
[0000][PE] low and high boundaries for proper pairs: (1, 504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 361.888 CPU sec, 20.317 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1203894
	[0000][ M::kt_pipeline] read 1203894 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516279, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.95, 70.72)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203954 reads in 364.707 CPU sec, 20.493 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1203974
	[0000][ M::kt_pipeline] read 1203974 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515678, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.88, 70.51)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (128, 199, 262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 530)
[0000][PE] mean and std.dev: (216.70, 107.30)
[0000][PE] low and high boundaries for proper pairs: (1, 664)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203894 reads in 360.565 CPU sec, 20.249 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515122, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.84, 70.86)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (158, 218, 281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 527)
[0000][PE] mean and std.dev: (227.27, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203974 reads in 362.884 CPU sec, 20.450 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515844, 1, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.76, 70.74)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 360.933 CPU sec, 20.336 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515845, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.68, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 311, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (280.45, 109.55)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 371.094 CPU sec, 20.983 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515868, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 247, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 370)
[0000][PE] mean and std.dev: (218.90, 55.65)
[0000][PE] low and high boundaries for proper pairs: (1, 441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.89, 70.47)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 363.442 CPU sec, 20.395 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515668, 0, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.88, 70.55)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 272, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (310.88, 111.46)
[0000][PE] low and high boundaries for proper pairs: (1, 985)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 362.759 CPU sec, 20.407 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515551, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 232, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (434.33, 450.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.33, 70.64)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 261, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 455)
[0000][PE] mean and std.dev: (250.50, 53.40)
[0000][PE] low and high boundaries for proper pairs: (1, 537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 367.892 CPU sec, 20.693 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515784, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 218, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 443)
[0000][PE] mean and std.dev: (201.25, 63.47)
[0000][PE] low and high boundaries for proper pairs: (1, 529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.47, 70.72)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 368.155 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204238
	[0000][ M::kt_pipeline] read 1204238 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515955, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.29, 70.61)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (140, 282, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1067)
[0000][PE] mean and std.dev: (324.42, 213.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1376)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 372.338 CPU sec, 20.968 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1203996
	[0000][ M::kt_pipeline] read 1203996 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515665, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (102, 131, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 882)
[0000][PE] mean and std.dev: (217.18, 186.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.66, 70.67)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 322, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 549)
[0000][PE] mean and std.dev: (288.85, 85.15)
[0000][PE] low and high boundaries for proper pairs: (1, 659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204238 reads in 367.900 CPU sec, 20.628 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204000
	[0000][ M::kt_pipeline] read 1204000 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515629, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 505, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (384.22, 181.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.24, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203996 reads in 360.334 CPU sec, 20.256 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1203984
	[0000][ M::kt_pipeline] read 1203984 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516455, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 193, 206)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 314)
[0000][PE] mean and std.dev: (178.78, 42.58)
[0000][PE] low and high boundaries for proper pairs: (1, 368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.33, 70.69)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 529)
[0000][PE] mean and std.dev: (268.65, 83.17)
[0000][PE] low and high boundaries for proper pairs: (1, 640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204000 reads in 362.315 CPU sec, 20.369 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204112
	[0000][ M::kt_pipeline] read 1204112 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515756, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.41, 70.84)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 330, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 540)
[0000][PE] mean and std.dev: (293.60, 71.90)
[0000][PE] low and high boundaries for proper pairs: (1, 636)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203984 reads in 359.668 CPU sec, 20.183 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516140, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 227, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (219.44, 65.50)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.84, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 219, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (70, 340)
[0000][PE] mean and std.dev: (209.79, 49.26)
[0000][PE] low and high boundaries for proper pairs: (13, 407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204112 reads in 364.071 CPU sec, 20.455 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1203962
	[0000][ M::kt_pipeline] read 1203962 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514984, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 199, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (182.90, 89.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.56, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 215, 264)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 400)
[0000][PE] mean and std.dev: (225.57, 41.37)
[0000][PE] low and high boundaries for proper pairs: (1, 468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 367.081 CPU sec, 20.628 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1203924
	[0000][ M::kt_pipeline] read 1203924 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515876, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.82, 71.01)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 184, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 625)
[0000][PE] mean and std.dev: (214.08, 83.04)
[0000][PE] low and high boundaries for proper pairs: (1, 780)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203962 reads in 364.990 CPU sec, 20.529 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515205, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.81, 71.05)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 242, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (250.27, 93.12)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203924 reads in 368.166 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515806, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 162, 225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 377)
[0000][PE] mean and std.dev: (174.40, 76.54)
[0000][PE] low and high boundaries for proper pairs: (1, 481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.88, 70.95)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (157, 268, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 655)
[0000][PE] mean and std.dev: (228.33, 71.34)
[0000][PE] low and high boundaries for proper pairs: (1, 821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 367.324 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515888, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (339.02, 71.01)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 362.468 CPU sec, 20.367 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516049, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 170, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (184.18, 47.40)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.09, 70.77)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 814, 3807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11293)
[0000][PE] mean and std.dev: (1686.45, 1779.78)
[0000][PE] low and high boundaries for proper pairs: (1, 15036)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 340, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 860)
[0000][PE] mean and std.dev: (276.18, 96.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 361.911 CPU sec, 20.380 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515731, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 234, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 664)
[0000][PE] mean and std.dev: (267.45, 101.36)
[0000][PE] low and high boundaries for proper pairs: (1, 820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.02, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 301, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1957)
[0000][PE] mean and std.dev: (514.93, 450.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 361.081 CPU sec, 20.261 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1203978
	[0000][ M::kt_pipeline] read 1203978 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515519, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 219, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 320)
[0000][PE] mean and std.dev: (209.50, 39.28)
[0000][PE] low and high boundaries for proper pairs: (52, 367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.38, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 279, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (11, 516)
[0000][PE] mean and std.dev: (263.75, 54.28)
[0000][PE] low and high boundaries for proper pairs: (1, 617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 357.821 CPU sec, 20.182 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516018, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 240, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (213.69, 70.85)
[0000][PE] low and high boundaries for proper pairs: (1, 808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.39, 70.98)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (100, 198, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 811)
[0000][PE] mean and std.dev: (199.25, 96.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203978 reads in 360.667 CPU sec, 20.309 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515623, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 197, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 715)
[0000][PE] mean and std.dev: (199.92, 84.36)
[0000][PE] low and high boundaries for proper pairs: (1, 912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.40, 71.00)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 365.308 CPU sec, 20.543 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515773, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.32, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 270, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 544)
[0000][PE] mean and std.dev: (246.83, 74.68)
[0000][PE] low and high boundaries for proper pairs: (1, 667)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 358.899 CPU sec, 20.155 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515788, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.37, 70.94)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (142, 212, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 514)
[0000][PE] mean and std.dev: (214.38, 100.96)
[0000][PE] low and high boundaries for proper pairs: (1, 638)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 357.597 CPU sec, 20.102 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515289, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 188, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 491)
[0000][PE] mean and std.dev: (188.90, 68.83)
[0000][PE] low and high boundaries for proper pairs: (1, 610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.47, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 267, 270)
[0000][PE] low and high boundaries for computing mean and std.dev: (153, 348)
[0000][PE] mean and std.dev: (248.71, 32.48)
[0000][PE] low and high boundaries for proper pairs: (114, 387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 358.730 CPU sec, 20.170 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515518, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 200, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 537)
[0000][PE] mean and std.dev: (200.62, 67.07)
[0000][PE] low and high boundaries for proper pairs: (1, 667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.52, 70.96)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 231, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (226.27, 96.97)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 358.297 CPU sec, 20.151 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515453, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.60, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 276, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (5, 520)
[0000][PE] mean and std.dev: (245.27, 80.08)
[0000][PE] low and high boundaries for proper pairs: (1, 623)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 357.910 CPU sec, 20.105 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515397, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 241, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (231.64, 105.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.57, 70.93)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 209, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 707)
[0000][PE] mean and std.dev: (230.94, 84.05)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 356.923 CPU sec, 20.061 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204002
	[0000][ M::kt_pipeline] read 1204002 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515412, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.48, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 216, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (64, 319)
[0000][PE] mean and std.dev: (198.42, 51.20)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 360.095 CPU sec, 20.224 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515267, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.32, 70.98)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 213, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (5, 425)
[0000][PE] mean and std.dev: (206.77, 67.62)
[0000][PE] low and high boundaries for proper pairs: (1, 509)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204002 reads in 361.940 CPU sec, 20.352 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203998
	[0000][ M::kt_pipeline] read 1203998 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516212, 0, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.58, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 226, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (223.08, 79.24)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 362.431 CPU sec, 20.393 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204134
	[0000][ M::kt_pipeline] read 1204134 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515832, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.50, 70.93)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 309, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1941)
[0000][PE] mean and std.dev: (289.00, 174.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2535)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203998 reads in 360.225 CPU sec, 20.255 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1203962
	[0000][ M::kt_pipeline] read 1203962 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515499, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 269, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 533)
[0000][PE] mean and std.dev: (264.60, 84.16)
[0000][PE] low and high boundaries for proper pairs: (1, 642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.48, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 259, 265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 447)
[0000][PE] mean and std.dev: (207.50, 60.51)
[0000][PE] low and high boundaries for proper pairs: (1, 538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204134 reads in 362.463 CPU sec, 20.338 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515353, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 252, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 634)
[0000][PE] mean and std.dev: (214.44, 82.87)
[0000][PE] low and high boundaries for proper pairs: (1, 800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.55, 70.76)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 258, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 529)
[0000][PE] mean and std.dev: (240.70, 89.41)
[0000][PE] low and high boundaries for proper pairs: (1, 626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203962 reads in 360.671 CPU sec, 20.299 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515642, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 292, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 836)
[0000][PE] mean and std.dev: (295.29, 80.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.34, 70.93)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 340, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 624)
[0000][PE] mean and std.dev: (268.92, 77.61)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 359.746 CPU sec, 20.215 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1203968
	[0000][ M::kt_pipeline] read 1203968 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515225, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 198, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 513)
[0000][PE] mean and std.dev: (173.00, 92.46)
[0000][PE] low and high boundaries for proper pairs: (1, 636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.43, 70.81)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 173, 221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 369)
[0000][PE] mean and std.dev: (181.07, 42.82)
[0000][PE] low and high boundaries for proper pairs: (1, 443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 353.782 CPU sec, 19.869 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204048
	[0000][ M::kt_pipeline] read 1204048 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515604, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 227, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (243.79, 88.87)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.25, 70.88)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 186, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (231.07, 108.75)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203968 reads in 350.722 CPU sec, 19.702 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204224
	[0000][ M::kt_pipeline] read 1204224 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515592, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 301, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 669)
[0000][PE] mean and std.dev: (258.20, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (339.02, 70.71)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 179, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 782)
[0000][PE] mean and std.dev: (232.58, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204048 reads in 355.482 CPU sec, 20.068 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203926
	[0000][ M::kt_pipeline] read 1203926 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515567, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 366, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1464)
[0000][PE] mean and std.dev: (387.88, 258.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.24, 70.94)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 239, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 638)
[0000][PE] mean and std.dev: (256.21, 71.05)
[0000][PE] low and high boundaries for proper pairs: (1, 780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204224 reads in 366.338 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1203956
	[0000][ M::kt_pipeline] read 1203956 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516002, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 136, 204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 376)
[0000][PE] mean and std.dev: (151.00, 50.28)
[0000][PE] low and high boundaries for proper pairs: (1, 462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.12, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 203, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (209.79, 67.75)
[0000][PE] low and high boundaries for proper pairs: (1, 562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203926 reads in 357.175 CPU sec, 20.077 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204016
	[0000][ M::kt_pipeline] read 1204016 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 516147, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.95, 70.59)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 270, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 528)
[0000][PE] mean and std.dev: (240.71, 72.68)
[0000][PE] low and high boundaries for proper pairs: (1, 641)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203956 reads in 358.245 CPU sec, 20.129 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515324, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 224, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (294.58, 233.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.06, 70.85)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (158, 227, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (225.50, 80.17)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204016 reads in 356.911 CPU sec, 20.273 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515552, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 217, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 431)
[0000][PE] mean and std.dev: (221.79, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.16, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 257, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 426)
[0000][PE] mean and std.dev: (258.00, 36.47)
[0000][PE] low and high boundaries for proper pairs: (30, 492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 357.507 CPU sec, 20.048 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516195, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 226, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 556)
[0000][PE] mean and std.dev: (206.00, 61.57)
[0000][PE] low and high boundaries for proper pairs: (1, 691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.13, 70.74)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 350.310 CPU sec, 19.692 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1203936
	[0000][ M::kt_pipeline] read 1203936 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515669, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 218, 292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (202.83, 78.37)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.82, 70.74)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 246, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 683)
[0000][PE] mean and std.dev: (271.00, 90.77)
[0000][PE] low and high boundaries for proper pairs: (1, 840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 356.390 CPU sec, 20.077 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515986, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.91, 70.90)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 195, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 446)
[0000][PE] mean and std.dev: (181.40, 66.49)
[0000][PE] low and high boundaries for proper pairs: (1, 547)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203936 reads in 357.084 CPU sec, 20.061 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515570, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.13, 70.73)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 253, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 734)
[0000][PE] mean and std.dev: (242.88, 100.24)
[0000][PE] low and high boundaries for proper pairs: (1, 931)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 356.923 CPU sec, 20.068 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515531, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 256, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 792)
[0000][PE] mean and std.dev: (253.55, 91.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.09, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (130, 212, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (214.79, 87.85)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 359.171 CPU sec, 20.187 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203938
	[0000][ M::kt_pipeline] read 1203938 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515773, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 196, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 449)
[0000][PE] mean and std.dev: (199.83, 69.65)
[0000][PE] low and high boundaries for proper pairs: (1, 542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.01, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (139, 221, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 547)
[0000][PE] mean and std.dev: (198.27, 73.84)
[0000][PE] low and high boundaries for proper pairs: (1, 683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 355.662 CPU sec, 19.965 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203932
	[0000][ M::kt_pipeline] read 1203932 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515633, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 170, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 659)
[0000][PE] mean and std.dev: (201.83, 84.53)
[0000][PE] low and high boundaries for proper pairs: (1, 830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.20, 70.55)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 225, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 467)
[0000][PE] mean and std.dev: (221.00, 55.44)
[0000][PE] low and high boundaries for proper pairs: (1, 561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203938 reads in 359.403 CPU sec, 20.224 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515908, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.41, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 265, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 659)
[0000][PE] mean and std.dev: (228.92, 91.98)
[0000][PE] low and high boundaries for proper pairs: (1, 816)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203932 reads in 359.192 CPU sec, 20.153 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516139, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 182, 260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 520)
[0000][PE] mean and std.dev: (184.19, 69.12)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.52, 70.65)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 250, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 564)
[0000][PE] mean and std.dev: (236.44, 73.58)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 365.831 CPU sec, 20.588 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204004
	[0000][ M::kt_pipeline] read 1204004 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515752, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 419, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5920)
[0000][PE] mean and std.dev: (766.93, 838.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.07, 70.90)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 341, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1558)
[0000][PE] mean and std.dev: (365.83, 190.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 370.885 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515357, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 305, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (604.60, 475.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.26, 70.85)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204004 reads in 371.497 CPU sec, 20.868 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203954
	[0000][ M::kt_pipeline] read 1203954 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515689, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.59, 70.94)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 366.731 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515484, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (84, 98, 170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 342)
[0000][PE] mean and std.dev: (121.67, 53.45)
[0000][PE] low and high boundaries for proper pairs: (1, 428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.50, 70.89)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 212, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 523)
[0000][PE] mean and std.dev: (219.36, 100.27)
[0000][PE] low and high boundaries for proper pairs: (1, 649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203954 reads in 369.494 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515267, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.22, 70.70)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 289, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 429)
[0000][PE] mean and std.dev: (270.17, 43.85)
[0000][PE] low and high boundaries for proper pairs: (51, 492)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 372.622 CPU sec, 20.968 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516355, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 171, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1037)
[0000][PE] mean and std.dev: (184.70, 106.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.53, 70.93)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 260, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 999)
[0000][PE] mean and std.dev: (262.40, 136.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 365.362 CPU sec, 20.550 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515588, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 235, 300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 548)
[0000][PE] mean and std.dev: (232.50, 76.87)
[0000][PE] low and high boundaries for proper pairs: (1, 672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.57, 70.94)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 213, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (16, 441)
[0000][PE] mean and std.dev: (211.88, 59.32)
[0000][PE] low and high boundaries for proper pairs: (1, 526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 366.084 CPU sec, 20.599 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516208, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 207, 240)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 326)
[0000][PE] mean and std.dev: (206.00, 45.80)
[0000][PE] low and high boundaries for proper pairs: (23, 389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.87, 71.12)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (137, 162, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 377)
[0000][PE] mean and std.dev: (178.93, 52.11)
[0000][PE] low and high boundaries for proper pairs: (1, 457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 366.408 CPU sec, 20.657 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515785, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 218, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 436)
[0000][PE] mean and std.dev: (182.85, 63.31)
[0000][PE] low and high boundaries for proper pairs: (1, 533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.95, 71.14)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 297, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (270.15, 73.40)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 372.262 CPU sec, 20.951 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1203992
	[0000][ M::kt_pipeline] read 1203992 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515175, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 126, 207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 371)
[0000][PE] mean and std.dev: (160.06, 57.88)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.96, 70.96)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 186, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (229.69, 103.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 367.157 CPU sec, 20.627 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515826, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 191, 228)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 316)
[0000][PE] mean and std.dev: (201.41, 45.98)
[0000][PE] low and high boundaries for proper pairs: (17, 385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.93, 71.05)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 278, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (82, 502)
[0000][PE] mean and std.dev: (268.54, 73.80)
[0000][PE] low and high boundaries for proper pairs: (1, 586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203992 reads in 364.540 CPU sec, 20.518 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515946, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (84, 222, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 657)
[0000][PE] mean and std.dev: (196.40, 109.28)
[0000][PE] low and high boundaries for proper pairs: (1, 848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.24, 70.86)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (566, 2127, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6857)
[0000][PE] mean and std.dev: (1816.40, 1082.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8954)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 211, 283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 475)
[0000][PE] mean and std.dev: (236.50, 105.21)
[0000][PE] low and high boundaries for proper pairs: (1, 657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 357.817 CPU sec, 20.132 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1203986
	[0000][ M::kt_pipeline] read 1203986 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515663, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.27, 70.96)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 295, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 712)
[0000][PE] mean and std.dev: (281.00, 79.50)
[0000][PE] low and high boundaries for proper pairs: (1, 864)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 365.418 CPU sec, 20.563 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515608, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 173, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 561)
[0000][PE] mean and std.dev: (183.67, 67.01)
[0000][PE] low and high boundaries for proper pairs: (1, 696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.39, 70.95)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 375, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (464.40, 305.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203986 reads in 363.784 CPU sec, 20.461 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515518, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.32, 71.04)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 359.286 CPU sec, 20.201 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203976
	[0000][ M::kt_pipeline] read 1203976 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515000, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 186, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 680)
[0000][PE] mean and std.dev: (189.62, 82.52)
[0000][PE] low and high boundaries for proper pairs: (1, 853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.41, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 204, 204)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 268)
[0000][PE] mean and std.dev: (187.64, 38.02)
[0000][PE] low and high boundaries for proper pairs: (36, 340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 362.871 CPU sec, 20.479 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204028
	[0000][ M::kt_pipeline] read 1204028 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515849, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 185, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (187.41, 80.90)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.27, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203976 reads in 361.876 CPU sec, 20.371 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515533, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 167, 215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (161.00, 39.77)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.33, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (148, 190, 247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 445)
[0000][PE] mean and std.dev: (184.79, 51.15)
[0000][PE] low and high boundaries for proper pairs: (1, 544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204028 reads in 361.769 CPU sec, 20.324 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204004
	[0000][ M::kt_pipeline] read 1204004 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515483, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 237, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 505)
[0000][PE] mean and std.dev: (204.25, 65.49)
[0000][PE] low and high boundaries for proper pairs: (1, 626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.48, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 285, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (530.81, 377.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 360.057 CPU sec, 20.260 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515735, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 130, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 531)
[0000][PE] mean and std.dev: (151.15, 68.95)
[0000][PE] low and high boundaries for proper pairs: (1, 676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.58, 70.85)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 221, 228)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 350)
[0000][PE] mean and std.dev: (206.36, 48.63)
[0000][PE] low and high boundaries for proper pairs: (1, 411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204004 reads in 362.369 CPU sec, 20.355 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515913, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.37, 70.95)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 215, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 335)
[0000][PE] mean and std.dev: (222.00, 21.44)
[0000][PE] low and high boundaries for proper pairs: (95, 375)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 356.107 CPU sec, 20.004 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1203982
	[0000][ M::kt_pipeline] read 1203982 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515326, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 240, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (216.00, 80.22)
[0000][PE] low and high boundaries for proper pairs: (1, 704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.41, 70.80)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 231, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (281.77, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 362.691 CPU sec, 20.370 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1203972
	[0000][ M::kt_pipeline] read 1203972 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516229, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 177, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (244.69, 149.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.54, 71.02)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 314, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (244.69, 94.03)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203982 reads in 353.264 CPU sec, 19.830 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515783, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 304, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 659)
[0000][PE] mean and std.dev: (266.89, 63.61)
[0000][PE] low and high boundaries for proper pairs: (1, 802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.34, 70.80)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 203, 212)
[0000][PE] low and high boundaries for computing mean and std.dev: (143, 258)
[0000][PE] mean and std.dev: (192.80, 15.16)
[0000][PE] low and high boundaries for proper pairs: (120, 281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203972 reads in 361.751 CPU sec, 20.364 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204002
	[0000][ M::kt_pipeline] read 1204002 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515242, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.49, 70.98)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (133, 159, 222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 400)
[0000][PE] mean and std.dev: (175.45, 51.69)
[0000][PE] low and high boundaries for proper pairs: (1, 489)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 363.465 CPU sec, 20.496 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515349, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.58, 70.88)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 190, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 654)
[0000][PE] mean and std.dev: (219.36, 91.82)
[0000][PE] low and high boundaries for proper pairs: (1, 819)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204002 reads in 356.736 CPU sec, 20.091 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515584, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 211, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 755)
[0000][PE] mean and std.dev: (223.62, 88.90)
[0000][PE] low and high boundaries for proper pairs: (1, 959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.36, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 184, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (218.94, 86.48)
[0000][PE] low and high boundaries for proper pairs: (1, 951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 360.545 CPU sec, 20.382 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1203848
	[0000][ M::kt_pipeline] read 1203848 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515905, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 271, 280)
[0000][PE] low and high boundaries for computing mean and std.dev: (37, 442)
[0000][PE] mean and std.dev: (234.21, 65.05)
[0000][PE] low and high boundaries for proper pairs: (1, 523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.31, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 257, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 524)
[0000][PE] mean and std.dev: (249.50, 55.25)
[0000][PE] low and high boundaries for proper pairs: (1, 629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 359.017 CPU sec, 20.165 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515957, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 115, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (144.09, 47.78)
[0000][PE] low and high boundaries for proper pairs: (1, 685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.22, 70.92)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (157, 215, 247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 427)
[0000][PE] mean and std.dev: (215.56, 61.66)
[0000][PE] low and high boundaries for proper pairs: (1, 517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203848 reads in 357.073 CPU sec, 20.073 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515832, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.25, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 253, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (151, 351)
[0000][PE] mean and std.dev: (238.23, 44.30)
[0000][PE] low and high boundaries for proper pairs: (61, 415)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 360.179 CPU sec, 20.367 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515775, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.06, 70.93)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (144, 221, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 915)
[0000][PE] mean and std.dev: (265.00, 167.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1172)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 356.306 CPU sec, 20.032 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515699, 1, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.02, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 215, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 483)
[0000][PE] mean and std.dev: (211.62, 67.59)
[0000][PE] low and high boundaries for proper pairs: (1, 590)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 357.712 CPU sec, 20.185 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515755, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 219, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 779)
[0000][PE] mean and std.dev: (208.23, 89.68)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.01, 70.99)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 255, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 676)
[0000][PE] mean and std.dev: (262.07, 84.83)
[0000][PE] low and high boundaries for proper pairs: (1, 827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 358.110 CPU sec, 20.114 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1203998
	[0000][ M::kt_pipeline] read 1203998 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516207, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 204, 211)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 289)
[0000][PE] mean and std.dev: (184.00, 21.69)
[0000][PE] low and high boundaries for proper pairs: (55, 328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.09, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 239, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 550)
[0000][PE] mean and std.dev: (221.14, 59.85)
[0000][PE] low and high boundaries for proper pairs: (1, 668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 355.433 CPU sec, 19.958 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204072
	[0000][ M::kt_pipeline] read 1204072 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516014, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 233, 300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 570)
[0000][PE] mean and std.dev: (218.27, 73.98)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.92, 71.01)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (142, 260, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 619)
[0000][PE] mean and std.dev: (229.39, 95.91)
[0000][PE] low and high boundaries for proper pairs: (1, 778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203998 reads in 354.824 CPU sec, 19.949 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203936
	[0000][ M::kt_pipeline] read 1203936 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515742, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 222, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 463)
[0000][PE] mean and std.dev: (221.65, 68.31)
[0000][PE] low and high boundaries for proper pairs: (1, 561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.97, 70.98)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204072 reads in 357.103 CPU sec, 20.043 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204176
	[0000][ M::kt_pipeline] read 1204176 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515406, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 178, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 470)
[0000][PE] mean and std.dev: (188.55, 61.84)
[0000][PE] low and high boundaries for proper pairs: (1, 580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.97, 70.93)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 243, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (167, 352)
[0000][PE] mean and std.dev: (255.57, 18.38)
[0000][PE] low and high boundaries for proper pairs: (130, 389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203936 reads in 359.190 CPU sec, 20.307 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204204
	[0000][ M::kt_pipeline] read 1204204 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515499, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 254, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 554)
[0000][PE] mean and std.dev: (207.33, 69.55)
[0000][PE] low and high boundaries for proper pairs: (1, 686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (339.00, 71.01)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 264, 289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 489)
[0000][PE] mean and std.dev: (248.14, 79.19)
[0000][PE] low and high boundaries for proper pairs: (1, 589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204176 reads in 357.169 CPU sec, 20.058 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515901, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 208, 254)
[0000][PE] low and high boundaries for computing mean and std.dev: (8, 418)
[0000][PE] mean and std.dev: (213.14, 69.18)
[0000][PE] low and high boundaries for proper pairs: (1, 500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.05, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204204 reads in 352.191 CPU sec, 19.750 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516096, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 166, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (186.79, 74.30)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.12, 70.92)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 219, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 379)
[0000][PE] mean and std.dev: (217.20, 63.48)
[0000][PE] low and high boundaries for proper pairs: (1, 471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 352.492 CPU sec, 19.846 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204136
	[0000][ M::kt_pipeline] read 1204136 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515988, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 192, 281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 483)
[0000][PE] mean and std.dev: (215.55, 58.18)
[0000][PE] low and high boundaries for proper pairs: (1, 584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.96, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 244, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (274.57, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 355.111 CPU sec, 20.012 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515398, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 173, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (270.56, 277.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.02, 70.86)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 270, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (305.91, 134.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204136 reads in 362.125 CPU sec, 20.416 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203932
	[0000][ M::kt_pipeline] read 1203932 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515100, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 281, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 623)
[0000][PE] mean and std.dev: (243.00, 88.04)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.23, 70.92)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 362.821 CPU sec, 20.338 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203876
	[0000][ M::kt_pipeline] read 1203876 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515813, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 198, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (206.69, 75.47)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.11, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 217, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 715)
[0000][PE] mean and std.dev: (205.50, 62.03)
[0000][PE] low and high boundaries for proper pairs: (1, 900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203932 reads in 365.991 CPU sec, 20.590 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1203842
	[0000][ M::kt_pipeline] read 1203842 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515845, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 218, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 670)
[0000][PE] mean and std.dev: (238.70, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.31, 70.94)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203876 reads in 378.532 CPU sec, 21.231 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515654, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 221, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (12, 397)
[0000][PE] mean and std.dev: (197.50, 60.59)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.43, 70.88)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 291, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 631)
[0000][PE] mean and std.dev: (285.43, 122.37)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203842 reads in 379.966 CPU sec, 21.632 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203948
	[0000][ M::kt_pipeline] read 1203948 sequences (180000232 bp)...
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204054
	[0000][ M::kt_pipeline] read 1204054 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515222, 1, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.49, 70.90)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 283, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 488)
[0000][PE] mean and std.dev: (270.76, 66.23)
[0000][PE] low and high boundaries for proper pairs: (1, 574)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203948 reads in 367.578 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203846
	[0000][ M::kt_pipeline] read 1203846 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514921, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 189, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (183.15, 69.50)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.45, 70.86)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204054 reads in 375.516 CPU sec, 21.210 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515507, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 211, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (20, 460)
[0000][PE] mean and std.dev: (219.68, 78.28)
[0000][PE] low and high boundaries for proper pairs: (1, 548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.56, 70.92)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203846 reads in 373.754 CPU sec, 21.071 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515391, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.66, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 253, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (252.00, 75.32)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 373.304 CPU sec, 21.029 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203976
	[0000][ M::kt_pipeline] read 1203976 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515035, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 147, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 652)
[0000][PE] mean and std.dev: (195.25, 85.24)
[0000][PE] low and high boundaries for proper pairs: (1, 821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.47, 70.92)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 289, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (72, 547)
[0000][PE] mean and std.dev: (283.90, 79.73)
[0000][PE] low and high boundaries for proper pairs: (1, 642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 367.471 CPU sec, 20.729 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1203988
	[0000][ M::kt_pipeline] read 1203988 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515666, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 187, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 649)
[0000][PE] mean and std.dev: (206.94, 86.00)
[0000][PE] low and high boundaries for proper pairs: (1, 815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.65, 71.10)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 255, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 481)
[0000][PE] mean and std.dev: (212.50, 60.94)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203976 reads in 366.387 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515951, 6, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.91, 71.00)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 250, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (239.88, 125.68)
[0000][PE] low and high boundaries for proper pairs: (1, 794)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203988 reads in 364.265 CPU sec, 20.511 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515445, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.07, 71.10)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 221, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (36, 461)
[0000][PE] mean and std.dev: (219.08, 56.66)
[0000][PE] low and high boundaries for proper pairs: (1, 546)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 367.660 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1203952
	[0000][ M::kt_pipeline] read 1203952 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515051, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.19, 71.00)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (133, 196, 213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 373)
[0000][PE] mean and std.dev: (167.00, 40.45)
[0000][PE] low and high boundaries for proper pairs: (1, 453)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 363.450 CPU sec, 20.460 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204018
	[0000][ M::kt_pipeline] read 1204018 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515451, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.14, 71.06)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 309, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (273.92, 84.96)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203952 reads in 360.502 CPU sec, 20.264 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516137, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 187, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (206.15, 79.23)
[0000][PE] low and high boundaries for proper pairs: (1, 860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.17, 70.81)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 257, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (73, 473)
[0000][PE] mean and std.dev: (264.00, 54.71)
[0000][PE] low and high boundaries for proper pairs: (1, 553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204018 reads in 358.205 CPU sec, 20.144 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516101, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 233, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 471)
[0000][PE] mean and std.dev: (202.93, 60.62)
[0000][PE] low and high boundaries for proper pairs: (1, 575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.38, 71.12)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 198, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (218.33, 70.68)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 362.612 CPU sec, 20.442 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204222
	[0000][ M::kt_pipeline] read 1204222 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516105, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.36, 71.00)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 362.277 CPU sec, 20.379 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515497, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.25, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 215, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (63, 438)
[0000][PE] mean and std.dev: (206.33, 50.43)
[0000][PE] low and high boundaries for proper pairs: (1, 513)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204222 reads in 365.352 CPU sec, 20.611 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204094
	[0000][ M::kt_pipeline] read 1204094 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516037, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 139, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 385)
[0000][PE] mean and std.dev: (175.70, 66.07)
[0000][PE] low and high boundaries for proper pairs: (1, 469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.48, 71.01)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 262, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 667)
[0000][PE] mean and std.dev: (281.96, 91.22)
[0000][PE] low and high boundaries for proper pairs: (1, 819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 360.451 CPU sec, 20.372 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515463, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.43, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 256, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 518)
[0000][PE] mean and std.dev: (228.00, 62.53)
[0000][PE] low and high boundaries for proper pairs: (1, 633)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204094 reads in 360.013 CPU sec, 20.232 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515522, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.48, 70.95)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (116, 361, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 950)
[0000][PE] mean and std.dev: (259.10, 137.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 360.987 CPU sec, 20.304 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516005, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.25, 70.93)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 206, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 541)
[0000][PE] mean and std.dev: (225.50, 91.70)
[0000][PE] low and high boundaries for proper pairs: (1, 668)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 364.229 CPU sec, 20.503 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1203996
	[0000][ M::kt_pipeline] read 1203996 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515321, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 360, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (531.11, 483.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.45, 70.95)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 180, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (269.20, 150.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 366.139 CPU sec, 20.576 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515463, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 176, 220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 414)
[0000][PE] mean and std.dev: (169.30, 48.22)
[0000][PE] low and high boundaries for proper pairs: (1, 511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 576)
[0000][PE] mean and std.dev: (339.68, 71.07)
[0000][PE] low and high boundaries for proper pairs: (6, 671)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 206, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 522)
[0000][PE] mean and std.dev: (223.00, 75.76)
[0000][PE] low and high boundaries for proper pairs: (1, 640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203996 reads in 365.339 CPU sec, 20.551 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515555, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 243, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 339)
[0000][PE] mean and std.dev: (221.64, 55.50)
[0000][PE] low and high boundaries for proper pairs: (1, 444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.35, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 358.625 CPU sec, 20.200 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204004
	[0000][ M::kt_pipeline] read 1204004 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514289, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 198, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (267.25, 166.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.14, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 199, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 682)
[0000][PE] mean and std.dev: (221.08, 99.15)
[0000][PE] low and high boundaries for proper pairs: (1, 854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 384.855 CPU sec, 21.632 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515181, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 259, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 723)
[0000][PE] mean and std.dev: (250.91, 75.61)
[0000][PE] low and high boundaries for proper pairs: (1, 906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.36, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 182, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 465)
[0000][PE] mean and std.dev: (183.20, 76.30)
[0000][PE] low and high boundaries for proper pairs: (1, 570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204004 reads in 366.932 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515259, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.38, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 363.517 CPU sec, 20.481 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515528, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 195, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 458)
[0000][PE] mean and std.dev: (179.45, 44.56)
[0000][PE] low and high boundaries for proper pairs: (1, 554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.35, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 239, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 533)
[0000][PE] mean and std.dev: (259.27, 84.79)
[0000][PE] low and high boundaries for proper pairs: (1, 640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 364.179 CPU sec, 20.625 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516252, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 237, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (219.79, 62.12)
[0000][PE] low and high boundaries for proper pairs: (1, 593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.35, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 217, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (221.00, 63.93)
[0000][PE] low and high boundaries for proper pairs: (1, 594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 361.576 CPU sec, 20.370 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515425, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 216, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2053)
[0000][PE] mean and std.dev: (278.29, 218.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.21, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 238, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 718)
[0000][PE] mean and std.dev: (254.00, 91.32)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 363.842 CPU sec, 20.560 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1203858
	[0000][ M::kt_pipeline] read 1203858 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515557, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 245, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 728)
[0000][PE] mean and std.dev: (238.17, 91.39)
[0000][PE] low and high boundaries for proper pairs: (1, 917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.06, 70.77)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 257, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (7, 512)
[0000][PE] mean and std.dev: (246.53, 71.02)
[0000][PE] low and high boundaries for proper pairs: (1, 613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 357.546 CPU sec, 20.103 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1203932
	[0000][ M::kt_pipeline] read 1203932 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516102, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 170, 230)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 356)
[0000][PE] mean and std.dev: (191.64, 37.62)
[0000][PE] low and high boundaries for proper pairs: (1, 419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.02, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 235, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 498)
[0000][PE] mean and std.dev: (242.09, 78.62)
[0000][PE] low and high boundaries for proper pairs: (1, 600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203858 reads in 358.216 CPU sec, 20.277 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515973, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 263, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 723)
[0000][PE] mean and std.dev: (235.83, 92.75)
[0000][PE] low and high boundaries for proper pairs: (1, 911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.01, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 253, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 677)
[0000][PE] mean and std.dev: (260.29, 73.02)
[0000][PE] low and high boundaries for proper pairs: (1, 839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203932 reads in 360.037 CPU sec, 20.345 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204028
	[0000][ M::kt_pipeline] read 1204028 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515680, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 162, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 497)
[0000][PE] mean and std.dev: (184.89, 63.97)
[0000][PE] low and high boundaries for proper pairs: (1, 617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.27, 70.95)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 318, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (281.50, 101.26)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 363.221 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204278
	[0000][ M::kt_pipeline] read 1204278 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515825, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 176, 201)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 305)
[0000][PE] mean and std.dev: (177.00, 40.21)
[0000][PE] low and high boundaries for proper pairs: (1, 357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.89, 70.95)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 249, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (16, 451)
[0000][PE] mean and std.dev: (227.61, 63.81)
[0000][PE] low and high boundaries for proper pairs: (1, 538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204028 reads in 359.459 CPU sec, 20.198 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1203990
	[0000][ M::kt_pipeline] read 1203990 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515739, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 227, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 747)
[0000][PE] mean and std.dev: (202.18, 71.02)
[0000][PE] low and high boundaries for proper pairs: (1, 941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.72, 70.86)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (161, 211, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 566)
[0000][PE] mean and std.dev: (230.67, 88.67)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204278 reads in 354.787 CPU sec, 19.967 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 516126, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.93, 70.89)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 269, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 959)
[0000][PE] mean and std.dev: (271.23, 106.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203990 reads in 356.224 CPU sec, 20.078 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516097, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 283, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (455.53, 394.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.78, 70.82)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 357.313 CPU sec, 20.251 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204028
	[0000][ M::kt_pipeline] read 1204028 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515552, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 328, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 469)
[0000][PE] mean and std.dev: (294.45, 68.94)
[0000][PE] low and high boundaries for proper pairs: (19, 570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.09, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 356.447 CPU sec, 20.045 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1203986
	[0000][ M::kt_pipeline] read 1203986 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515501, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 227, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 639)
[0000][PE] mean and std.dev: (195.15, 75.78)
[0000][PE] low and high boundaries for proper pairs: (1, 809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.96, 70.86)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 255, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 705)
[0000][PE] mean and std.dev: (267.30, 144.01)
[0000][PE] low and high boundaries for proper pairs: (1, 872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204028 reads in 355.972 CPU sec, 20.015 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203936
	[0000][ M::kt_pipeline] read 1203936 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515774, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 166, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (169.82, 66.83)
[0000][PE] low and high boundaries for proper pairs: (1, 568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.80, 70.66)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 275, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (239.55, 84.76)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203986 reads in 356.464 CPU sec, 20.044 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204106
	[0000][ M::kt_pipeline] read 1204106 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515617, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 222, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 480)
[0000][PE] mean and std.dev: (226.00, 61.23)
[0000][PE] low and high boundaries for proper pairs: (1, 578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.84, 70.80)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 221, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 776)
[0000][PE] mean and std.dev: (241.87, 86.30)
[0000][PE] low and high boundaries for proper pairs: (1, 975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203936 reads in 353.375 CPU sec, 19.880 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516083, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 202, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (26, 356)
[0000][PE] mean and std.dev: (187.18, 61.95)
[0000][PE] low and high boundaries for proper pairs: (1, 435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.15, 70.92)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 210, 248)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 352)
[0000][PE] mean and std.dev: (191.82, 44.62)
[0000][PE] low and high boundaries for proper pairs: (13, 404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204106 reads in 352.957 CPU sec, 19.842 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1203910
	[0000][ M::kt_pipeline] read 1203910 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515653, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 235, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 700)
[0000][PE] mean and std.dev: (239.36, 74.72)
[0000][PE] low and high boundaries for proper pairs: (1, 862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.90, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 204, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (222.17, 64.80)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 357.578 CPU sec, 20.154 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515649, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.11, 70.93)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203910 reads in 351.037 CPU sec, 19.796 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204126
	[0000][ M::kt_pipeline] read 1204126 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515258, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 178, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 469)
[0000][PE] mean and std.dev: (190.64, 68.78)
[0000][PE] low and high boundaries for proper pairs: (1, 575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.59, 70.53)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 373.494 CPU sec, 21.020 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515610, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 224, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (38, 413)
[0000][PE] mean and std.dev: (211.75, 28.97)
[0000][PE] low and high boundaries for proper pairs: (1, 488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.56, 70.97)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (139, 264, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (345.77, 290.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204126 reads in 370.743 CPU sec, 20.918 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515535, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 190, 230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 428)
[0000][PE] mean and std.dev: (185.75, 53.35)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.53, 70.74)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 301, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 557)
[0000][PE] mean and std.dev: (279.36, 76.53)
[0000][PE] low and high boundaries for proper pairs: (1, 648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 370.759 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515930, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.29, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 295, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 540)
[0000][PE] mean and std.dev: (266.70, 76.95)
[0000][PE] low and high boundaries for proper pairs: (1, 656)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 373.399 CPU sec, 21.048 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515976, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 148, 161)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 211)
[0000][PE] mean and std.dev: (141.10, 13.76)
[0000][PE] low and high boundaries for proper pairs: (61, 236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.38, 70.95)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 179, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 491)
[0000][PE] mean and std.dev: (204.33, 59.05)
[0000][PE] low and high boundaries for proper pairs: (1, 600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 371.187 CPU sec, 20.921 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515974, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 232, 280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (176.69, 91.91)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.71, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 197, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (195.24, 54.76)
[0000][PE] low and high boundaries for proper pairs: (1, 576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 366.289 CPU sec, 20.631 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204090
	[0000][ M::kt_pipeline] read 1204090 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515233, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 241, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (150, 335)
[0000][PE] mean and std.dev: (236.50, 51.66)
[0000][PE] low and high boundaries for proper pairs: (30, 443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.80, 70.95)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 206, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (208.56, 67.52)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 371.080 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204014
	[0000][ M::kt_pipeline] read 1204014 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515640, 0, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.88, 71.04)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204090 reads in 368.450 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515634, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 152, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 635)
[0000][PE] mean and std.dev: (177.90, 98.77)
[0000][PE] low and high boundaries for proper pairs: (1, 813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.94, 71.03)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 344, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 895)
[0000][PE] mean and std.dev: (320.13, 109.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204014 reads in 374.835 CPU sec, 21.149 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515314, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 257, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1218)
[0000][PE] mean and std.dev: (368.95, 273.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (339.03, 71.18)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 327, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 650)
[0000][PE] mean and std.dev: (278.30, 98.33)
[0000][PE] low and high boundaries for proper pairs: (1, 808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 367.012 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515401, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 219, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 512)
[0000][PE] mean and std.dev: (211.53, 70.70)
[0000][PE] low and high boundaries for proper pairs: (1, 624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.18, 70.98)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 367.688 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515903, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.24, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 245, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 641)
[0000][PE] mean and std.dev: (244.47, 91.69)
[0000][PE] low and high boundaries for proper pairs: (1, 797)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 363.683 CPU sec, 20.445 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204112
	[0000][ M::kt_pipeline] read 1204112 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515635, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 242, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 458)
[0000][PE] mean and std.dev: (228.37, 83.71)
[0000][PE] low and high boundaries for proper pairs: (1, 563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.35, 70.98)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 368.443 CPU sec, 20.721 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515142, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 180, 221)
[0000][PE] low and high boundaries for computing mean and std.dev: (11, 361)
[0000][PE] mean and std.dev: (181.86, 39.96)
[0000][PE] low and high boundaries for proper pairs: (1, 431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.38, 70.96)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 217, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (311.31, 242.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204112 reads in 371.500 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515519, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.46, 71.04)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 204, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (76, 376)
[0000][PE] mean and std.dev: (206.80, 54.67)
[0000][PE] low and high boundaries for proper pairs: (1, 436)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 364.955 CPU sec, 20.517 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515222, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 178, 214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 382)
[0000][PE] mean and std.dev: (177.73, 59.68)
[0000][PE] low and high boundaries for proper pairs: (1, 466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.18, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 367.653 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515657, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 152, 202)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 328)
[0000][PE] mean and std.dev: (148.00, 23.44)
[0000][PE] low and high boundaries for proper pairs: (1, 391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.19, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 240, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (12, 462)
[0000][PE] mean and std.dev: (230.90, 57.96)
[0000][PE] low and high boundaries for proper pairs: (1, 552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 360.526 CPU sec, 20.302 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204160
	[0000][ M::kt_pipeline] read 1204160 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515362, 0, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 576)
[0000][PE] mean and std.dev: (339.54, 71.04)
[0000][PE] low and high boundaries for proper pairs: (6, 671)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 235, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (261.25, 112.36)
[0000][PE] low and high boundaries for proper pairs: (1, 861)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 359.822 CPU sec, 20.210 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204054
	[0000][ M::kt_pipeline] read 1204054 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516118, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.30, 70.94)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (132, 206, 285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (192.83, 69.79)
[0000][PE] low and high boundaries for proper pairs: (1, 744)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204160 reads in 365.969 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204024
	[0000][ M::kt_pipeline] read 1204024 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515431, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 207, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 859)
[0000][PE] mean and std.dev: (283.00, 137.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.45, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (50, 126, 183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 449)
[0000][PE] mean and std.dev: (132.36, 73.49)
[0000][PE] low and high boundaries for proper pairs: (1, 582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204054 reads in 373.446 CPU sec, 20.999 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1203906
	[0000][ M::kt_pipeline] read 1203906 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515274, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 209, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 710)
[0000][PE] mean and std.dev: (237.38, 91.59)
[0000][PE] low and high boundaries for proper pairs: (1, 890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.56, 70.66)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 196, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (6, 401)
[0000][PE] mean and std.dev: (203.06, 68.19)
[0000][PE] low and high boundaries for proper pairs: (1, 480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204024 reads in 370.413 CPU sec, 20.883 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1203974
	[0000][ M::kt_pipeline] read 1203974 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515619, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.48, 70.78)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (105, 189, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (220.94, 142.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1337)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203906 reads in 363.651 CPU sec, 20.478 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515821, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 229, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 766)
[0000][PE] mean and std.dev: (201.32, 83.75)
[0000][PE] low and high boundaries for proper pairs: (1, 959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.45, 70.80)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 250, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 634)
[0000][PE] mean and std.dev: (228.27, 90.56)
[0000][PE] low and high boundaries for proper pairs: (1, 779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203974 reads in 363.970 CPU sec, 20.551 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1203930
	[0000][ M::kt_pipeline] read 1203930 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515390, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.27, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 203, 218)
[0000][PE] low and high boundaries for computing mean and std.dev: (68, 318)
[0000][PE] mean and std.dev: (181.80, 41.19)
[0000][PE] low and high boundaries for proper pairs: (17, 368)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 365.768 CPU sec, 20.605 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514997, 6, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.23, 70.76)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 220, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 478)
[0000][PE] mean and std.dev: (224.16, 80.81)
[0000][PE] low and high boundaries for proper pairs: (1, 580)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203930 reads in 369.727 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516046, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (94, 127, 198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 406)
[0000][PE] mean and std.dev: (156.25, 71.05)
[0000][PE] low and high boundaries for proper pairs: (1, 510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.52, 70.85)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 360.720 CPU sec, 20.317 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515375, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 240, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 381)
[0000][PE] mean and std.dev: (228.62, 38.09)
[0000][PE] low and high boundaries for proper pairs: (27, 440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.32, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 177, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 404)
[0000][PE] mean and std.dev: (187.38, 63.10)
[0000][PE] low and high boundaries for proper pairs: (1, 490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 362.119 CPU sec, 20.389 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516381, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 263, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 720)
[0000][PE] mean and std.dev: (253.81, 78.00)
[0000][PE] low and high boundaries for proper pairs: (1, 892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.20, 70.71)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 361.850 CPU sec, 20.395 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515615, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 172, 194)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 254)
[0000][PE] mean and std.dev: (170.90, 20.05)
[0000][PE] low and high boundaries for proper pairs: (74, 284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.88, 70.61)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 194, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 423)
[0000][PE] mean and std.dev: (219.92, 69.86)
[0000][PE] low and high boundaries for proper pairs: (1, 505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 367.445 CPU sec, 20.854 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515533, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 195, 228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 464)
[0000][PE] mean and std.dev: (189.10, 82.35)
[0000][PE] low and high boundaries for proper pairs: (1, 582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.03, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 226, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 739)
[0000][PE] mean and std.dev: (248.35, 83.67)
[0000][PE] low and high boundaries for proper pairs: (1, 925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 358.494 CPU sec, 20.198 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515829, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 194, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 539)
[0000][PE] mean and std.dev: (185.75, 62.02)
[0000][PE] low and high boundaries for proper pairs: (1, 671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.04, 70.78)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 357.844 CPU sec, 20.122 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515723, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 273, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 642)
[0000][PE] mean and std.dev: (253.50, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.14, 70.84)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 277, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 712)
[0000][PE] mean and std.dev: (275.69, 112.76)
[0000][PE] low and high boundaries for proper pairs: (1, 886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 359.826 CPU sec, 20.283 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515950, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.89, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 315, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 893)
[0000][PE] mean and std.dev: (303.92, 109.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1120)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 358.962 CPU sec, 20.181 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1203908
	[0000][ M::kt_pipeline] read 1203908 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515752, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 177, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (198.86, 101.34)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.92, 70.71)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 359, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 938)
[0000][PE] mean and std.dev: (350.92, 102.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 364.784 CPU sec, 20.561 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1203990
	[0000][ M::kt_pipeline] read 1203990 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515130, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 226, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 568)
[0000][PE] mean and std.dev: (219.58, 84.23)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.99, 70.97)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 240, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 640)
[0000][PE] mean and std.dev: (244.64, 89.48)
[0000][PE] low and high boundaries for proper pairs: (1, 790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203908 reads in 357.045 CPU sec, 20.059 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204036
	[0000][ M::kt_pipeline] read 1204036 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515888, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (338.93, 70.94)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 276, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 460)
[0000][PE] mean and std.dev: (252.40, 56.85)
[0000][PE] low and high boundaries for proper pairs: (16, 534)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203990 reads in 357.847 CPU sec, 20.128 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515557, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 186, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 418)
[0000][PE] mean and std.dev: (179.50, 78.17)
[0000][PE] low and high boundaries for proper pairs: (1, 511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.88, 70.74)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 243, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (207.12, 75.06)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204036 reads in 358.568 CPU sec, 20.221 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515745, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 281, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (152, 397)
[0000][PE] mean and std.dev: (272.90, 32.95)
[0000][PE] low and high boundaries for proper pairs: (103, 446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.98, 70.63)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 356.110 CPU sec, 20.026 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204126
	[0000][ M::kt_pipeline] read 1204126 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515812, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 218, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 439)
[0000][PE] mean and std.dev: (170.64, 77.78)
[0000][PE] low and high boundaries for proper pairs: (1, 530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.20, 70.88)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 261, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 369)
[0000][PE] mean and std.dev: (230.44, 43.89)
[0000][PE] low and high boundaries for proper pairs: (45, 423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 354.436 CPU sec, 19.921 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1203942
	[0000][ M::kt_pipeline] read 1203942 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515279, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.25, 70.91)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204126 reads in 354.665 CPU sec, 19.953 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515932, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 208, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 339)
[0000][PE] mean and std.dev: (206.10, 46.84)
[0000][PE] low and high boundaries for proper pairs: (19, 393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.16, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 290, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (744.68, 907.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203942 reads in 352.076 CPU sec, 19.832 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516388, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.15, 70.80)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (118, 185, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 742)
[0000][PE] mean and std.dev: (230.00, 141.85)
[0000][PE] low and high boundaries for proper pairs: (1, 950)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 351.302 CPU sec, 19.754 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515564, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.21, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 358.129 CPU sec, 20.182 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515936, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 209, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (224.75, 94.89)
[0000][PE] low and high boundaries for proper pairs: (1, 871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.33, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 231, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 556)
[0000][PE] mean and std.dev: (252.80, 71.83)
[0000][PE] low and high boundaries for proper pairs: (1, 671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 361.191 CPU sec, 20.325 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515573, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 289, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 869)
[0000][PE] mean and std.dev: (237.54, 94.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.75, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 253, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 539)
[0000][PE] mean and std.dev: (258.18, 63.32)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 387.834 CPU sec, 21.830 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1203946
	[0000][ M::kt_pipeline] read 1203946 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515724, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 229, 300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 536)
[0000][PE] mean and std.dev: (209.50, 60.67)
[0000][PE] low and high boundaries for proper pairs: (1, 654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.37, 70.77)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 314, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 769)
[0000][PE] mean and std.dev: (304.00, 78.94)
[0000][PE] low and high boundaries for proper pairs: (1, 938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 366.729 CPU sec, 20.708 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1203978
	[0000][ M::kt_pipeline] read 1203978 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515376, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 175, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (209.79, 62.44)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.61, 70.83)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203946 reads in 369.440 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515258, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.62, 70.86)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 283, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 701)
[0000][PE] mean and std.dev: (257.54, 97.32)
[0000][PE] low and high boundaries for proper pairs: (1, 854)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203978 reads in 367.656 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515159, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 264, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (250.20, 74.78)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.58, 70.87)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (139, 171, 211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 355)
[0000][PE] mean and std.dev: (179.82, 62.06)
[0000][PE] low and high boundaries for proper pairs: (1, 428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 365.372 CPU sec, 20.581 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515450, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 201, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (80, 350)
[0000][PE] mean and std.dev: (213.36, 46.35)
[0000][PE] low and high boundaries for proper pairs: (26, 404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.48, 70.90)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 245, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 460)
[0000][PE] mean and std.dev: (229.87, 63.30)
[0000][PE] low and high boundaries for proper pairs: (1, 556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 367.325 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204020
	[0000][ M::kt_pipeline] read 1204020 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515762, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.73, 70.84)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 199, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 530)
[0000][PE] mean and std.dev: (216.77, 97.78)
[0000][PE] low and high boundaries for proper pairs: (1, 642)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 365.613 CPU sec, 20.579 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1203856
	[0000][ M::kt_pipeline] read 1203856 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516256, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 191, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1950)
[0000][PE] mean and std.dev: (377.33, 406.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.68, 70.80)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204020 reads in 361.255 CPU sec, 20.341 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204026
	[0000][ M::kt_pipeline] read 1204026 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515685, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (119, 225, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 632)
[0000][PE] mean and std.dev: (205.27, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.13, 70.92)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203856 reads in 363.994 CPU sec, 20.482 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515716, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 174, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (194.50, 65.82)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.93, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 215, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 555)
[0000][PE] mean and std.dev: (226.06, 80.77)
[0000][PE] low and high boundaries for proper pairs: (1, 677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204026 reads in 362.615 CPU sec, 20.428 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203956
	[0000][ M::kt_pipeline] read 1203956 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515529, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 243, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 744)
[0000][PE] mean and std.dev: (294.30, 143.07)
[0000][PE] low and high boundaries for proper pairs: (1, 926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (339.06, 71.19)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 248, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 868)
[0000][PE] mean and std.dev: (297.27, 115.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 363.698 CPU sec, 20.464 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515532, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 208, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 794)
[0000][PE] mean and std.dev: (240.45, 127.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.20, 71.08)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 1020, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (734.80, 527.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 231, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 510)
[0000][PE] mean and std.dev: (234.09, 63.97)
[0000][PE] low and high boundaries for proper pairs: (1, 620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203956 reads in 358.346 CPU sec, 20.217 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515398, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.28, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 264, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 503)
[0000][PE] mean and std.dev: (206.33, 68.06)
[0000][PE] low and high boundaries for proper pairs: (1, 619)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 363.349 CPU sec, 20.456 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1203936
	[0000][ M::kt_pipeline] read 1203936 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515808, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 174, 211)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 337)
[0000][PE] mean and std.dev: (166.80, 25.63)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.10, 70.88)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 244, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 394)
[0000][PE] mean and std.dev: (251.27, 47.83)
[0000][PE] low and high boundaries for proper pairs: (58, 450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 365.440 CPU sec, 20.599 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204028
	[0000][ M::kt_pipeline] read 1204028 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514942, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 239, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (72, 442)
[0000][PE] mean and std.dev: (233.67, 82.68)
[0000][PE] low and high boundaries for proper pairs: (1, 564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.42, 70.86)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (152, 191, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (228.55, 84.67)
[0000][PE] low and high boundaries for proper pairs: (1, 672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203936 reads in 369.220 CPU sec, 21.009 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516203, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 256, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (242.10, 91.54)
[0000][PE] low and high boundaries for proper pairs: (1, 795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.38, 70.81)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204028 reads in 365.917 CPU sec, 20.633 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203884
	[0000][ M::kt_pipeline] read 1203884 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515490, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.32, 70.87)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 301, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (256.47, 97.81)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 370.938 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515754, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 173, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 356)
[0000][PE] mean and std.dev: (169.27, 50.94)
[0000][PE] low and high boundaries for proper pairs: (1, 434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.20, 70.83)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 211, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 554)
[0000][PE] mean and std.dev: (226.38, 80.37)
[0000][PE] low and high boundaries for proper pairs: (1, 680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203884 reads in 363.382 CPU sec, 20.451 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515558, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 229, 346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 652)
[0000][PE] mean and std.dev: (242.55, 82.40)
[0000][PE] low and high boundaries for proper pairs: (1, 805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.21, 70.81)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 371.380 CPU sec, 20.911 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515103, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 129, 229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 445)
[0000][PE] mean and std.dev: (178.43, 85.08)
[0000][PE] low and high boundaries for proper pairs: (1, 553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.26, 70.80)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 162, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 621)
[0000][PE] mean and std.dev: (210.93, 91.88)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 366.506 CPU sec, 20.599 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204134
	[0000][ M::kt_pipeline] read 1204134 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515990, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.35, 70.77)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 244, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 689)
[0000][PE] mean and std.dev: (276.50, 108.38)
[0000][PE] low and high boundaries for proper pairs: (1, 851)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 361.908 CPU sec, 20.386 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515777, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 185, 219)
[0000][PE] low and high boundaries for computing mean and std.dev: (63, 323)
[0000][PE] mean and std.dev: (192.00, 49.73)
[0000][PE] low and high boundaries for proper pairs: (1, 391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.35, 70.77)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 304, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 661)
[0000][PE] mean and std.dev: (259.07, 99.24)
[0000][PE] low and high boundaries for proper pairs: (1, 825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204134 reads in 365.760 CPU sec, 20.563 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204082
	[0000][ M::kt_pipeline] read 1204082 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515696, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 173, 201)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 257)
[0000][PE] mean and std.dev: (182.55, 23.52)
[0000][PE] low and high boundaries for proper pairs: (88, 285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.30, 70.65)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 368.930 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1203936
	[0000][ M::kt_pipeline] read 1203936 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515597, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 175, 251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 537)
[0000][PE] mean and std.dev: (185.00, 72.87)
[0000][PE] low and high boundaries for proper pairs: (1, 680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.36, 70.71)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204082 reads in 364.890 CPU sec, 20.499 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515658, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 170, 208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 350)
[0000][PE] mean and std.dev: (173.17, 47.31)
[0000][PE] low and high boundaries for proper pairs: (1, 421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.23, 70.92)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 224, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (208.62, 76.00)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203936 reads in 368.084 CPU sec, 20.759 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515329, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 176, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 416)
[0000][PE] mean and std.dev: (195.10, 47.08)
[0000][PE] low and high boundaries for proper pairs: (1, 502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.16, 70.79)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 267, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 421)
[0000][PE] mean and std.dev: (247.39, 67.76)
[0000][PE] low and high boundaries for proper pairs: (1, 518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 363.105 CPU sec, 20.507 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515376, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.06, 70.72)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 367.217 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203956
	[0000][ M::kt_pipeline] read 1203956 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516176, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 253, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 478)
[0000][PE] mean and std.dev: (215.08, 87.97)
[0000][PE] low and high boundaries for proper pairs: (1, 579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.14, 70.90)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 231, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 677)
[0000][PE] mean and std.dev: (209.30, 76.19)
[0000][PE] low and high boundaries for proper pairs: (1, 851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 363.313 CPU sec, 20.441 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515365, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.04, 70.95)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (122, 143, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (204.00, 105.87)
[0000][PE] low and high boundaries for proper pairs: (1, 974)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203956 reads in 360.773 CPU sec, 20.273 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1203994
	[0000][ M::kt_pipeline] read 1203994 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515807, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.00, 70.72)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 164, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (200.33, 67.33)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 362.671 CPU sec, 20.379 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1203928
	[0000][ M::kt_pipeline] read 1203928 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515492, 0, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.09, 70.74)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 201, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 474)
[0000][PE] mean and std.dev: (208.45, 55.48)
[0000][PE] low and high boundaries for proper pairs: (1, 568)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203994 reads in 368.058 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1203982
	[0000][ M::kt_pipeline] read 1203982 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516155, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 207, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 500)
[0000][PE] mean and std.dev: (211.53, 71.05)
[0000][PE] low and high boundaries for proper pairs: (1, 613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.77, 70.69)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (105, 238, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 660)
[0000][PE] mean and std.dev: (222.54, 116.01)
[0000][PE] low and high boundaries for proper pairs: (1, 845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203928 reads in 358.814 CPU sec, 20.185 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515880, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 224, 225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 411)
[0000][PE] mean and std.dev: (193.10, 62.55)
[0000][PE] low and high boundaries for proper pairs: (1, 504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (339.02, 70.73)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 219, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (210.53, 75.21)
[0000][PE] low and high boundaries for proper pairs: (1, 686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203982 reads in 373.225 CPU sec, 21.084 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1203938
	[0000][ M::kt_pipeline] read 1203938 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515741, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 214, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 379)
[0000][PE] mean and std.dev: (232.50, 46.03)
[0000][PE] low and high boundaries for proper pairs: (48, 434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.96, 70.63)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 306, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8906)
[0000][PE] mean and std.dev: (1962.31, 2917.62)
[0000][PE] low and high boundaries for proper pairs: (1, 13633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 360.422 CPU sec, 20.283 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1203998
	[0000][ M::kt_pipeline] read 1203998 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516089, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.93, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 256, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (722.00, 988.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4674)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203938 reads in 359.344 CPU sec, 20.312 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204106
	[0000][ M::kt_pipeline] read 1204106 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515973, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (339.01, 70.82)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203998 reads in 360.652 CPU sec, 20.288 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203892
	[0000][ M::kt_pipeline] read 1203892 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515648, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 276, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (71, 451)
[0000][PE] mean and std.dev: (261.12, 35.42)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.74, 70.61)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204106 reads in 359.702 CPU sec, 20.395 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204108
	[0000][ M::kt_pipeline] read 1204108 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516228, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 570)
[0000][PE] mean and std.dev: (338.90, 70.72)
[0000][PE] low and high boundaries for proper pairs: (12, 663)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 278, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 677)
[0000][PE] mean and std.dev: (232.54, 90.33)
[0000][PE] low and high boundaries for proper pairs: (1, 845)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203892 reads in 364.738 CPU sec, 20.504 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515711, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 154, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 713)
[0000][PE] mean and std.dev: (169.00, 79.51)
[0000][PE] low and high boundaries for proper pairs: (1, 909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 335, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.79, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 252, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 667)
[0000][PE] mean and std.dev: (249.50, 81.76)
[0000][PE] low and high boundaries for proper pairs: (1, 816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204108 reads in 361.813 CPU sec, 20.465 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515971, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 207, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (209.50, 90.63)
[0000][PE] low and high boundaries for proper pairs: (1, 892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.98, 70.65)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 238, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 322)
[0000][PE] mean and std.dev: (217.38, 32.72)
[0000][PE] low and high boundaries for proper pairs: (82, 362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 355.403 CPU sec, 20.054 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1203954
	[0000][ M::kt_pipeline] read 1203954 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515666, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 226, 258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 484)
[0000][PE] mean and std.dev: (192.38, 64.60)
[0000][PE] low and high boundaries for proper pairs: (1, 597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 575)
[0000][PE] mean and std.dev: (339.03, 71.00)
[0000][PE] low and high boundaries for proper pairs: (5, 670)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 352.532 CPU sec, 19.889 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204002
	[0000][ M::kt_pipeline] read 1204002 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515540, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 158, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 371)
[0000][PE] mean and std.dev: (174.21, 57.30)
[0000][PE] low and high boundaries for proper pairs: (1, 448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.76, 70.75)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (157, 223, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 421)
[0000][PE] mean and std.dev: (200.14, 64.43)
[0000][PE] low and high boundaries for proper pairs: (1, 509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203954 reads in 352.168 CPU sec, 19.837 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1203904
	[0000][ M::kt_pipeline] read 1203904 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515994, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.99, 70.89)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 259, 262)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 376)
[0000][PE] mean and std.dev: (232.21, 62.73)
[0000][PE] low and high boundaries for proper pairs: (1, 483)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204002 reads in 353.648 CPU sec, 19.899 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 77517913, nseq: 518478
	[0000][ M::kt_pipeline] read 518478 sequences (77517913 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515905, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (291, 336, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 573)
[0000][PE] mean and std.dev: (338.99, 70.85)
[0000][PE] low and high boundaries for proper pairs: (9, 667)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 274, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (246.73, 111.92)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203904 reads in 353.766 CPU sec, 19.976 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 518478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 221963, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (290, 336, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 572)
[0000][PE] mean and std.dev: (338.81, 70.79)
[0000][PE] low and high boundaries for proper pairs: (8, 666)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 302, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (256.21, 99.65)
[0000][PE] low and high boundaries for proper pairs: (1, 699)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 518478 reads in 154.597 CPU sec, 8.745 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.153846 MHz
Runtime profile:

	Time taken for main_mem function: 10861.55 sec

	IO times (sec) :
	Reading IO time (reads) avg: 652.70, (652.70, 652.70)
	Writing IO time (SAM) avg: 1095.19, (1095.19, 1095.19)
	Reading IO time (Reference Genome) avg: 16.99, (16.99, 16.99)
	Index read time avg: 19.15, (19.15, 19.15)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 10824.04
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 10810.46, (10810.46, 10810.46)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 3856.26, (3856.26, 3856.26)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 6865.67, (6865.67, 6865.67)
		SMEM compute avg: 2799.97, (2819.48, 2790.25)
		SAL compute avg: 989.44, (995.07, 981.08)
				MEM_SA avg: 513.80, (516.27, 510.81)

		BSW time, avg: 2181.99, (2183.05, 2179.85)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
