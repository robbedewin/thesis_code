Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1206664
	[0000][ M::kt_pipeline] read 1206664 sequences (180000197 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1206618
	[0000][ M::kt_pipeline] read 1206618 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492978, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 556, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (481.33, 370.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.67, 81.09)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 324, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1678)
[0000][PE] mean and std.dev: (423.43, 265.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206664 reads in 430.098 CPU sec, 25.479 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1206574
	[0000][ M::kt_pipeline] read 1206574 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493386, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 266, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (673.00, 956.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.92, 81.08)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 445, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2191)
[0000][PE] mean and std.dev: (691.36, 569.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206618 reads in 421.427 CPU sec, 24.143 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493313, 15, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.24, 81.09)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (700, 1314, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6274)
[0000][PE] mean and std.dev: (2029.20, 1649.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8629)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206574 reads in 408.899 CPU sec, 23.247 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1206716
	[0000][ M::kt_pipeline] read 1206716 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493533, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.00, 81.12)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 391, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (690.62, 590.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 416.725 CPU sec, 23.855 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1206562
	[0000][ M::kt_pipeline] read 1206562 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492917, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 598, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9155)
[0000][PE] mean and std.dev: (1526.67, 1565.60)
[0000][PE] low and high boundaries for proper pairs: (1, 12104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.93, 81.19)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206716 reads in 412.925 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206576
	[0000][ M::kt_pipeline] read 1206576 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493542, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.03, 81.36)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 277, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8375)
[0000][PE] mean and std.dev: (984.08, 1251.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11101)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206562 reads in 401.865 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1206702
	[0000][ M::kt_pipeline] read 1206702 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493391, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 220, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6117)
[0000][PE] mean and std.dev: (1203.21, 1659.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.92, 81.13)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 408, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (533.75, 368.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206576 reads in 396.112 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206728
	[0000][ M::kt_pipeline] read 1206728 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492753, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.06, 81.29)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 328, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3032)
[0000][PE] mean and std.dev: (332.60, 288.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206702 reads in 399.056 CPU sec, 22.443 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1206928
	[0000][ M::kt_pipeline] read 1206928 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492912, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 232, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2119)
[0000][PE] mean and std.dev: (356.88, 275.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.91, 81.20)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 344, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (30, 670)
[0000][PE] mean and std.dev: (299.33, 86.21)
[0000][PE] low and high boundaries for proper pairs: (1, 798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206728 reads in 398.207 CPU sec, 22.332 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1206656
	[0000][ M::kt_pipeline] read 1206656 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493290, 11, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.81, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (157, 752, 3867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11287)
[0000][PE] mean and std.dev: (2287.00, 3000.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14997)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206928 reads in 403.530 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206816
	[0000][ M::kt_pipeline] read 1206816 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493120, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 302, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1826)
[0000][PE] mean and std.dev: (454.27, 372.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.07, 81.18)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 336, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (331.75, 307.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206656 reads in 394.935 CPU sec, 29.899 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206782
	[0000][ M::kt_pipeline] read 1206782 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492870, 6, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.16, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206816 reads in 405.289 CPU sec, 52.237 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206894
	[0000][ M::kt_pipeline] read 1206894 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493738, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.02, 81.42)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206782 reads in 410.161 CPU sec, 50.415 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1206840
	[0000][ M::kt_pipeline] read 1206840 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492901, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 359, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2088)
[0000][PE] mean and std.dev: (488.54, 394.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.00, 81.28)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206894 reads in 406.434 CPU sec, 49.488 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206910
	[0000][ M::kt_pipeline] read 1206910 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492967, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 216, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 762)
[0000][PE] mean and std.dev: (211.18, 80.73)
[0000][PE] low and high boundaries for proper pairs: (1, 946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.04, 81.42)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (778, 1763, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6880)
[0000][PE] mean and std.dev: (1922.62, 1396.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8914)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206840 reads in 404.976 CPU sec, 50.189 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1206702
	[0000][ M::kt_pipeline] read 1206702 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493168, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.74, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206910 reads in 398.546 CPU sec, 39.418 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206890
	[0000][ M::kt_pipeline] read 1206890 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493270, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.17, 81.38)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206702 reads in 396.623 CPU sec, 48.155 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206788
	[0000][ M::kt_pipeline] read 1206788 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493672, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 269, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (354.64, 157.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.03, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206890 reads in 406.967 CPU sec, 50.285 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1206734
	[0000][ M::kt_pipeline] read 1206734 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493478, 15, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.76, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 332, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6738)
[0000][PE] mean and std.dev: (1528.67, 2059.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9766)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206788 reads in 403.193 CPU sec, 50.623 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206894
	[0000][ M::kt_pipeline] read 1206894 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492649, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (445, 635, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1927)
[0000][PE] mean and std.dev: (602.10, 267.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2421)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206734 reads in 411.136 CPU sec, 48.432 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206976
	[0000][ M::kt_pipeline] read 1206976 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493409, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 566, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (460.60, 289.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.83, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206894 reads in 401.546 CPU sec, 38.993 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493083, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.83, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (121, 307, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1027)
[0000][PE] mean and std.dev: (248.27, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206976 reads in 398.244 CPU sec, 50.421 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1207030
	[0000][ M::kt_pipeline] read 1207030 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493128, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 610, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (875.27, 767.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.93, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 396.058 CPU sec, 51.793 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1207044
	[0000][ M::kt_pipeline] read 1207044 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493088, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.98, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207030 reads in 396.770 CPU sec, 40.608 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1207036
	[0000][ M::kt_pipeline] read 1207036 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493320, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 220, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (544.80, 660.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.90, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207044 reads in 394.665 CPU sec, 38.634 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206830
	[0000][ M::kt_pipeline] read 1206830 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493578, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 410, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (739.64, 797.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.89, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 765, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (779.10, 424.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207036 reads in 397.262 CPU sec, 47.637 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1206948
	[0000][ M::kt_pipeline] read 1206948 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493373, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 247, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (423.82, 308.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.70, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 349, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (961.45, 1103.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206830 reads in 399.406 CPU sec, 54.571 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1207070
	[0000][ M::kt_pipeline] read 1207070 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493134, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 303, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (557.08, 651.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.95, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (7, 429, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (300.00, 395.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206948 reads in 396.686 CPU sec, 50.741 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1207002
	[0000][ M::kt_pipeline] read 1207002 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493187, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.78, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207070 reads in 406.933 CPU sec, 36.928 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206918
	[0000][ M::kt_pipeline] read 1206918 sequences (180000168 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493365, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.73, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 448, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (700.60, 647.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3344)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207002 reads in 394.309 CPU sec, 33.446 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1206990
	[0000][ M::kt_pipeline] read 1206990 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493252, 15, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 625)
[0000][PE] mean and std.dev: (362.14, 81.73)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (501, 1081, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (893.71, 686.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206918 reads in 390.482 CPU sec, 36.571 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206916
	[0000][ M::kt_pipeline] read 1206916 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493430, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 246, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2134)
[0000][PE] mean and std.dev: (389.60, 425.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.95, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206990 reads in 404.902 CPU sec, 57.986 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1206952
	[0000][ M::kt_pipeline] read 1206952 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493914, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 397, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (743.00, 781.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.04, 81.72)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206916 reads in 392.519 CPU sec, 42.928 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206852
	[0000][ M::kt_pipeline] read 1206852 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493515, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 628, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (576.79, 410.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.95, 81.68)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (328, 574, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (925.55, 1018.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 268, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (507.93, 528.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206952 reads in 397.718 CPU sec, 49.115 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206726
	[0000][ M::kt_pipeline] read 1206726 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493611, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.13, 81.32)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 339, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (599.50, 751.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206852 reads in 400.922 CPU sec, 53.704 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206826
	[0000][ M::kt_pipeline] read 1206826 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493437, 8, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 315, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2182)
[0000][PE] mean and std.dev: (557.73, 431.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2832)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206726 reads in 409.385 CPU sec, 45.377 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1207068
	[0000][ M::kt_pipeline] read 1207068 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493140, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 667, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (1132.15, 1269.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.77, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206826 reads in 414.182 CPU sec, 54.131 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1206916
	[0000][ M::kt_pipeline] read 1206916 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492807, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 405, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (736.92, 851.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.86, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207068 reads in 400.071 CPU sec, 50.270 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206998
	[0000][ M::kt_pipeline] read 1206998 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493379, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 288, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1914)
[0000][PE] mean and std.dev: (470.93, 310.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2463)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206916 reads in 401.237 CPU sec, 53.044 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1207542
	[0000][ M::kt_pipeline] read 1207542 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493158, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.72, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206998 reads in 412.568 CPU sec, 50.870 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493262, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 283, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 741)
[0000][PE] mean and std.dev: (315.90, 127.46)
[0000][PE] low and high boundaries for proper pairs: (1, 903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.66, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (288, 1758, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8016)
[0000][PE] mean and std.dev: (1689.82, 1543.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10592)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 289, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2520)
[0000][PE] mean and std.dev: (405.07, 330.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207542 reads in 414.067 CPU sec, 55.531 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206828
	[0000][ M::kt_pipeline] read 1206828 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493436, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 399, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3458)
[0000][PE] mean and std.dev: (593.00, 486.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.74, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (899, 2384, 4017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10253)
[0000][PE] mean and std.dev: (2198.77, 1521.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13371)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 401.175 CPU sec, 48.143 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1206988
	[0000][ M::kt_pipeline] read 1206988 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 494143, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 436, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (545.46, 399.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.56, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206828 reads in 394.385 CPU sec, 38.314 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1206840
	[0000][ M::kt_pipeline] read 1206840 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493288, 10, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.48, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 585, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (413.00, 314.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2724)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 371, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1954)
[0000][PE] mean and std.dev: (405.08, 259.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206988 reads in 395.815 CPU sec, 48.154 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1206970
	[0000][ M::kt_pipeline] read 1206970 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493138, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 337, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1381)
[0000][PE] mean and std.dev: (371.89, 343.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.58, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (244, 468, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (491.70, 522.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 344, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (464.80, 319.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206840 reads in 398.768 CPU sec, 39.198 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1207024
	[0000][ M::kt_pipeline] read 1207024 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492770, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 192, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (240.50, 132.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.45, 81.67)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206970 reads in 412.489 CPU sec, 46.002 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1206952
	[0000][ M::kt_pipeline] read 1206952 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493231, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 411, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (307.90, 127.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.46, 81.82)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 323, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 692)
[0000][PE] mean and std.dev: (299.00, 79.07)
[0000][PE] low and high boundaries for proper pairs: (1, 835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207024 reads in 403.571 CPU sec, 43.076 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1206868
	[0000][ M::kt_pipeline] read 1206868 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493595, 17, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.52, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (351, 1005, 3638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10212)
[0000][PE] mean and std.dev: (1793.88, 2052.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13499)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206952 reads in 401.918 CPU sec, 50.152 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1206846
	[0000][ M::kt_pipeline] read 1206846 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493095, 9, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.41, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 681, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (558.85, 364.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206868 reads in 399.411 CPU sec, 46.840 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1206890
	[0000][ M::kt_pipeline] read 1206890 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492962, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.39, 81.71)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 302, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (499.78, 453.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206846 reads in 396.877 CPU sec, 53.543 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206752
	[0000][ M::kt_pipeline] read 1206752 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493401, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 336, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (533.64, 449.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.43, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206890 reads in 392.901 CPU sec, 50.596 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206948
	[0000][ M::kt_pipeline] read 1206948 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493481, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.40, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206752 reads in 395.512 CPU sec, 42.012 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206906
	[0000][ M::kt_pipeline] read 1206906 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493482, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 229, 719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1779)
[0000][PE] mean and std.dev: (393.36, 317.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.26, 81.71)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 302, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (484.40, 353.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206948 reads in 400.371 CPU sec, 44.838 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206936
	[0000][ M::kt_pipeline] read 1206936 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493727, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 242, 270)
[0000][PE] low and high boundaries for computing mean and std.dev: (42, 422)
[0000][PE] mean and std.dev: (214.50, 41.19)
[0000][PE] low and high boundaries for proper pairs: (1, 498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 624)
[0000][PE] mean and std.dev: (361.24, 81.75)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206906 reads in 402.244 CPU sec, 57.120 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206896
	[0000][ M::kt_pipeline] read 1206896 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493661, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 351, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (715.14, 782.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.43, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (457, 4872, 5341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15109)
[0000][PE] mean and std.dev: (3556.36, 2762.51)
[0000][PE] low and high boundaries for proper pairs: (1, 19993)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206936 reads in 405.035 CPU sec, 47.044 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1206884
	[0000][ M::kt_pipeline] read 1206884 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493321, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.43, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206896 reads in 401.667 CPU sec, 55.401 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206702
	[0000][ M::kt_pipeline] read 1206702 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493268, 9, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.31, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 474, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (419.46, 272.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1720)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206884 reads in 398.696 CPU sec, 42.082 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493664, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (90, 171, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1026)
[0000][PE] mean and std.dev: (179.44, 112.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.54, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 205, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (515.60, 503.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206702 reads in 398.107 CPU sec, 43.072 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206748
	[0000][ M::kt_pipeline] read 1206748 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493595, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 277, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1072)
[0000][PE] mean and std.dev: (359.57, 250.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.39, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (337, 519, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5803)
[0000][PE] mean and std.dev: (1163.50, 1305.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7625)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 411.990 CPU sec, 46.425 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1206804
	[0000][ M::kt_pipeline] read 1206804 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493525, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 321, 346)
[0000][PE] low and high boundaries for computing mean and std.dev: (211, 436)
[0000][PE] mean and std.dev: (322.50, 13.09)
[0000][PE] low and high boundaries for proper pairs: (166, 481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.50, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 264, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1776)
[0000][PE] mean and std.dev: (443.90, 453.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206748 reads in 420.749 CPU sec, 45.204 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206876
	[0000][ M::kt_pipeline] read 1206876 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493340, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 362, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1115)
[0000][PE] mean and std.dev: (314.89, 137.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.53, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206804 reads in 407.767 CPU sec, 51.370 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206920
	[0000][ M::kt_pipeline] read 1206920 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 493499, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 381, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (396.29, 269.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.40, 81.71)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206876 reads in 403.462 CPU sec, 47.165 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1206836
	[0000][ M::kt_pipeline] read 1206836 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492694, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 357, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1529)
[0000][PE] mean and std.dev: (385.67, 223.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.47, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 993, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (791.82, 716.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206920 reads in 401.654 CPU sec, 49.648 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1206798
	[0000][ M::kt_pipeline] read 1206798 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 494025, 15, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 333, 621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1425)
[0000][PE] mean and std.dev: (452.78, 342.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.03, 81.21)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (337, 1003, 5012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14362)
[0000][PE] mean and std.dev: (2628.60, 3463.44)
[0000][PE] low and high boundaries for proper pairs: (1, 19037)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 552, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (646.50, 449.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206836 reads in 401.863 CPU sec, 47.297 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493144, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 257, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 994)
[0000][PE] mean and std.dev: (322.90, 224.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.83, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206798 reads in 401.403 CPU sec, 49.436 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1206788
	[0000][ M::kt_pipeline] read 1206788 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 494226, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.49, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 322, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (624.21, 476.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 396.946 CPU sec, 48.760 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493191, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 341, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (980.00, 1140.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.47, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (428, 1593, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6584)
[0000][PE] mean and std.dev: (1419.10, 1158.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8636)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 810, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (805.20, 599.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206788 reads in 399.598 CPU sec, 49.021 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1206630
	[0000][ M::kt_pipeline] read 1206630 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493415, 13, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.46, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 716, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (1420.00, 1498.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8753)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 328, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1488)
[0000][PE] mean and std.dev: (360.00, 241.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1910)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 407.059 CPU sec, 53.634 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206858
	[0000][ M::kt_pipeline] read 1206858 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492860, 10, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.99, 81.22)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (210, 405, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 795)
[0000][PE] mean and std.dev: (312.56, 137.83)
[0000][PE] low and high boundaries for proper pairs: (1, 990)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206630 reads in 402.908 CPU sec, 51.494 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1206810
	[0000][ M::kt_pipeline] read 1206810 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493149, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 774, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (473.62, 376.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.77, 81.14)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206858 reads in 398.184 CPU sec, 49.454 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206756
	[0000][ M::kt_pipeline] read 1206756 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493286, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.31, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206810 reads in 406.725 CPU sec, 47.613 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206630
	[0000][ M::kt_pipeline] read 1206630 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493401, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 665, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (731.89, 765.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.38, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206756 reads in 402.553 CPU sec, 47.261 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493536, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.30, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206630 reads in 398.465 CPU sec, 51.545 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206900
	[0000][ M::kt_pipeline] read 1206900 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 494352, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 335, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (860.62, 1117.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.46, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 391.769 CPU sec, 42.494 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1206626
	[0000][ M::kt_pipeline] read 1206626 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493477, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 435, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (682.87, 842.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.54, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 301, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (376.22, 302.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206900 reads in 399.413 CPU sec, 47.952 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206774
	[0000][ M::kt_pipeline] read 1206774 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493105, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.14, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 240, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (640.27, 754.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206626 reads in 400.499 CPU sec, 53.983 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206726
	[0000][ M::kt_pipeline] read 1206726 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493179, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 712, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2661)
[0000][PE] mean and std.dev: (667.46, 634.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.84, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206774 reads in 402.299 CPU sec, 44.795 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206566
	[0000][ M::kt_pipeline] read 1206566 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493871, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 387, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (654.64, 490.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.09, 81.27)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 364, 3481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10011)
[0000][PE] mean and std.dev: (1839.80, 2666.19)
[0000][PE] low and high boundaries for proper pairs: (1, 13276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206726 reads in 398.581 CPU sec, 49.886 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206642
	[0000][ M::kt_pipeline] read 1206642 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493113, 10, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.92, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (237, 449, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (539.70, 435.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3893)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 297, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1652)
[0000][PE] mean and std.dev: (440.30, 288.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2135)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206566 reads in 407.524 CPU sec, 52.376 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493636, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 309, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 804)
[0000][PE] mean and std.dev: (302.92, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.80, 81.10)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (710, 831, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (1138.30, 700.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206642 reads in 404.338 CPU sec, 47.995 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493239, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 170, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (460.85, 482.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.20, 81.20)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (138, 258, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (488.82, 547.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 977, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (1021.50, 802.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 400.703 CPU sec, 45.845 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206590
	[0000][ M::kt_pipeline] read 1206590 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493336, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 306, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2071)
[0000][PE] mean and std.dev: (385.27, 283.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.12, 81.11)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 400.758 CPU sec, 41.103 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1206530
	[0000][ M::kt_pipeline] read 1206530 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493413, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.12, 81.10)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206590 reads in 406.659 CPU sec, 49.061 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 493330, 11, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.92, 81.15)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (129, 296, 3631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10635)
[0000][PE] mean and std.dev: (2035.73, 2778.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14137)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 916, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (805.67, 663.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206530 reads in 405.888 CPU sec, 49.796 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492832, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.95, 81.05)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 623, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1607)
[0000][PE] mean and std.dev: (391.00, 218.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2068)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 402.348 CPU sec, 58.732 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492987, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 327, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1605)
[0000][PE] mean and std.dev: (330.79, 205.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.95, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 322, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1605)
[0000][PE] mean and std.dev: (464.82, 354.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 407.915 CPU sec, 49.951 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1206570
	[0000][ M::kt_pipeline] read 1206570 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492964, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 288, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (1000.14, 1093.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.79, 81.21)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 353, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (603.75, 559.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 404.775 CPU sec, 44.013 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493199, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.64, 81.20)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 437, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (542.00, 369.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206570 reads in 408.318 CPU sec, 46.303 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206734
	[0000][ M::kt_pipeline] read 1206734 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493268, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.77, 80.92)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 399.476 CPU sec, 47.745 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493226, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 251, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (227.25, 75.52)
[0000][PE] low and high boundaries for proper pairs: (1, 555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.74, 81.01)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (152, 304, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 821)
[0000][PE] mean and std.dev: (241.50, 104.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206734 reads in 398.148 CPU sec, 50.105 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206582
	[0000][ M::kt_pipeline] read 1206582 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492576, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 162, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 475)
[0000][PE] mean and std.dev: (179.33, 96.03)
[0000][PE] low and high boundaries for proper pairs: (1, 586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.96, 81.07)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 406.463 CPU sec, 63.536 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1206676
	[0000][ M::kt_pipeline] read 1206676 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493191, 9, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.10, 80.88)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 699, 5358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15622)
[0000][PE] mean and std.dev: (2233.85, 2864.98)
[0000][PE] low and high boundaries for proper pairs: (1, 20754)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206582 reads in 398.956 CPU sec, 53.888 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492651, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 381, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (676.12, 615.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.15, 81.06)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 270, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2103)
[0000][PE] mean and std.dev: (545.27, 563.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206676 reads in 405.681 CPU sec, 56.154 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206846
	[0000][ M::kt_pipeline] read 1206846 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492553, 11, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.17, 81.09)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 576, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (506.10, 285.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 405.460 CPU sec, 50.075 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206624
	[0000][ M::kt_pipeline] read 1206624 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492497, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 887, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (685.06, 464.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.11, 81.10)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206846 reads in 396.317 CPU sec, 48.699 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1206684
	[0000][ M::kt_pipeline] read 1206684 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493627, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 321, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1526)
[0000][PE] mean and std.dev: (341.13, 208.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.14, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 353, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (889.83, 958.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206624 reads in 394.096 CPU sec, 49.940 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206794
	[0000][ M::kt_pipeline] read 1206794 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492687, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 264, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (411.08, 298.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.06, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 887, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4939)
[0000][PE] mean and std.dev: (986.92, 725.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206684 reads in 397.942 CPU sec, 50.692 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 492837, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 274, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2495)
[0000][PE] mean and std.dev: (482.88, 444.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.55)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 196, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (192.30, 72.09)
[0000][PE] low and high boundaries for proper pairs: (1, 674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206794 reads in 394.607 CPU sec, 48.968 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206722
	[0000][ M::kt_pipeline] read 1206722 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492798, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 229, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (236.15, 80.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.18)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 394.072 CPU sec, 44.779 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1206784
	[0000][ M::kt_pipeline] read 1206784 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492692, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.91, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 512, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (487.36, 386.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2700)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206722 reads in 398.669 CPU sec, 47.327 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1206738
	[0000][ M::kt_pipeline] read 1206738 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492805, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 335, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (805.85, 869.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.20, 81.27)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 274, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1078)
[0000][PE] mean and std.dev: (355.41, 211.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206784 reads in 405.681 CPU sec, 61.688 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1206752
	[0000][ M::kt_pipeline] read 1206752 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493073, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 396, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (742.33, 776.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.07, 81.31)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206738 reads in 389.446 CPU sec, 44.432 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206654
	[0000][ M::kt_pipeline] read 1206654 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492512, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.12, 81.22)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206752 reads in 396.226 CPU sec, 48.289 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1207008
	[0000][ M::kt_pipeline] read 1207008 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492739, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 378, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1458.14, 1731.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.98, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206654 reads in 406.264 CPU sec, 53.928 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206806
	[0000][ M::kt_pipeline] read 1206806 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493382, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 301, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5879)
[0000][PE] mean and std.dev: (1072.20, 1463.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.04, 81.19)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207008 reads in 394.835 CPU sec, 48.056 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1206728
	[0000][ M::kt_pipeline] read 1206728 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492478, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 295, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (368.38, 371.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.02, 81.45)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 744, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8504)
[0000][PE] mean and std.dev: (1239.33, 1531.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11302)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206806 reads in 394.228 CPU sec, 55.128 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206818
	[0000][ M::kt_pipeline] read 1206818 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493005, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.11, 81.35)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206728 reads in 405.993 CPU sec, 58.261 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206932
	[0000][ M::kt_pipeline] read 1206932 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493097, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 205, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 788)
[0000][PE] mean and std.dev: (216.10, 141.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.97, 81.36)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 207, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1992)
[0000][PE] mean and std.dev: (446.60, 471.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206818 reads in 413.902 CPU sec, 61.278 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1206924
	[0000][ M::kt_pipeline] read 1206924 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493032, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 936, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8370)
[0000][PE] mean and std.dev: (1570.21, 1830.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.76, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 237, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 498)
[0000][PE] mean and std.dev: (202.50, 53.92)
[0000][PE] low and high boundaries for proper pairs: (1, 605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206932 reads in 408.070 CPU sec, 59.918 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1206986
	[0000][ M::kt_pipeline] read 1206986 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492851, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.85, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 361, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (681.55, 525.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2790)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206924 reads in 413.423 CPU sec, 60.369 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1207030
	[0000][ M::kt_pipeline] read 1207030 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493101, 9, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.87, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 274, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1765)
[0000][PE] mean and std.dev: (405.56, 346.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2285)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206986 reads in 406.606 CPU sec, 56.423 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1206756
	[0000][ M::kt_pipeline] read 1206756 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492342, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.01, 81.54)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207030 reads in 400.597 CPU sec, 49.873 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206816
	[0000][ M::kt_pipeline] read 1206816 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493517, 12, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.06, 81.49)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (208, 975, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (912.08, 743.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 525, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (610.89, 351.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206756 reads in 403.522 CPU sec, 55.876 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1206900
	[0000][ M::kt_pipeline] read 1206900 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493008, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 223, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1101)
[0000][PE] mean and std.dev: (242.50, 146.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.45, 81.36)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206816 reads in 399.890 CPU sec, 51.602 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206722
	[0000][ M::kt_pipeline] read 1206722 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492951, 9, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.62)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 253, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (15, 525)
[0000][PE] mean and std.dev: (245.67, 44.01)
[0000][PE] low and high boundaries for proper pairs: (1, 627)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206900 reads in 399.974 CPU sec, 52.341 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206824
	[0000][ M::kt_pipeline] read 1206824 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492791, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.82, 81.31)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206722 reads in 401.508 CPU sec, 50.623 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206922
	[0000][ M::kt_pipeline] read 1206922 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492572, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 300, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 772)
[0000][PE] mean and std.dev: (284.00, 152.79)
[0000][PE] low and high boundaries for proper pairs: (1, 975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.82, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 877, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1113.90, 845.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8256)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 317, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8779)
[0000][PE] mean and std.dev: (1178.62, 1466.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206824 reads in 408.932 CPU sec, 49.054 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1206924
	[0000][ M::kt_pipeline] read 1206924 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492880, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 484, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4583)
[0000][PE] mean and std.dev: (821.67, 778.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.84, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206922 reads in 401.200 CPU sec, 60.525 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1206766
	[0000][ M::kt_pipeline] read 1206766 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492623, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 518, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (623.23, 555.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.06, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (652, 5597, 5853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16255)
[0000][PE] mean and std.dev: (3548.00, 2958.17)
[0000][PE] low and high boundaries for proper pairs: (1, 21456)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 371, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (374.27, 251.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206924 reads in 408.594 CPU sec, 50.463 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1206936
	[0000][ M::kt_pipeline] read 1206936 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492194, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.98, 81.43)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 265, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1649)
[0000][PE] mean and std.dev: (320.80, 241.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2143)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206766 reads in 402.524 CPU sec, 47.883 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1206842
	[0000][ M::kt_pipeline] read 1206842 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 493320, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 273, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8459)
[0000][PE] mean and std.dev: (997.56, 1233.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.96, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206936 reads in 398.640 CPU sec, 56.878 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1206852
	[0000][ M::kt_pipeline] read 1206852 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492886, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.10, 81.71)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206842 reads in 397.532 CPU sec, 60.107 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206720
	[0000][ M::kt_pipeline] read 1206720 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493820, 11, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.00, 81.56)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (449, 932, 5142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14528)
[0000][PE] mean and std.dev: (2398.18, 2750.64)
[0000][PE] low and high boundaries for proper pairs: (1, 19221)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 309, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2071)
[0000][PE] mean and std.dev: (535.93, 513.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2701)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206852 reads in 390.425 CPU sec, 54.299 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1206946
	[0000][ M::kt_pipeline] read 1206946 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492535, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.00, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 279, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (52, 562)
[0000][PE] mean and std.dev: (286.08, 57.15)
[0000][PE] low and high boundaries for proper pairs: (1, 664)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206720 reads in 395.994 CPU sec, 52.565 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1206768
	[0000][ M::kt_pipeline] read 1206768 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493024, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 815, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1982)
[0000][PE] mean and std.dev: (612.54, 292.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.09, 81.88)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 308, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (660.22, 665.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206946 reads in 394.634 CPU sec, 52.691 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206706
	[0000][ M::kt_pipeline] read 1206706 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493670, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 297, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (590.90, 643.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.83, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 308, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (493.78, 372.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206768 reads in 396.580 CPU sec, 49.760 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206854
	[0000][ M::kt_pipeline] read 1206854 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493464, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 318, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2141)
[0000][PE] mean and std.dev: (510.93, 465.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.97, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 359, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (484.73, 342.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206706 reads in 401.391 CPU sec, 50.872 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1207060
	[0000][ M::kt_pipeline] read 1207060 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492780, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 243, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (363.50, 308.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.70, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 405, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6757)
[0000][PE] mean and std.dev: (572.38, 713.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8991)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 352, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (441.82, 331.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206854 reads in 405.534 CPU sec, 54.765 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206918
	[0000][ M::kt_pipeline] read 1206918 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492561, 11, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.77, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1249, 1564, 5061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12685)
[0000][PE] mean and std.dev: (2361.27, 2232.72)
[0000][PE] low and high boundaries for proper pairs: (1, 16497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 410, 2736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7676)
[0000][PE] mean and std.dev: (1208.69, 1168.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10146)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207060 reads in 416.750 CPU sec, 64.484 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206880
	[0000][ M::kt_pipeline] read 1206880 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493829, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 208, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 430)
[0000][PE] mean and std.dev: (200.83, 59.27)
[0000][PE] low and high boundaries for proper pairs: (1, 517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.39, 81.71)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 871, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1196.17, 1310.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8584)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 462, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (1262.79, 1518.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206918 reads in 397.626 CPU sec, 52.443 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1206782
	[0000][ M::kt_pipeline] read 1206782 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493462, 9, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.69, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206880 reads in 402.260 CPU sec, 52.394 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1207010
	[0000][ M::kt_pipeline] read 1207010 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492962, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 225, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (230.10, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.44, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206782 reads in 398.427 CPU sec, 58.408 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1206876
	[0000][ M::kt_pipeline] read 1206876 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493215, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 546, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (649.40, 520.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.68, 81.72)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207010 reads in 402.738 CPU sec, 60.090 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206874
	[0000][ M::kt_pipeline] read 1206874 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 492740, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 211, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1622)
[0000][PE] mean and std.dev: (302.25, 292.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.39, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 304, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (292.00, 126.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206876 reads in 401.630 CPU sec, 58.274 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1207450
	[0000][ M::kt_pipeline] read 1207450 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492493, 14, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.47, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (145, 473, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (715.57, 680.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206874 reads in 413.615 CPU sec, 60.838 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206768
	[0000][ M::kt_pipeline] read 1206768 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492153, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 410, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (614.50, 604.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 362, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 623)
[0000][PE] mean and std.dev: (360.19, 82.23)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (132, 298, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (271.44, 167.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207450 reads in 420.249 CPU sec, 58.569 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206792
	[0000][ M::kt_pipeline] read 1206792 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493417, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 619, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2169)
[0000][PE] mean and std.dev: (577.60, 444.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.11, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 920, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (490.75, 411.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 386, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (383.17, 267.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206768 reads in 394.899 CPU sec, 47.222 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1207262
	[0000][ M::kt_pipeline] read 1207262 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492911, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 389, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1774)
[0000][PE] mean and std.dev: (429.13, 232.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.34, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (126, 203, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 720)
[0000][PE] mean and std.dev: (229.10, 179.53)
[0000][PE] low and high boundaries for proper pairs: (1, 947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206792 reads in 403.467 CPU sec, 57.260 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1206828
	[0000][ M::kt_pipeline] read 1206828 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492736, 11, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.12, 81.44)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (929, 1093, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (1214.00, 429.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 266, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1375)
[0000][PE] mean and std.dev: (380.83, 349.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1780)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207262 reads in 401.486 CPU sec, 46.437 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1206966
	[0000][ M::kt_pipeline] read 1206966 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493005, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 271, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (629.14, 783.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 625)
[0000][PE] mean and std.dev: (362.20, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (125, 447, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (696.92, 1002.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7293)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206828 reads in 396.985 CPU sec, 52.522 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206764
	[0000][ M::kt_pipeline] read 1206764 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493345, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.03, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 289, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 612)
[0000][PE] mean and std.dev: (259.18, 90.17)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206966 reads in 400.627 CPU sec, 52.309 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493204, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 293, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6763)
[0000][PE] mean and std.dev: (1069.92, 1264.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.96, 81.25)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206764 reads in 399.267 CPU sec, 48.922 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206764
	[0000][ M::kt_pipeline] read 1206764 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493291, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 358, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6615)
[0000][PE] mean and std.dev: (1095.15, 993.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.93, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 393, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (708.58, 581.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 412.188 CPU sec, 63.243 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206858
	[0000][ M::kt_pipeline] read 1206858 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493649, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.13, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 879, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (606.75, 453.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206764 reads in 401.077 CPU sec, 49.030 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1206902
	[0000][ M::kt_pipeline] read 1206902 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493232, 11, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.04, 81.38)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (434, 558, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6863)
[0000][PE] mean and std.dev: (1418.45, 1571.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9006)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 387, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (644.29, 674.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206858 reads in 402.455 CPU sec, 51.380 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1206750
	[0000][ M::kt_pipeline] read 1206750 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492776, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.97, 81.56)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206902 reads in 400.086 CPU sec, 52.478 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206786
	[0000][ M::kt_pipeline] read 1206786 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493620, 7, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.99, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206750 reads in 408.373 CPU sec, 67.184 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493986, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 736, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (784.47, 614.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.98, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206786 reads in 409.799 CPU sec, 56.896 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206800
	[0000][ M::kt_pipeline] read 1206800 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493160, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 943, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1041.55, 742.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.99, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 403.934 CPU sec, 60.878 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206910
	[0000][ M::kt_pipeline] read 1206910 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493108, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 206, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1030)
[0000][PE] mean and std.dev: (205.00, 106.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.00, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (590, 1254, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7130)
[0000][PE] mean and std.dev: (1752.82, 1618.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9310)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206800 reads in 409.162 CPU sec, 55.988 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1206750
	[0000][ M::kt_pipeline] read 1206750 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493010, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 960, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (770.42, 617.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.27, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206910 reads in 404.672 CPU sec, 55.960 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1206950
	[0000][ M::kt_pipeline] read 1206950 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493449, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 234, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1556)
[0000][PE] mean and std.dev: (313.21, 323.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.02, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206750 reads in 402.549 CPU sec, 50.450 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206760
	[0000][ M::kt_pipeline] read 1206760 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493389, 10, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.71, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (493, 1336, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1430.80, 1170.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7505)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206950 reads in 415.569 CPU sec, 52.882 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206892
	[0000][ M::kt_pipeline] read 1206892 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493847, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 288, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (519.59, 423.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.00, 81.69)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (447, 1555, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5817)
[0000][PE] mean and std.dev: (1333.45, 973.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206760 reads in 405.459 CPU sec, 56.849 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206784
	[0000][ M::kt_pipeline] read 1206784 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 493098, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 249, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1623)
[0000][PE] mean and std.dev: (274.78, 170.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.07, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206892 reads in 397.363 CPU sec, 51.173 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1206736
	[0000][ M::kt_pipeline] read 1206736 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493444, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 143, 273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (177.47, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.91, 81.40)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 270, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (639.60, 737.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206784 reads in 408.504 CPU sec, 57.854 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206580
	[0000][ M::kt_pipeline] read 1206580 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493216, 9, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.95, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206736 reads in 412.024 CPU sec, 59.263 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206904
	[0000][ M::kt_pipeline] read 1206904 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492633, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.28, 81.51)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 387, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1264)
[0000][PE] mean and std.dev: (444.15, 353.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1857)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206580 reads in 405.427 CPU sec, 55.675 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206802
	[0000][ M::kt_pipeline] read 1206802 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493405, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.63, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206904 reads in 412.888 CPU sec, 65.960 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206796
	[0000][ M::kt_pipeline] read 1206796 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 492978, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 366, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 936)
[0000][PE] mean and std.dev: (337.44, 186.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.72, 81.40)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 438, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (560.38, 424.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206802 reads in 409.084 CPU sec, 68.950 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206770
	[0000][ M::kt_pipeline] read 1206770 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493868, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 285, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (560.15, 523.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206796 reads in 413.865 CPU sec, 55.617 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1206766
	[0000][ M::kt_pipeline] read 1206766 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493158, 9, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.62, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 205, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 703)
[0000][PE] mean and std.dev: (229.14, 97.33)
[0000][PE] low and high boundaries for proper pairs: (1, 878)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206770 reads in 409.217 CPU sec, 64.071 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206614
	[0000][ M::kt_pipeline] read 1206614 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493668, 9, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.76, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (121, 596, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1987)
[0000][PE] mean and std.dev: (450.78, 346.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206766 reads in 414.615 CPU sec, 65.438 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1206678
	[0000][ M::kt_pipeline] read 1206678 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493199, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 269, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 540)
[0000][PE] mean and std.dev: (242.45, 71.60)
[0000][PE] low and high boundaries for proper pairs: (1, 656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.80, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 532, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7720)
[0000][PE] mean and std.dev: (1302.40, 1497.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10222)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206614 reads in 397.015 CPU sec, 55.639 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206744
	[0000][ M::kt_pipeline] read 1206744 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493458, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.89, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206678 reads in 403.506 CPU sec, 49.386 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206734
	[0000][ M::kt_pipeline] read 1206734 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493536, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 625, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (670.40, 547.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.62, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206744 reads in 418.253 CPU sec, 73.355 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206760
	[0000][ M::kt_pipeline] read 1206760 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493156, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 424, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (887.92, 1022.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.87, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 756, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (849.42, 747.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206734 reads in 410.730 CPU sec, 62.855 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206656
	[0000][ M::kt_pipeline] read 1206656 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493414, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 396, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (902.55, 921.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.20, 81.32)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206760 reads in 406.634 CPU sec, 57.517 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206658
	[0000][ M::kt_pipeline] read 1206658 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492963, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.78, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206656 reads in 416.794 CPU sec, 70.713 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1206622
	[0000][ M::kt_pipeline] read 1206622 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493586, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 589, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1642)
[0000][PE] mean and std.dev: (499.40, 342.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.02, 81.16)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 216, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (395.33, 385.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206658 reads in 416.121 CPU sec, 73.930 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1206642
	[0000][ M::kt_pipeline] read 1206642 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493063, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.14, 81.21)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206622 reads in 409.093 CPU sec, 56.762 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493340, 19, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 169, 231)
[0000][PE] low and high boundaries for computing mean and std.dev: (3, 383)
[0000][PE] mean and std.dev: (179.11, 53.76)
[0000][PE] low and high boundaries for proper pairs: (1, 459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.96, 81.25)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 432, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (939.00, 857.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 447, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (672.78, 605.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206642 reads in 398.083 CPU sec, 53.533 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206754
	[0000][ M::kt_pipeline] read 1206754 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493319, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 299, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2103)
[0000][PE] mean and std.dev: (322.50, 207.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.71, 81.20)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 414.880 CPU sec, 52.220 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493151, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 324, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1162)
[0000][PE] mean and std.dev: (355.18, 264.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.53, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 270, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6069)
[0000][PE] mean and std.dev: (646.55, 743.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206754 reads in 422.524 CPU sec, 59.149 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493631, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 329, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1067)
[0000][PE] mean and std.dev: (288.77, 124.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.50, 81.23)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 411.773 CPU sec, 59.579 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206536
	[0000][ M::kt_pipeline] read 1206536 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493447, 13, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 468, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (491.89, 295.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.79, 81.20)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (419, 536, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (820.85, 656.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 1299, 3879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11213)
[0000][PE] mean and std.dev: (1850.83, 2160.07)
[0000][PE] low and high boundaries for proper pairs: (1, 14880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 396.282 CPU sec, 49.867 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493235, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 352, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 968)
[0000][PE] mean and std.dev: (291.38, 97.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.62, 81.01)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 372, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (674.25, 625.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206536 reads in 402.793 CPU sec, 56.991 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492868, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 367, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (672.53, 917.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.01, 81.14)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 368, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (475.78, 691.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3240)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 409.272 CPU sec, 55.069 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1206668
	[0000][ M::kt_pipeline] read 1206668 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492921, 12, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.21, 80.95)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (275, 615, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (918.50, 958.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7291)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 261, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (796.91, 1101.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 410.338 CPU sec, 65.869 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1206596
	[0000][ M::kt_pipeline] read 1206596 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493739, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.25, 80.83)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206668 reads in 417.345 CPU sec, 64.477 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493588, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 287, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 619)
[0000][PE] mean and std.dev: (237.90, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.25, 81.15)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (122, 1211, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6845)
[0000][PE] mean and std.dev: (1033.67, 846.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9086)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206596 reads in 406.076 CPU sec, 55.145 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1206598
	[0000][ M::kt_pipeline] read 1206598 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492669, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 442, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (481.88, 352.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.29, 81.04)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 189, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1712)
[0000][PE] mean and std.dev: (254.12, 167.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 412.390 CPU sec, 54.000 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1206738
	[0000][ M::kt_pipeline] read 1206738 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493649, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.22, 81.22)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206598 reads in 397.629 CPU sec, 54.911 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1206648
	[0000][ M::kt_pipeline] read 1206648 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493495, 9, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.11, 81.14)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206738 reads in 403.311 CPU sec, 63.127 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206616
	[0000][ M::kt_pipeline] read 1206616 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492693, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 307, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2182)
[0000][PE] mean and std.dev: (480.14, 351.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.14, 81.31)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 694, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (772.80, 745.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206648 reads in 395.203 CPU sec, 51.812 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206740
	[0000][ M::kt_pipeline] read 1206740 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493713, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.12, 81.10)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1141, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (926.90, 517.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206616 reads in 400.041 CPU sec, 53.040 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492645, 12, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.38)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (318, 747, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (752.67, 646.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206740 reads in 399.418 CPU sec, 57.529 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1206798
	[0000][ M::kt_pipeline] read 1206798 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 492885, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 335, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1674)
[0000][PE] mean and std.dev: (328.63, 225.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.26)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (395, 1496, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1400.09, 1309.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6638)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 403.621 CPU sec, 65.787 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206672
	[0000][ M::kt_pipeline] read 1206672 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493560, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.27, 81.24)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206798 reads in 400.308 CPU sec, 62.223 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1206676
	[0000][ M::kt_pipeline] read 1206676 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492650, 13, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.94, 81.35)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (386, 721, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (696.18, 507.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206672 reads in 408.493 CPU sec, 65.312 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1206760
	[0000][ M::kt_pipeline] read 1206760 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493026, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 221, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (275.55, 260.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.13, 81.32)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206676 reads in 398.507 CPU sec, 50.050 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492900, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 211, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 830)
[0000][PE] mean and std.dev: (262.25, 164.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.25, 81.32)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206760 reads in 400.269 CPU sec, 65.292 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492988, 11, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.36, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (756, 1491, 5930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16278)
[0000][PE] mean and std.dev: (2918.91, 2480.14)
[0000][PE] low and high boundaries for proper pairs: (1, 21452)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 395.794 CPU sec, 56.518 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206692
	[0000][ M::kt_pipeline] read 1206692 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492853, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.22, 81.19)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 399.416 CPU sec, 54.336 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206926
	[0000][ M::kt_pipeline] read 1206926 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493233, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.40, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206692 reads in 402.547 CPU sec, 61.350 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1206942
	[0000][ M::kt_pipeline] read 1206942 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493088, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 266, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (686.15, 868.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.34, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 379, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (681.19, 625.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206926 reads in 392.939 CPU sec, 50.413 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206746
	[0000][ M::kt_pipeline] read 1206746 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493300, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 318, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (893.07, 961.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.04, 81.27)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206942 reads in 398.388 CPU sec, 59.212 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206982
	[0000][ M::kt_pipeline] read 1206982 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492706, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 225, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 730)
[0000][PE] mean and std.dev: (210.43, 70.63)
[0000][PE] low and high boundaries for proper pairs: (1, 921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.94, 81.68)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206746 reads in 396.960 CPU sec, 59.256 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206894
	[0000][ M::kt_pipeline] read 1206894 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493061, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 264, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1377)
[0000][PE] mean and std.dev: (258.80, 127.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.75, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 315, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (444.33, 381.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206982 reads in 411.318 CPU sec, 51.080 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206980
	[0000][ M::kt_pipeline] read 1206980 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492822, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 290, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6112)
[0000][PE] mean and std.dev: (1085.92, 1120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.81, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206894 reads in 398.645 CPU sec, 63.605 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1206904
	[0000][ M::kt_pipeline] read 1206904 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492771, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 295, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (728.35, 718.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.91, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (175, 370, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (725.10, 831.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 360, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (716.11, 820.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206980 reads in 400.132 CPU sec, 60.210 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206724
	[0000][ M::kt_pipeline] read 1206724 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493113, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 202, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 483)
[0000][PE] mean and std.dev: (169.90, 69.75)
[0000][PE] low and high boundaries for proper pairs: (1, 594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.95, 81.35)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 470, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (577.00, 660.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206904 reads in 394.984 CPU sec, 54.492 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206944
	[0000][ M::kt_pipeline] read 1206944 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493255, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 382, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (969.31, 1236.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.12, 81.52)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 257, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (605.67, 724.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206724 reads in 396.223 CPU sec, 51.547 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1206720
	[0000][ M::kt_pipeline] read 1206720 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493057, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 225, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (506.64, 597.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.30, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 257, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (462.00, 468.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206944 reads in 397.775 CPU sec, 64.955 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1206752
	[0000][ M::kt_pipeline] read 1206752 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493385, 10, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.90, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (88, 273, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (451.67, 526.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 875, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (676.22, 437.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206720 reads in 409.732 CPU sec, 65.000 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206804
	[0000][ M::kt_pipeline] read 1206804 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493017, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.98, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 173, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1206)
[0000][PE] mean and std.dev: (306.10, 267.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1553)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206752 reads in 393.495 CPU sec, 54.754 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206892
	[0000][ M::kt_pipeline] read 1206892 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493245, 10, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.94, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (926, 2857, 3681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9191)
[0000][PE] mean and std.dev: (2047.44, 1273.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11946)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206804 reads in 401.085 CPU sec, 60.887 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493329, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 387, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (673.06, 518.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.05, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206892 reads in 398.335 CPU sec, 51.722 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1206752
	[0000][ M::kt_pipeline] read 1206752 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493206, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 665, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (490.20, 335.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.26, 81.47)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 398.024 CPU sec, 57.273 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1207002
	[0000][ M::kt_pipeline] read 1207002 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493466, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 357, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1470)
[0000][PE] mean and std.dev: (368.87, 184.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.89, 81.64)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1247, 1947, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (1680.38, 779.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206752 reads in 397.803 CPU sec, 55.356 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1206858
	[0000][ M::kt_pipeline] read 1206858 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493394, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 277, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 771)
[0000][PE] mean and std.dev: (272.21, 95.50)
[0000][PE] low and high boundaries for proper pairs: (1, 953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.75, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (327, 537, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (877.56, 936.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 349, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1625)
[0000][PE] mean and std.dev: (345.53, 214.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207002 reads in 402.043 CPU sec, 48.563 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1206892
	[0000][ M::kt_pipeline] read 1206892 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493749, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 423, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (562.64, 396.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.91, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 278, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1593)
[0000][PE] mean and std.dev: (430.64, 261.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206858 reads in 402.054 CPU sec, 49.612 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1206944
	[0000][ M::kt_pipeline] read 1206944 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492810, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 229, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (243.23, 98.86)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.03, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 206, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 635)
[0000][PE] mean and std.dev: (257.20, 99.05)
[0000][PE] low and high boundaries for proper pairs: (1, 778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206892 reads in 399.201 CPU sec, 64.789 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206810
	[0000][ M::kt_pipeline] read 1206810 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492724, 13, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 900, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1209.27, 1152.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.00, 81.59)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (715, 1446, 3723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9739)
[0000][PE] mean and std.dev: (2239.46, 2113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12747)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 388, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (755.94, 872.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206944 reads in 396.140 CPU sec, 48.161 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206738
	[0000][ M::kt_pipeline] read 1206738 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 493168, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 304, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1209)
[0000][PE] mean and std.dev: (289.47, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.11, 81.50)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206810 reads in 396.661 CPU sec, 58.098 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1206846
	[0000][ M::kt_pipeline] read 1206846 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493487, 15, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.94, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (150, 546, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7191)
[0000][PE] mean and std.dev: (1475.33, 1891.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9538)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206738 reads in 399.220 CPU sec, 58.454 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206860
	[0000][ M::kt_pipeline] read 1206860 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493156, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 286, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1293)
[0000][PE] mean and std.dev: (274.67, 160.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.71, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206846 reads in 399.854 CPU sec, 45.365 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1207018
	[0000][ M::kt_pipeline] read 1207018 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493250, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.86, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 746, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (715.75, 652.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206860 reads in 404.802 CPU sec, 51.576 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206982
	[0000][ M::kt_pipeline] read 1206982 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493162, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.95, 81.48)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207018 reads in 402.200 CPU sec, 57.842 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206944
	[0000][ M::kt_pipeline] read 1206944 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492953, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 222, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (282.65, 193.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.95, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 970, 3680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10378)
[0000][PE] mean and std.dev: (1791.33, 2284.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13727)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206982 reads in 399.762 CPU sec, 70.105 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1207084
	[0000][ M::kt_pipeline] read 1207084 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493722, 13, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.89, 81.69)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (137, 345, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (717.46, 745.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206944 reads in 402.855 CPU sec, 56.329 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1207120
	[0000][ M::kt_pipeline] read 1207120 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492537, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 312, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (568.12, 528.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.79, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 539, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (534.55, 364.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207084 reads in 399.884 CPU sec, 52.347 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1207052
	[0000][ M::kt_pipeline] read 1207052 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493529, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.58, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207120 reads in 408.384 CPU sec, 50.746 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1207028
	[0000][ M::kt_pipeline] read 1207028 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492824, 12, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.90, 81.51)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (546, 1343, 4548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12552)
[0000][PE] mean and std.dev: (2202.58, 2736.34)
[0000][PE] low and high boundaries for proper pairs: (1, 16554)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207052 reads in 404.012 CPU sec, 52.479 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206786
	[0000][ M::kt_pipeline] read 1206786 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492721, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.39, 81.52)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 336, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (634.73, 527.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207028 reads in 401.103 CPU sec, 49.544 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206818
	[0000][ M::kt_pipeline] read 1206818 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492749, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 203, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1587)
[0000][PE] mean and std.dev: (310.73, 201.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.30, 81.76)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206786 reads in 401.375 CPU sec, 54.673 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1206804
	[0000][ M::kt_pipeline] read 1206804 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493253, 10, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.32, 81.75)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (905, 2332, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6740)
[0000][PE] mean and std.dev: (1861.44, 1399.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 739, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (752.64, 571.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206818 reads in 407.400 CPU sec, 43.361 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1207066
	[0000][ M::kt_pipeline] read 1207066 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493538, 9, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.15, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206804 reads in 392.923 CPU sec, 56.612 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1207008
	[0000][ M::kt_pipeline] read 1207008 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492671, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 214, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (232.62, 66.31)
[0000][PE] low and high boundaries for proper pairs: (1, 795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.03, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 821, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (747.09, 630.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 468, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1969)
[0000][PE] mean and std.dev: (410.20, 184.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207066 reads in 402.639 CPU sec, 58.600 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1207056
	[0000][ M::kt_pipeline] read 1207056 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493252, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 298, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (587.09, 565.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.24, 81.50)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207008 reads in 396.415 CPU sec, 59.436 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206920
	[0000][ M::kt_pipeline] read 1206920 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493075, 9, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.33, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207056 reads in 398.768 CPU sec, 47.256 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1206920
	[0000][ M::kt_pipeline] read 1206920 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493556, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 274, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (555.94, 615.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.16, 81.48)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 317, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1651)
[0000][PE] mean and std.dev: (469.10, 306.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206920 reads in 397.081 CPU sec, 54.875 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206966
	[0000][ M::kt_pipeline] read 1206966 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493630, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 305, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1731)
[0000][PE] mean and std.dev: (467.08, 437.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.37, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (522, 986, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (902.00, 346.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 309, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (154, 439)
[0000][PE] mean and std.dev: (294.50, 24.73)
[0000][PE] low and high boundaries for proper pairs: (97, 496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206920 reads in 395.394 CPU sec, 49.512 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1206720
	[0000][ M::kt_pipeline] read 1206720 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493667, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.16, 81.43)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 325, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (704.73, 711.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206966 reads in 407.461 CPU sec, 60.450 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206854
	[0000][ M::kt_pipeline] read 1206854 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493829, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 550, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (553.00, 525.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.09, 81.73)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (430, 1363, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1810.20, 1584.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8262)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206720 reads in 399.256 CPU sec, 43.751 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206884
	[0000][ M::kt_pipeline] read 1206884 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493912, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.05, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206854 reads in 401.235 CPU sec, 52.493 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1206828
	[0000][ M::kt_pipeline] read 1206828 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493125, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 596, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (561.00, 391.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.15, 81.39)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1337, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (856.67, 547.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206884 reads in 402.656 CPU sec, 56.764 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493343, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 254, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (445.73, 338.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.02, 81.45)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206828 reads in 401.755 CPU sec, 63.505 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206926
	[0000][ M::kt_pipeline] read 1206926 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493525, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 311, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1204)
[0000][PE] mean and std.dev: (352.00, 203.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.00, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (137, 294, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1025)
[0000][PE] mean and std.dev: (240.12, 112.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 402.874 CPU sec, 58.628 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1206822
	[0000][ M::kt_pipeline] read 1206822 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 494013, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 1020, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (909.00, 872.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.98, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 337, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2497)
[0000][PE] mean and std.dev: (454.00, 332.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206926 reads in 407.603 CPU sec, 60.196 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206800
	[0000][ M::kt_pipeline] read 1206800 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493555, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 202, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2115)
[0000][PE] mean and std.dev: (357.17, 318.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.02, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206822 reads in 401.180 CPU sec, 57.307 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1206854
	[0000][ M::kt_pipeline] read 1206854 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493264, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.80, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206800 reads in 401.866 CPU sec, 59.920 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1206794
	[0000][ M::kt_pipeline] read 1206794 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493540, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.07, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206854 reads in 403.011 CPU sec, 55.251 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206920
	[0000][ M::kt_pipeline] read 1206920 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493656, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (102, 315, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 942)
[0000][PE] mean and std.dev: (276.11, 211.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.11, 81.69)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206794 reads in 399.881 CPU sec, 60.035 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1206924
	[0000][ M::kt_pipeline] read 1206924 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492961, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.01, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206920 reads in 406.324 CPU sec, 58.225 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206780
	[0000][ M::kt_pipeline] read 1206780 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493382, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 408, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1079)
[0000][PE] mean and std.dev: (312.56, 161.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.86, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 695, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (765.00, 631.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206924 reads in 404.324 CPU sec, 58.942 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206946
	[0000][ M::kt_pipeline] read 1206946 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493271, 9, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 518, 3771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10963)
[0000][PE] mean and std.dev: (1276.31, 1715.45)
[0000][PE] low and high boundaries for proper pairs: (1, 14559)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206780 reads in 409.154 CPU sec, 54.847 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1206936
	[0000][ M::kt_pipeline] read 1206936 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493466, 7, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206946 reads in 405.052 CPU sec, 55.544 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1207002
	[0000][ M::kt_pipeline] read 1207002 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493581, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 691, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5990)
[0000][PE] mean and std.dev: (1174.73, 995.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.67, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (128, 1165, 3669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10751)
[0000][PE] mean and std.dev: (2013.90, 2440.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14292)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206936 reads in 401.828 CPU sec, 53.964 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1206714
	[0000][ M::kt_pipeline] read 1206714 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492951, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 858, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (799.50, 743.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 326, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (657.78, 692.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207002 reads in 400.606 CPU sec, 61.704 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206818
	[0000][ M::kt_pipeline] read 1206818 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493574, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 282, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1727)
[0000][PE] mean and std.dev: (419.23, 394.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.59, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206714 reads in 396.319 CPU sec, 42.483 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1206686
	[0000][ M::kt_pipeline] read 1206686 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493670, 13, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.10, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (406, 1027, 4439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12505)
[0000][PE] mean and std.dev: (2097.08, 2039.84)
[0000][PE] low and high boundaries for proper pairs: (1, 16538)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206818 reads in 398.757 CPU sec, 49.879 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1206840
	[0000][ M::kt_pipeline] read 1206840 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493972, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.56, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 352, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (749.42, 618.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4591)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206686 reads in 405.133 CPU sec, 60.764 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1206614
	[0000][ M::kt_pipeline] read 1206614 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493186, 8, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.90, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206840 reads in 403.392 CPU sec, 59.490 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206774
	[0000][ M::kt_pipeline] read 1206774 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492991, 10, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.70, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (639, 1365, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (1406.60, 858.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6247)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 386, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (659.92, 650.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206614 reads in 406.936 CPU sec, 59.154 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206800
	[0000][ M::kt_pipeline] read 1206800 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492998, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 291, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (439.50, 358.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.77, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (82, 301, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (200.12, 135.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 352, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1848)
[0000][PE] mean and std.dev: (558.27, 428.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206774 reads in 411.746 CPU sec, 65.726 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1206952
	[0000][ M::kt_pipeline] read 1206952 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493275, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 390, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (814.09, 702.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.60, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206800 reads in 403.811 CPU sec, 58.224 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206750
	[0000][ M::kt_pipeline] read 1206750 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493337, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 393, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2107)
[0000][PE] mean and std.dev: (424.93, 273.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.28)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 445, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (619.23, 676.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206952 reads in 403.059 CPU sec, 55.966 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1206558
	[0000][ M::kt_pipeline] read 1206558 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493551, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 335, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1600)
[0000][PE] mean and std.dev: (389.60, 256.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.73, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206750 reads in 399.629 CPU sec, 57.565 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206750
	[0000][ M::kt_pipeline] read 1206750 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493752, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 385, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2404)
[0000][PE] mean and std.dev: (439.70, 316.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.67, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (831, 1156, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1501.09, 1236.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6739)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 807, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (830.10, 743.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206558 reads in 406.299 CPU sec, 52.558 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206792
	[0000][ M::kt_pipeline] read 1206792 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 493693, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 209, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (217.82, 70.89)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.52, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206750 reads in 417.410 CPU sec, 68.052 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1206648
	[0000][ M::kt_pipeline] read 1206648 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 494002, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 335, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (450.40, 353.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.88, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (712, 1360, 3198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8170)
[0000][PE] mean and std.dev: (2163.70, 2162.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10813)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206792 reads in 407.753 CPU sec, 53.699 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1206680
	[0000][ M::kt_pipeline] read 1206680 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493082, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 226, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6804)
[0000][PE] mean and std.dev: (841.75, 1394.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.85, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (134, 687, 5368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15836)
[0000][PE] mean and std.dev: (2445.46, 3158.46)
[0000][PE] low and high boundaries for proper pairs: (1, 21070)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206648 reads in 413.429 CPU sec, 56.579 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1206604
	[0000][ M::kt_pipeline] read 1206604 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492908, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 298, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (557.75, 510.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.68, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 406, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9610)
[0000][PE] mean and std.dev: (1653.23, 2263.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206680 reads in 401.513 CPU sec, 57.029 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1206590
	[0000][ M::kt_pipeline] read 1206590 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492902, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.73, 81.42)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 302, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2163)
[0000][PE] mean and std.dev: (379.20, 305.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2815)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206604 reads in 405.012 CPU sec, 55.474 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206578
	[0000][ M::kt_pipeline] read 1206578 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 493744, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 273, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (432.22, 357.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.54, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (496, 1388, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1073.67, 783.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206590 reads in 416.377 CPU sec, 73.449 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206530
	[0000][ M::kt_pipeline] read 1206530 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493169, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 263, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (552.23, 632.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.59, 81.33)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (942, 1068, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (402, 1752)
[0000][PE] mean and std.dev: (1019.11, 230.77)
[0000][PE] low and high boundaries for proper pairs: (96, 2022)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206578 reads in 406.884 CPU sec, 68.731 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493030, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 237, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2173)
[0000][PE] mean and std.dev: (346.00, 300.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.18, 81.15)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 348, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (469.71, 383.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206530 reads in 402.319 CPU sec, 52.679 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206624
	[0000][ M::kt_pipeline] read 1206624 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493345, 8, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.06, 81.04)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 216, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1146)
[0000][PE] mean and std.dev: (295.38, 261.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1457)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 411.331 CPU sec, 59.148 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493467, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 235, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (790.08, 989.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.90, 80.91)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 294, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (545.50, 444.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206624 reads in 400.847 CPU sec, 42.701 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493062, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.00, 81.12)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 400.341 CPU sec, 53.786 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492683, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 291, 695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1719)
[0000][PE] mean and std.dev: (298.55, 184.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.30, 80.99)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 218, 257)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 427)
[0000][PE] mean and std.dev: (196.67, 62.38)
[0000][PE] low and high boundaries for proper pairs: (1, 512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 408.545 CPU sec, 56.877 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1206746
	[0000][ M::kt_pipeline] read 1206746 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493404, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.07)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 402.883 CPU sec, 53.493 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206576
	[0000][ M::kt_pipeline] read 1206576 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493310, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 242, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 616)
[0000][PE] mean and std.dev: (227.22, 133.80)
[0000][PE] low and high boundaries for proper pairs: (1, 780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.94, 81.09)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206746 reads in 401.235 CPU sec, 56.932 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206740
	[0000][ M::kt_pipeline] read 1206740 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493078, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 198, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 666)
[0000][PE] mean and std.dev: (195.36, 72.10)
[0000][PE] low and high boundaries for proper pairs: (1, 837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.14, 81.22)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (392, 834, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7886)
[0000][PE] mean and std.dev: (1485.90, 1400.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10384)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 527, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (824.11, 718.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206576 reads in 404.120 CPU sec, 58.724 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206644
	[0000][ M::kt_pipeline] read 1206644 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492490, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 286, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (666.40, 598.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.30, 81.18)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 296, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1330)
[0000][PE] mean and std.dev: (395.43, 284.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206740 reads in 401.679 CPU sec, 55.744 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206730
	[0000][ M::kt_pipeline] read 1206730 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493388, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 353, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (349.73, 320.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.16, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 847, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1933)
[0000][PE] mean and std.dev: (577.11, 317.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2426)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 559, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5879)
[0000][PE] mean and std.dev: (1172.58, 1109.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206644 reads in 400.960 CPU sec, 61.556 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206714
	[0000][ M::kt_pipeline] read 1206714 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493014, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 601, 8560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 25118)
[0000][PE] mean and std.dev: (2638.18, 3636.35)
[0000][PE] low and high boundaries for proper pairs: (1, 33397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.12, 81.47)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (115, 165, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1321)
[0000][PE] mean and std.dev: (292.31, 195.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206730 reads in 416.291 CPU sec, 71.098 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206768
	[0000][ M::kt_pipeline] read 1206768 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493210, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.15, 81.44)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 282, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 742)
[0000][PE] mean and std.dev: (259.00, 79.67)
[0000][PE] low and high boundaries for proper pairs: (1, 921)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206714 reads in 411.803 CPU sec, 70.075 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206880
	[0000][ M::kt_pipeline] read 1206880 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493373, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.33)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206768 reads in 410.108 CPU sec, 60.194 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1206670
	[0000][ M::kt_pipeline] read 1206670 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492857, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 185, 220)
[0000][PE] low and high boundaries for computing mean and std.dev: (37, 342)
[0000][PE] mean and std.dev: (180.09, 41.23)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.38)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 286, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (399.43, 260.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206880 reads in 405.981 CPU sec, 63.921 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493092, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 359, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1472)
[0000][PE] mean and std.dev: (402.15, 257.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.61, 81.27)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206670 reads in 408.329 CPU sec, 64.672 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1206944
	[0000][ M::kt_pipeline] read 1206944 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492245, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.02, 81.27)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 852, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1389.08, 1529.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7509)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 411.042 CPU sec, 56.667 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1206848
	[0000][ M::kt_pipeline] read 1206848 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492733, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.33, 81.25)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 983, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1079.44, 938.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6503)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206944 reads in 407.300 CPU sec, 58.048 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1206868
	[0000][ M::kt_pipeline] read 1206868 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492948, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.38)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206848 reads in 408.664 CPU sec, 66.196 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492092, 12, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.18, 81.41)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (326, 1276, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1179.55, 867.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7666)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 384, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 663)
[0000][PE] mean and std.dev: (338.00, 79.76)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206868 reads in 403.417 CPU sec, 53.126 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1206900
	[0000][ M::kt_pipeline] read 1206900 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493394, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 214, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (242.62, 179.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.93, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (120, 243, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1971)
[0000][PE] mean and std.dev: (343.67, 310.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 401.587 CPU sec, 48.087 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206966
	[0000][ M::kt_pipeline] read 1206966 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493873, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.05, 81.34)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 386, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (445.73, 385.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206900 reads in 409.667 CPU sec, 59.271 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1206822
	[0000][ M::kt_pipeline] read 1206822 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492660, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.10, 81.36)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 319, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1492)
[0000][PE] mean and std.dev: (407.85, 282.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1905)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206966 reads in 409.239 CPU sec, 59.732 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206884
	[0000][ M::kt_pipeline] read 1206884 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492642, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 267, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 735)
[0000][PE] mean and std.dev: (222.80, 90.70)
[0000][PE] low and high boundaries for proper pairs: (1, 925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.19, 81.49)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 271, 3829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11127)
[0000][PE] mean and std.dev: (1308.73, 1586.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206822 reads in 404.775 CPU sec, 56.948 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206930
	[0000][ M::kt_pipeline] read 1206930 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492151, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 340, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (375.75, 337.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.15, 81.36)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 226, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (16, 506)
[0000][PE] mean and std.dev: (216.00, 63.90)
[0000][PE] low and high boundaries for proper pairs: (1, 604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206884 reads in 415.113 CPU sec, 66.763 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206862
	[0000][ M::kt_pipeline] read 1206862 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492672, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 315, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (273.11, 109.13)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.87, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206930 reads in 398.046 CPU sec, 60.569 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206916
	[0000][ M::kt_pipeline] read 1206916 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493197, 9, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.22, 81.54)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 285, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 517)
[0000][PE] mean and std.dev: (303.62, 90.08)
[0000][PE] low and high boundaries for proper pairs: (1, 664)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206862 reads in 398.698 CPU sec, 59.743 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206694
	[0000][ M::kt_pipeline] read 1206694 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492703, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 764, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (602.64, 398.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.13, 81.34)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206916 reads in 407.257 CPU sec, 62.468 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206902
	[0000][ M::kt_pipeline] read 1206902 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493494, 8, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 626)
[0000][PE] mean and std.dev: (363.36, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206694 reads in 395.063 CPU sec, 53.300 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206688
	[0000][ M::kt_pipeline] read 1206688 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493252, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 269, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (204.50, 94.92)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.11, 81.73)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 1320, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6712)
[0000][PE] mean and std.dev: (1585.90, 1833.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206902 reads in 402.993 CPU sec, 57.069 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206916
	[0000][ M::kt_pipeline] read 1206916 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493034, 12, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.47)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1138, 2005, 4186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10282)
[0000][PE] mean and std.dev: (2172.83, 1609.55)
[0000][PE] low and high boundaries for proper pairs: (1, 13330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 372, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (326.11, 204.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1280)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206688 reads in 393.769 CPU sec, 41.008 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1206700
	[0000][ M::kt_pipeline] read 1206700 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492972, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 265, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1766)
[0000][PE] mean and std.dev: (312.27, 193.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.31, 81.77)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (296, 545, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (493.75, 345.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 304, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1581)
[0000][PE] mean and std.dev: (473.00, 284.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206916 reads in 396.064 CPU sec, 57.904 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206714
	[0000][ M::kt_pipeline] read 1206714 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493430, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 481, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1210)
[0000][PE] mean and std.dev: (322.89, 177.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.07, 81.47)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 287, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1078.73, 1561.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206700 reads in 397.812 CPU sec, 46.476 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206924
	[0000][ M::kt_pipeline] read 1206924 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492819, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 754, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1027.77, 1182.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.51, 81.26)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206714 reads in 413.757 CPU sec, 60.143 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1206990
	[0000][ M::kt_pipeline] read 1206990 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492440, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 311, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (348.44, 341.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.09, 81.44)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 494, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (638.67, 452.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206924 reads in 408.452 CPU sec, 54.288 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206788
	[0000][ M::kt_pipeline] read 1206788 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492878, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 330, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (561.50, 541.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.22, 81.40)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206990 reads in 406.553 CPU sec, 71.321 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1206988
	[0000][ M::kt_pipeline] read 1206988 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492974, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 200, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (741.61, 1019.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.33, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (353, 646, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (554.44, 362.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 263, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (437.58, 452.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206788 reads in 404.267 CPU sec, 51.058 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1206756
	[0000][ M::kt_pipeline] read 1206756 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492984, 11, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.04, 81.36)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (662, 2208, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7337)
[0000][PE] mean and std.dev: (1725.36, 1131.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9562)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (100, 168, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1435)
[0000][PE] mean and std.dev: (279.70, 254.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1880)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206988 reads in 395.992 CPU sec, 54.275 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1206846
	[0000][ M::kt_pipeline] read 1206846 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493043, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 171, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (637.77, 688.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 626)
[0000][PE] mean and std.dev: (363.27, 81.82)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (187, 1306, 3608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10450)
[0000][PE] mean and std.dev: (1688.80, 1494.07)
[0000][PE] low and high boundaries for proper pairs: (1, 13871)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 330, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (312.20, 93.93)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206756 reads in 394.605 CPU sec, 49.788 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493006, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 470, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (1096.85, 1248.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.61, 81.76)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206846 reads in 396.486 CPU sec, 43.412 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1206948
	[0000][ M::kt_pipeline] read 1206948 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492130, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 204, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (285.50, 227.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.93, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1829, 3633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9617)
[0000][PE] mean and std.dev: (2274.91, 2031.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 409.556 CPU sec, 54.611 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206814
	[0000][ M::kt_pipeline] read 1206814 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492704, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 199, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 396)
[0000][PE] mean and std.dev: (156.30, 48.01)
[0000][PE] low and high boundaries for proper pairs: (1, 482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.96, 81.40)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (537, 564, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1821)
[0000][PE] mean and std.dev: (615.73, 306.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2249)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206948 reads in 396.071 CPU sec, 51.346 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1207098
	[0000][ M::kt_pipeline] read 1207098 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493050, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.85, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206814 reads in 414.324 CPU sec, 48.663 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1206892
	[0000][ M::kt_pipeline] read 1206892 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492732, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.40)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 358, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (607.50, 477.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207098 reads in 402.068 CPU sec, 55.767 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206860
	[0000][ M::kt_pipeline] read 1206860 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493020, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.99, 81.49)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206892 reads in 395.275 CPU sec, 50.239 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206882
	[0000][ M::kt_pipeline] read 1206882 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492793, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 231, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (524.83, 627.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.84, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (834, 2131, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6870)
[0000][PE] mean and std.dev: (1683.00, 1194.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8882)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206860 reads in 404.301 CPU sec, 55.375 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1206874
	[0000][ M::kt_pipeline] read 1206874 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493208, 11, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.66, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 534, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6285)
[0000][PE] mean and std.dev: (1187.82, 1303.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8319)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206882 reads in 398.329 CPU sec, 53.232 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1206872
	[0000][ M::kt_pipeline] read 1206872 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492885, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 258, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2352)
[0000][PE] mean and std.dev: (467.20, 437.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.73, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (178, 534, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7786)
[0000][PE] mean and std.dev: (1447.50, 1857.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10322)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 213, 249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 423)
[0000][PE] mean and std.dev: (191.18, 62.91)
[0000][PE] low and high boundaries for proper pairs: (1, 510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206874 reads in 402.071 CPU sec, 51.805 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1206852
	[0000][ M::kt_pipeline] read 1206852 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492733, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 906, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (918.89, 687.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.91, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 436, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1368)
[0000][PE] mean and std.dev: (537.60, 362.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206872 reads in 406.061 CPU sec, 49.852 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206922
	[0000][ M::kt_pipeline] read 1206922 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493324, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.46, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 753, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1113.64, 1070.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8100)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206852 reads in 401.385 CPU sec, 61.526 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1206862
	[0000][ M::kt_pipeline] read 1206862 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493229, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 240, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (301.50, 107.04)
[0000][PE] low and high boundaries for proper pairs: (1, 847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.35, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 354, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5668)
[0000][PE] mean and std.dev: (869.18, 862.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206922 reads in 407.491 CPU sec, 56.753 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206950
	[0000][ M::kt_pipeline] read 1206950 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492664, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 350, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (593.50, 596.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.31, 81.43)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (475, 1453, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (942.62, 625.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 864, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (845.86, 591.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206862 reads in 403.224 CPU sec, 53.521 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206864
	[0000][ M::kt_pipeline] read 1206864 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492988, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 290, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (341.50, 220.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.35, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206950 reads in 400.263 CPU sec, 57.620 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206842
	[0000][ M::kt_pipeline] read 1206842 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493404, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 339, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1887)
[0000][PE] mean and std.dev: (515.69, 490.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.09, 81.66)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (135, 379, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (542.67, 622.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206864 reads in 395.965 CPU sec, 48.034 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1206870
	[0000][ M::kt_pipeline] read 1206870 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493608, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.47, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 262, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (559.82, 449.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206842 reads in 400.618 CPU sec, 51.478 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1206912
	[0000][ M::kt_pipeline] read 1206912 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493122, 7, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.56, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206870 reads in 419.632 CPU sec, 62.054 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1206886
	[0000][ M::kt_pipeline] read 1206886 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493688, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 205, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1060)
[0000][PE] mean and std.dev: (224.50, 113.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.51, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206912 reads in 402.432 CPU sec, 60.036 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206858
	[0000][ M::kt_pipeline] read 1206858 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493737, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 507, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (622.90, 441.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.25, 81.69)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206886 reads in 401.054 CPU sec, 52.650 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1206768
	[0000][ M::kt_pipeline] read 1206768 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492710, 16, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.98, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (208, 851, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8272)
[0000][PE] mean and std.dev: (1449.56, 1523.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10960)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 237, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (276.58, 143.98)
[0000][PE] low and high boundaries for proper pairs: (1, 864)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206858 reads in 415.041 CPU sec, 73.863 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206904
	[0000][ M::kt_pipeline] read 1206904 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 491066, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 474, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 975)
[0000][PE] mean and std.dev: (344.22, 153.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.86, 81.92)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 2639, 3644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10034)
[0000][PE] mean and std.dev: (2739.20, 2558.18)
[0000][PE] low and high boundaries for proper pairs: (1, 13229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206768 reads in 417.242 CPU sec, 66.143 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206870
	[0000][ M::kt_pipeline] read 1206870 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493803, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.38, 81.64)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1039, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2585)
[0000][PE] mean and std.dev: (792.20, 477.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206904 reads in 400.707 CPU sec, 62.379 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1206770
	[0000][ M::kt_pipeline] read 1206770 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493327, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.98, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206870 reads in 414.536 CPU sec, 69.249 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1206876
	[0000][ M::kt_pipeline] read 1206876 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493615, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.04, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 620, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2181)
[0000][PE] mean and std.dev: (514.78, 323.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2821)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206770 reads in 400.042 CPU sec, 57.509 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206756
	[0000][ M::kt_pipeline] read 1206756 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492949, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.03, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 399, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (373.75, 223.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2795)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206876 reads in 411.202 CPU sec, 57.581 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1206784
	[0000][ M::kt_pipeline] read 1206784 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493301, 8, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.08, 81.40)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206756 reads in 401.980 CPU sec, 58.636 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206992
	[0000][ M::kt_pipeline] read 1206992 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493643, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 253, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (528.67, 558.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.13, 81.48)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 1513, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (1044.70, 839.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 290, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (430.14, 330.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206784 reads in 397.260 CPU sec, 57.371 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206842
	[0000][ M::kt_pipeline] read 1206842 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493829, 6, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.42, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 261, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2232)
[0000][PE] mean and std.dev: (349.56, 261.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2918)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206992 reads in 400.664 CPU sec, 65.496 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206784
	[0000][ M::kt_pipeline] read 1206784 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493239, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 544, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2058)
[0000][PE] mean and std.dev: (520.07, 331.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.11, 81.45)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 371, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (304.46, 116.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206842 reads in 398.894 CPU sec, 50.896 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206732
	[0000][ M::kt_pipeline] read 1206732 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493262, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 235, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (516.54, 561.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.17, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206784 reads in 412.602 CPU sec, 48.560 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206732
	[0000][ M::kt_pipeline] read 1206732 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493361, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 188, 267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (171.08, 76.21)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.08, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 394, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1596)
[0000][PE] mean and std.dev: (480.10, 359.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206732 reads in 406.940 CPU sec, 60.278 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206882
	[0000][ M::kt_pipeline] read 1206882 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493365, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.88, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 348, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (418.55, 393.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2560)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206732 reads in 421.897 CPU sec, 46.304 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206702
	[0000][ M::kt_pipeline] read 1206702 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493023, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 393, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (426.36, 358.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.84, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (61, 539, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1588)
[0000][PE] mean and std.dev: (363.89, 330.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2097)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206882 reads in 420.860 CPU sec, 64.736 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206834
	[0000][ M::kt_pipeline] read 1206834 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 493664, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 397, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1829)
[0000][PE] mean and std.dev: (533.67, 354.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206702 reads in 416.208 CPU sec, 58.276 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1206818
	[0000][ M::kt_pipeline] read 1206818 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493742, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.51, 81.62)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 343, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (300.22, 196.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1484)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206834 reads in 397.230 CPU sec, 56.202 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1206820
	[0000][ M::kt_pipeline] read 1206820 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493663, 11, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.67, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (367, 636, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (929.50, 777.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7007)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206818 reads in 391.930 CPU sec, 40.328 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1206782
	[0000][ M::kt_pipeline] read 1206782 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493648, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.67, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206820 reads in 401.934 CPU sec, 55.483 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206748
	[0000][ M::kt_pipeline] read 1206748 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493092, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 267, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 704)
[0000][PE] mean and std.dev: (265.40, 97.92)
[0000][PE] low and high boundaries for proper pairs: (1, 860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.68, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 486, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (703.83, 520.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206782 reads in 405.321 CPU sec, 60.078 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206780
	[0000][ M::kt_pipeline] read 1206780 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493723, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 188, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (214.86, 88.96)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.86, 81.34)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 457, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (646.33, 550.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206748 reads in 402.328 CPU sec, 57.680 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1206680
	[0000][ M::kt_pipeline] read 1206680 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493241, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.84, 81.21)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 336, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (707.00, 663.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206780 reads in 396.775 CPU sec, 55.186 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206658
	[0000][ M::kt_pipeline] read 1206658 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492853, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 415, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (614.00, 493.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.90, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 447, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (762.40, 726.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206680 reads in 397.356 CPU sec, 56.328 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206738
	[0000][ M::kt_pipeline] read 1206738 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493593, 16, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 414, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (547.00, 476.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1052, 2322, 5528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14480)
[0000][PE] mean and std.dev: (3225.75, 2726.80)
[0000][PE] low and high boundaries for proper pairs: (1, 18956)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 370, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (674.70, 701.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206658 reads in 397.417 CPU sec, 49.916 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1206688
	[0000][ M::kt_pipeline] read 1206688 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493067, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.71, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (140, 169, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (205.64, 79.30)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206738 reads in 399.760 CPU sec, 56.602 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206784
	[0000][ M::kt_pipeline] read 1206784 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493429, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.91, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 254, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 990)
[0000][PE] mean and std.dev: (248.18, 81.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1258)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206688 reads in 407.399 CPU sec, 69.373 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206646
	[0000][ M::kt_pipeline] read 1206646 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493564, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 324, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (560.25, 535.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.91, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206784 reads in 400.625 CPU sec, 59.120 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206696
	[0000][ M::kt_pipeline] read 1206696 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493160, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 341, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (398.73, 273.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.79, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 394, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2065)
[0000][PE] mean and std.dev: (559.00, 530.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206646 reads in 410.607 CPU sec, 63.041 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206614
	[0000][ M::kt_pipeline] read 1206614 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493494, 10, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.80, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 226, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (397.88, 415.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206696 reads in 402.458 CPU sec, 63.748 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206546
	[0000][ M::kt_pipeline] read 1206546 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493584, 11, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.04, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (744, 915, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1439.55, 1046.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 276, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (36, 566)
[0000][PE] mean and std.dev: (268.44, 68.87)
[0000][PE] low and high boundaries for proper pairs: (1, 672)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206614 reads in 402.659 CPU sec, 61.077 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206668
	[0000][ M::kt_pipeline] read 1206668 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492878, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.86, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 383, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1474)
[0000][PE] mean and std.dev: (383.09, 245.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1889)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206546 reads in 399.159 CPU sec, 61.849 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206736
	[0000][ M::kt_pipeline] read 1206736 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493658, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 261, 3017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8633)
[0000][PE] mean and std.dev: (1040.50, 1257.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.91, 81.26)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206668 reads in 400.283 CPU sec, 55.553 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493662, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.62, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206736 reads in 403.304 CPU sec, 65.720 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206604
	[0000][ M::kt_pipeline] read 1206604 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493187, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1416, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (762.75, 575.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.53, 81.10)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 324, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2726)
[0000][PE] mean and std.dev: (505.08, 451.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 408.805 CPU sec, 57.282 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1206666
	[0000][ M::kt_pipeline] read 1206666 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492707, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 282, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 664)
[0000][PE] mean and std.dev: (253.11, 98.92)
[0000][PE] low and high boundaries for proper pairs: (1, 826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.25, 81.16)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206604 reads in 415.916 CPU sec, 57.769 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1206722
	[0000][ M::kt_pipeline] read 1206722 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493409, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 265, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (649.08, 641.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.04, 81.05)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206666 reads in 410.595 CPU sec, 64.895 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493176, 10, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.60, 81.01)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (381, 3272, 5878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16872)
[0000][PE] mean and std.dev: (3004.80, 2865.02)
[0000][PE] low and high boundaries for proper pairs: (1, 22369)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206722 reads in 401.789 CPU sec, 57.099 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1206690
	[0000][ M::kt_pipeline] read 1206690 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493631, 6, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.17, 81.08)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 404.565 CPU sec, 56.660 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206650
	[0000][ M::kt_pipeline] read 1206650 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492991, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1223, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6990)
[0000][PE] mean and std.dev: (1688.84, 1663.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.62, 80.90)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 356, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (549.50, 470.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206690 reads in 408.605 CPU sec, 61.624 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206786
	[0000][ M::kt_pipeline] read 1206786 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493333, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.32, 81.24)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206650 reads in 402.942 CPU sec, 64.099 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206684
	[0000][ M::kt_pipeline] read 1206684 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493062, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 453, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (466.91, 357.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.36, 81.18)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 344, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1126.22, 1394.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206786 reads in 404.648 CPU sec, 72.420 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206794
	[0000][ M::kt_pipeline] read 1206794 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493903, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.67, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206684 reads in 399.584 CPU sec, 62.939 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1206648
	[0000][ M::kt_pipeline] read 1206648 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493767, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 241, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2665)
[0000][PE] mean and std.dev: (590.00, 653.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.68, 81.26)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 686, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (502.33, 262.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206794 reads in 400.013 CPU sec, 54.368 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206780
	[0000][ M::kt_pipeline] read 1206780 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493449, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 195, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6311)
[0000][PE] mean and std.dev: (1039.67, 1432.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.56, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206648 reads in 400.137 CPU sec, 59.901 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206658
	[0000][ M::kt_pipeline] read 1206658 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492871, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (557, 973, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1817)
[0000][PE] mean and std.dev: (814.10, 385.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.87, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206780 reads in 404.096 CPU sec, 57.658 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1206804
	[0000][ M::kt_pipeline] read 1206804 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492985, 10, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.68, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (566, 2747, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8132)
[0000][PE] mean and std.dev: (2453.30, 2536.32)
[0000][PE] low and high boundaries for proper pairs: (1, 12599)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 989, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (850.50, 864.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206658 reads in 401.430 CPU sec, 59.634 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206758
	[0000][ M::kt_pipeline] read 1206758 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 492732, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 465, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (492.67, 368.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.52, 81.27)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 289, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (334.18, 243.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206804 reads in 402.466 CPU sec, 74.414 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206910
	[0000][ M::kt_pipeline] read 1206910 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492831, 9, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.62, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 415, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5398)
[0000][PE] mean and std.dev: (1272.30, 1474.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206758 reads in 409.665 CPU sec, 59.952 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206794
	[0000][ M::kt_pipeline] read 1206794 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492808, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.89, 81.23)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 372, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (690.92, 747.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206910 reads in 402.403 CPU sec, 62.149 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1206696
	[0000][ M::kt_pipeline] read 1206696 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493149, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 223, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1394)
[0000][PE] mean and std.dev: (324.50, 212.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.13, 81.36)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206794 reads in 401.029 CPU sec, 59.174 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1206832
	[0000][ M::kt_pipeline] read 1206832 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493198, 9, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.86, 81.29)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 783, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (808.08, 668.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206696 reads in 397.692 CPU sec, 55.469 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1206724
	[0000][ M::kt_pipeline] read 1206724 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493183, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.70, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 567, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6989)
[0000][PE] mean and std.dev: (1367.70, 1673.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9252)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206832 reads in 407.308 CPU sec, 58.843 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206784
	[0000][ M::kt_pipeline] read 1206784 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493175, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (738, 770, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (911.45, 624.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.80, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206724 reads in 406.807 CPU sec, 45.499 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206798
	[0000][ M::kt_pipeline] read 1206798 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492856, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 278, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2652)
[0000][PE] mean and std.dev: (521.31, 418.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.94, 81.27)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (85, 107, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8791)
[0000][PE] mean and std.dev: (1043.27, 1325.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206784 reads in 402.699 CPU sec, 60.272 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1206812
	[0000][ M::kt_pipeline] read 1206812 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493296, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 345, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (583.91, 481.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.81, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (427, 528, 3081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8389)
[0000][PE] mean and std.dev: (1500.64, 1437.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11043)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 818, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1140.19, 1254.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206798 reads in 405.082 CPU sec, 62.216 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206950
	[0000][ M::kt_pipeline] read 1206950 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492571, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 268, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1311)
[0000][PE] mean and std.dev: (379.85, 278.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.73, 81.67)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206812 reads in 400.397 CPU sec, 58.203 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206940
	[0000][ M::kt_pipeline] read 1206940 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493058, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.03, 81.54)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 256, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 836)
[0000][PE] mean and std.dev: (223.33, 106.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206950 reads in 403.506 CPU sec, 60.085 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1207022
	[0000][ M::kt_pipeline] read 1207022 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492742, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.04, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206940 reads in 400.538 CPU sec, 57.745 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1206862
	[0000][ M::kt_pipeline] read 1206862 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493386, 8, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 207, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (52, 382)
[0000][PE] mean and std.dev: (187.25, 44.45)
[0000][PE] low and high boundaries for proper pairs: (1, 448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.92, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207022 reads in 399.404 CPU sec, 61.847 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206770
	[0000][ M::kt_pipeline] read 1206770 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492857, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 557, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (589.00, 487.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.77, 81.74)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (136, 166, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (350.10, 369.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206862 reads in 394.662 CPU sec, 57.273 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206738
	[0000][ M::kt_pipeline] read 1206738 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492607, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.90, 81.74)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206770 reads in 399.014 CPU sec, 58.115 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206810
	[0000][ M::kt_pipeline] read 1206810 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492955, 15, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.13, 81.47)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (812, 2604, 3993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10355)
[0000][PE] mean and std.dev: (2520.07, 2112.04)
[0000][PE] low and high boundaries for proper pairs: (1, 13536)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 538, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (663.44, 542.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206738 reads in 396.099 CPU sec, 52.406 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206768
	[0000][ M::kt_pipeline] read 1206768 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493396, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.10, 81.45)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206810 reads in 404.967 CPU sec, 53.486 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206590
	[0000][ M::kt_pipeline] read 1206590 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492923, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 531, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (499.67, 260.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.87, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206768 reads in 410.581 CPU sec, 75.569 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206764
	[0000][ M::kt_pipeline] read 1206764 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493115, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 289, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (295.36, 186.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.93, 81.54)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 238, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 522)
[0000][PE] mean and std.dev: (220.90, 70.76)
[0000][PE] low and high boundaries for proper pairs: (1, 629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206590 reads in 420.166 CPU sec, 66.403 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206776
	[0000][ M::kt_pipeline] read 1206776 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493374, 9, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.50)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206764 reads in 412.741 CPU sec, 66.852 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1206940
	[0000][ M::kt_pipeline] read 1206940 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493320, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 195, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1597)
[0000][PE] mean and std.dev: (301.30, 237.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.89, 81.54)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206776 reads in 416.595 CPU sec, 67.604 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1206860
	[0000][ M::kt_pipeline] read 1206860 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493002, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.78, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 356, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2273)
[0000][PE] mean and std.dev: (495.42, 383.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2951)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206940 reads in 420.617 CPU sec, 65.479 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206900
	[0000][ M::kt_pipeline] read 1206900 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492571, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.77, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206860 reads in 427.459 CPU sec, 73.879 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1206740
	[0000][ M::kt_pipeline] read 1206740 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492752, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 459, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (621.67, 548.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.03, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (208, 341, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (779.20, 967.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 577, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (503.22, 327.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206900 reads in 420.415 CPU sec, 65.929 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206932
	[0000][ M::kt_pipeline] read 1206932 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492903, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 150, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 794)
[0000][PE] mean and std.dev: (169.78, 86.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (363.03, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 1112, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1321.30, 1295.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206740 reads in 426.818 CPU sec, 66.593 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206682
	[0000][ M::kt_pipeline] read 1206682 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492741, 7, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.01, 81.30)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 410, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (655.93, 601.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206932 reads in 422.001 CPU sec, 60.637 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493614, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 602, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (513.40, 296.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.46, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 410, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (565.50, 425.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206682 reads in 421.083 CPU sec, 62.919 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1207056
	[0000][ M::kt_pipeline] read 1207056 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493414, 17, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.95, 81.51)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (361, 610, 4789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13645)
[0000][PE] mean and std.dev: (2039.12, 2829.12)
[0000][PE] low and high boundaries for proper pairs: (1, 18073)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 429.902 CPU sec, 68.382 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206870
	[0000][ M::kt_pipeline] read 1206870 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493271, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.61, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 1173, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (799.50, 492.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207056 reads in 433.671 CPU sec, 62.975 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206890
	[0000][ M::kt_pipeline] read 1206890 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492944, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (97, 217, 254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 568)
[0000][PE] mean and std.dev: (169.78, 78.12)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.87, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 364, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1428)
[0000][PE] mean and std.dev: (379.56, 206.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206870 reads in 429.460 CPU sec, 63.857 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206928
	[0000][ M::kt_pipeline] read 1206928 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492778, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.71, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 312, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6741)
[0000][PE] mean and std.dev: (906.58, 982.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8912)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206890 reads in 424.657 CPU sec, 53.775 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493521, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 238, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (229.50, 70.22)
[0000][PE] low and high boundaries for proper pairs: (1, 861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.79, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206928 reads in 428.772 CPU sec, 57.529 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206694
	[0000][ M::kt_pipeline] read 1206694 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493328, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 390, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (628.10, 454.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.64, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 619, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (750.50, 668.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3424)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 425.429 CPU sec, 59.612 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206986
	[0000][ M::kt_pipeline] read 1206986 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493127, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 882, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (702.92, 471.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.66, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206694 reads in 430.001 CPU sec, 61.528 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206864
	[0000][ M::kt_pipeline] read 1206864 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492986, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 222, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1639)
[0000][PE] mean and std.dev: (341.82, 279.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.57, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 311, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 854)
[0000][PE] mean and std.dev: (230.38, 110.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206986 reads in 432.022 CPU sec, 59.813 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1206904
	[0000][ M::kt_pipeline] read 1206904 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493076, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 315, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (400.40, 236.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.32, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 319, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (463.78, 430.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206864 reads in 426.257 CPU sec, 66.135 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1206850
	[0000][ M::kt_pipeline] read 1206850 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493406, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 278, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (601.86, 631.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.28, 81.31)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 486, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (656.69, 508.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206904 reads in 402.564 CPU sec, 58.824 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206954
	[0000][ M::kt_pipeline] read 1206954 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493259, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.30, 81.62)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206850 reads in 396.474 CPU sec, 62.948 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206744
	[0000][ M::kt_pipeline] read 1206744 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493387, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 285, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1500)
[0000][PE] mean and std.dev: (289.09, 157.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.19, 81.64)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206954 reads in 400.261 CPU sec, 64.636 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1206872
	[0000][ M::kt_pipeline] read 1206872 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493400, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.02, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206744 reads in 402.183 CPU sec, 62.947 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206748
	[0000][ M::kt_pipeline] read 1206748 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492823, 11, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.83, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (301, 922, 3562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10084)
[0000][PE] mean and std.dev: (1700.91, 1632.32)
[0000][PE] low and high boundaries for proper pairs: (1, 13345)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (124, 269, 624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1624)
[0000][PE] mean and std.dev: (322.30, 259.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2124)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206872 reads in 400.608 CPU sec, 67.319 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1206780
	[0000][ M::kt_pipeline] read 1206780 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493266, 13, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.16, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (103, 310, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (660.33, 699.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7203)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206748 reads in 406.854 CPU sec, 55.384 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206922
	[0000][ M::kt_pipeline] read 1206922 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493221, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 412, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1013)
[0000][PE] mean and std.dev: (395.23, 141.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.36, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206780 reads in 403.214 CPU sec, 57.582 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1206872
	[0000][ M::kt_pipeline] read 1206872 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493276, 12, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.41, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 692, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (897.64, 1148.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6853)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 315, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 758)
[0000][PE] mean and std.dev: (282.45, 101.78)
[0000][PE] low and high boundaries for proper pairs: (1, 925)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206922 reads in 395.815 CPU sec, 59.636 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1206832
	[0000][ M::kt_pipeline] read 1206832 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493526, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 281, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (622.50, 750.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.10, 81.47)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 412, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6445)
[0000][PE] mean and std.dev: (992.15, 1033.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206872 reads in 398.385 CPU sec, 59.865 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1206890
	[0000][ M::kt_pipeline] read 1206890 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493042, 10, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.09, 81.36)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (235, 838, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1027.00, 935.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 659, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2251)
[0000][PE] mean and std.dev: (614.87, 417.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2918)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206832 reads in 404.759 CPU sec, 60.022 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1206800
	[0000][ M::kt_pipeline] read 1206800 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493367, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 214, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1293)
[0000][PE] mean and std.dev: (316.85, 232.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.88, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 563, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (594.20, 474.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 235, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (69, 419)
[0000][PE] mean and std.dev: (220.40, 56.21)
[0000][PE] low and high boundaries for proper pairs: (1, 489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206890 reads in 400.079 CPU sec, 62.894 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206796
	[0000][ M::kt_pipeline] read 1206796 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493344, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 228, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 624)
[0000][PE] mean and std.dev: (242.13, 99.13)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.86, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206800 reads in 397.816 CPU sec, 57.756 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1206812
	[0000][ M::kt_pipeline] read 1206812 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493486, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.93, 81.71)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206796 reads in 402.556 CPU sec, 58.376 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206856
	[0000][ M::kt_pipeline] read 1206856 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493177, 1, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.09, 81.45)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 263, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (388.33, 395.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2595)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206812 reads in 398.299 CPU sec, 49.270 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1206844
	[0000][ M::kt_pipeline] read 1206844 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493356, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 349, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 793)
[0000][PE] mean and std.dev: (290.92, 91.36)
[0000][PE] low and high boundaries for proper pairs: (1, 978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.32, 81.64)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206856 reads in 413.143 CPU sec, 60.027 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206676
	[0000][ M::kt_pipeline] read 1206676 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493361, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 577, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (581.67, 433.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.20, 81.52)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 396, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (575.00, 669.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206844 reads in 399.316 CPU sec, 48.002 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206688
	[0000][ M::kt_pipeline] read 1206688 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493708, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.02, 81.44)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 250, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (278.00, 87.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1018)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206676 reads in 398.957 CPU sec, 59.411 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1206686
	[0000][ M::kt_pipeline] read 1206686 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492774, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 237, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (444.12, 483.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.89, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206688 reads in 412.040 CPU sec, 56.619 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1206786
	[0000][ M::kt_pipeline] read 1206786 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493750, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.88, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 834, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (653.33, 368.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2826)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206686 reads in 395.642 CPU sec, 55.381 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1206830
	[0000][ M::kt_pipeline] read 1206830 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 493178, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 267, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1230)
[0000][PE] mean and std.dev: (247.13, 167.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.78, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206786 reads in 399.229 CPU sec, 53.791 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206780
	[0000][ M::kt_pipeline] read 1206780 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493520, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 247, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (856.80, 1173.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.54, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (352, 873, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6652)
[0000][PE] mean and std.dev: (1782.20, 2064.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10039)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206830 reads in 420.583 CPU sec, 62.117 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1207018
	[0000][ M::kt_pipeline] read 1207018 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493876, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.95, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206780 reads in 403.127 CPU sec, 55.416 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206746
	[0000][ M::kt_pipeline] read 1206746 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492921, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 289, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1712)
[0000][PE] mean and std.dev: (307.00, 209.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.63, 81.51)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 461, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (1026.67, 1238.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207018 reads in 408.227 CPU sec, 63.269 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206826
	[0000][ M::kt_pipeline] read 1206826 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493616, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.81, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206746 reads in 397.869 CPU sec, 60.118 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206756
	[0000][ M::kt_pipeline] read 1206756 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493062, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.79, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206826 reads in 397.676 CPU sec, 50.314 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1206698
	[0000][ M::kt_pipeline] read 1206698 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493692, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 373, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 948)
[0000][PE] mean and std.dev: (292.25, 141.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.54, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206756 reads in 399.022 CPU sec, 59.464 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1206634
	[0000][ M::kt_pipeline] read 1206634 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493075, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 321, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (711.50, 733.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.58, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 298, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (673.86, 696.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206698 reads in 394.419 CPU sec, 61.903 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206780
	[0000][ M::kt_pipeline] read 1206780 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493048, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 518, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (355.18, 226.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.72, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 341, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (395.27, 346.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206634 reads in 408.959 CPU sec, 63.303 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206688
	[0000][ M::kt_pipeline] read 1206688 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493270, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1211, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1015.56, 877.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.88, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 976, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (839.60, 553.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206780 reads in 414.283 CPU sec, 68.848 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206746
	[0000][ M::kt_pipeline] read 1206746 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493122, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 474, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7413)
[0000][PE] mean and std.dev: (1373.18, 1728.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.91, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 739, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6700)
[0000][PE] mean and std.dev: (1156.15, 1244.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8877)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 317, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7342)
[0000][PE] mean and std.dev: (1171.91, 1231.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206688 reads in 423.747 CPU sec, 56.395 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1206640
	[0000][ M::kt_pipeline] read 1206640 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493298, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.03, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 594, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (480.50, 331.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3074)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206746 reads in 396.976 CPU sec, 45.691 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206636
	[0000][ M::kt_pipeline] read 1206636 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493246, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.69, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 305, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2260)
[0000][PE] mean and std.dev: (490.60, 362.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206640 reads in 404.767 CPU sec, 58.587 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1206698
	[0000][ M::kt_pipeline] read 1206698 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493171, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 435, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (731.67, 717.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.66, 81.26)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 528, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (696.00, 825.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206636 reads in 396.541 CPU sec, 44.374 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1206686
	[0000][ M::kt_pipeline] read 1206686 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493677, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 809, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (597.25, 453.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.54, 81.66)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 393, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1580)
[0000][PE] mean and std.dev: (355.70, 183.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206698 reads in 404.806 CPU sec, 62.776 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206734
	[0000][ M::kt_pipeline] read 1206734 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493717, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 616, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (622.25, 573.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.60, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 578, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6889)
[0000][PE] mean and std.dev: (1080.15, 1228.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206686 reads in 401.290 CPU sec, 60.450 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206632
	[0000][ M::kt_pipeline] read 1206632 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493113, 4, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.76, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206734 reads in 402.398 CPU sec, 57.876 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493416, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 262, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1551)
[0000][PE] mean and std.dev: (373.10, 326.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.58, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (422, 543, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (954.92, 781.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6878)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 576, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (885.69, 846.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206632 reads in 400.019 CPU sec, 46.935 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 493554, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 219, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1339)
[0000][PE] mean and std.dev: (318.63, 301.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.96, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 303, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (610.93, 724.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 416.513 CPU sec, 53.753 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493228, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 453, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (785.20, 747.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.78, 81.21)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 402.658 CPU sec, 56.402 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206528
	[0000][ M::kt_pipeline] read 1206528 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493724, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 398, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (873.19, 906.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.74, 81.28)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 465, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1010.61, 1100.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 398.914 CPU sec, 61.158 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206590
	[0000][ M::kt_pipeline] read 1206590 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493546, 15, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.84, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (235, 400, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (675.69, 808.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 703, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1290.00, 1251.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6959)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206528 reads in 415.698 CPU sec, 71.559 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206564
	[0000][ M::kt_pipeline] read 1206564 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493737, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.73, 81.26)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206590 reads in 412.532 CPU sec, 50.213 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493610, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 375, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (494.70, 458.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.36, 80.95)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206564 reads in 404.289 CPU sec, 62.671 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493343, 11, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.68, 81.13)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 378, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2879)
[0000][PE] mean and std.dev: (604.36, 450.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 410, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (544.44, 479.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 401.956 CPU sec, 50.180 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1206834
	[0000][ M::kt_pipeline] read 1206834 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493239, 13, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.72, 81.03)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (354, 580, 5081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14535)
[0000][PE] mean and std.dev: (2007.15, 2021.55)
[0000][PE] low and high boundaries for proper pairs: (1, 19262)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 407.645 CPU sec, 64.090 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1206746
	[0000][ M::kt_pipeline] read 1206746 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493920, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 515, 3432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9950)
[0000][PE] mean and std.dev: (1493.00, 1920.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.49, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (236, 400, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (822.10, 776.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 297, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (663.92, 605.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206834 reads in 405.663 CPU sec, 56.790 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206856
	[0000][ M::kt_pipeline] read 1206856 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493680, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 205, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 484)
[0000][PE] mean and std.dev: (214.60, 64.71)
[0000][PE] low and high boundaries for proper pairs: (1, 577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (361.68, 81.02)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206746 reads in 404.585 CPU sec, 57.705 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206854
	[0000][ M::kt_pipeline] read 1206854 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493790, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 592, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (764.53, 671.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.66, 81.18)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 375, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (377.44, 256.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206856 reads in 413.493 CPU sec, 60.540 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206898
	[0000][ M::kt_pipeline] read 1206898 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493270, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 300, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7180)
[0000][PE] mean and std.dev: (1004.71, 1044.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.76, 81.19)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 413, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (808.69, 783.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206854 reads in 409.048 CPU sec, 57.104 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1207102
	[0000][ M::kt_pipeline] read 1207102 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493547, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 404, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (329.00, 97.49)
[0000][PE] low and high boundaries for proper pairs: (1, 962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.76, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 432, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2003)
[0000][PE] mean and std.dev: (447.33, 459.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206898 reads in 407.601 CPU sec, 55.231 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1207006
	[0000][ M::kt_pipeline] read 1207006 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 494065, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 339, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (576.75, 534.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.67, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (177, 716, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (781.78, 806.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 325, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2126)
[0000][PE] mean and std.dev: (451.62, 373.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207102 reads in 414.613 CPU sec, 57.158 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206960
	[0000][ M::kt_pipeline] read 1206960 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493904, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 286, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1809)
[0000][PE] mean and std.dev: (311.22, 180.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.10, 81.28)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (337, 1825, 4597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13117)
[0000][PE] mean and std.dev: (2581.36, 2443.13)
[0000][PE] low and high boundaries for proper pairs: (1, 17377)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207006 reads in 403.070 CPU sec, 49.954 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206740
	[0000][ M::kt_pipeline] read 1206740 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 493410, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 269, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (291.00, 227.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.22, 81.15)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 348, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1019.46, 1098.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206960 reads in 413.853 CPU sec, 61.656 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206834
	[0000][ M::kt_pipeline] read 1206834 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 493423, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 376, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (853.50, 917.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.30, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (345, 548, 4003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11319)
[0000][PE] mean and std.dev: (1791.15, 2252.85)
[0000][PE] low and high boundaries for proper pairs: (1, 14977)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 368, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (579.80, 511.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206740 reads in 417.060 CPU sec, 58.259 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1206956
	[0000][ M::kt_pipeline] read 1206956 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493864, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 209, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (371.50, 345.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.69, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (370, 1398, 3664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10252)
[0000][PE] mean and std.dev: (1712.67, 1636.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13546)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 311, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (808.50, 974.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206834 reads in 400.073 CPU sec, 57.120 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1206902
	[0000][ M::kt_pipeline] read 1206902 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493410, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 291, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1303)
[0000][PE] mean and std.dev: (290.89, 165.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.66, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206956 reads in 421.059 CPU sec, 57.844 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1207108
	[0000][ M::kt_pipeline] read 1207108 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492771, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.51, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206902 reads in 400.266 CPU sec, 47.472 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1207008
	[0000][ M::kt_pipeline] read 1207008 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492907, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.64, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 328, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (417.30, 276.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1749)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207108 reads in 406.842 CPU sec, 50.762 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1207110
	[0000][ M::kt_pipeline] read 1207110 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493236, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 905, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (691.56, 439.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.30, 81.10)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (544, 978, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (924.50, 662.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207008 reads in 415.797 CPU sec, 57.698 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206980
	[0000][ M::kt_pipeline] read 1206980 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493222, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 294, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (251.38, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.76, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 365, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1062.31, 1068.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207110 reads in 405.815 CPU sec, 50.044 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206974
	[0000][ M::kt_pipeline] read 1206974 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493852, 10, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.77, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 579, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (479.62, 519.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206980 reads in 404.654 CPU sec, 56.533 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1207102
	[0000][ M::kt_pipeline] read 1207102 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493886, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 462, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (467.55, 330.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.62, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 388, 3140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9200)
[0000][PE] mean and std.dev: (1410.50, 1852.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12230)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 280, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (235.90, 63.96)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206974 reads in 400.391 CPU sec, 58.352 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1207136
	[0000][ M::kt_pipeline] read 1207136 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493206, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.04, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207102 reads in 401.131 CPU sec, 59.906 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206966
	[0000][ M::kt_pipeline] read 1206966 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493044, 10, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.04, 81.49)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (794, 1128, 3701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9515)
[0000][PE] mean and std.dev: (1872.70, 1522.37)
[0000][PE] low and high boundaries for proper pairs: (1, 12422)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 598, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1512)
[0000][PE] mean and std.dev: (429.89, 219.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1929)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207136 reads in 401.117 CPU sec, 51.962 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1207028
	[0000][ M::kt_pipeline] read 1207028 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493109, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 386, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (490.00, 310.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.93, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (567, 923, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (974.78, 914.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206966 reads in 400.618 CPU sec, 51.570 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1207072
	[0000][ M::kt_pipeline] read 1207072 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493922, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 189, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1429)
[0000][PE] mean and std.dev: (376.57, 319.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (362.00, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 972, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (745.78, 589.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207028 reads in 399.701 CPU sec, 39.430 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492713, 9, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.45, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 322, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (616.15, 752.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3984)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207072 reads in 414.853 CPU sec, 41.332 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1206916
	[0000][ M::kt_pipeline] read 1206916 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493393, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.87, 81.74)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 392, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (663.80, 626.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 409.892 CPU sec, 46.170 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1207100
	[0000][ M::kt_pipeline] read 1207100 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493076, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 813, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (692.55, 495.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.85, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (529, 1184, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (1444.70, 1173.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (105, 243, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1611)
[0000][PE] mean and std.dev: (211.00, 155.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206916 reads in 401.052 CPU sec, 45.127 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1206954
	[0000][ M::kt_pipeline] read 1206954 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493334, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 267, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (325.00, 225.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.87, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207100 reads in 400.865 CPU sec, 44.653 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206978
	[0000][ M::kt_pipeline] read 1206978 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493285, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 203, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 868)
[0000][PE] mean and std.dev: (253.80, 153.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.65, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 353, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1590)
[0000][PE] mean and std.dev: (425.79, 253.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206954 reads in 406.166 CPU sec, 35.402 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206844
	[0000][ M::kt_pipeline] read 1206844 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493142, 12, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (234, 380, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5853)
[0000][PE] mean and std.dev: (927.00, 1021.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7726)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206978 reads in 399.833 CPU sec, 41.803 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1206864
	[0000][ M::kt_pipeline] read 1206864 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492155, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 295, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (248.67, 102.79)
[0000][PE] low and high boundaries for proper pairs: (1, 854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.81, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206844 reads in 406.900 CPU sec, 42.797 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206990
	[0000][ M::kt_pipeline] read 1206990 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493261, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 288, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (651.22, 842.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.83, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206864 reads in 417.724 CPU sec, 48.909 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1206654
	[0000][ M::kt_pipeline] read 1206654 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493376, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 427, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1835)
[0000][PE] mean and std.dev: (491.36, 243.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.77, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 396, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (824.36, 1012.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 428, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1663)
[0000][PE] mean and std.dev: (428.67, 373.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206990 reads in 404.215 CPU sec, 43.269 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1206912
	[0000][ M::kt_pipeline] read 1206912 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493341, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.79, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206654 reads in 396.361 CPU sec, 32.706 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206854
	[0000][ M::kt_pipeline] read 1206854 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493222, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 238, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1686)
[0000][PE] mean and std.dev: (412.73, 322.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (488, 581, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (602.62, 321.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206912 reads in 404.285 CPU sec, 41.554 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1207014
	[0000][ M::kt_pipeline] read 1207014 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493637, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 311, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1954)
[0000][PE] mean and std.dev: (437.82, 410.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.81, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 350, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (813.36, 773.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206854 reads in 415.486 CPU sec, 45.713 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1206788
	[0000][ M::kt_pipeline] read 1206788 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493459, 11, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.64, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (767, 1329, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8447)
[0000][PE] mean and std.dev: (1893.09, 1784.59)
[0000][PE] low and high boundaries for proper pairs: (1, 11007)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207014 reads in 399.040 CPU sec, 46.121 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206828
	[0000][ M::kt_pipeline] read 1206828 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493662, 8, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.63, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206788 reads in 407.257 CPU sec, 54.629 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206718
	[0000][ M::kt_pipeline] read 1206718 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493227, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 199, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1314)
[0000][PE] mean and std.dev: (309.55, 200.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.79, 81.42)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (771, 771, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4884)
[0000][PE] mean and std.dev: (1119.67, 940.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 352, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (470.85, 339.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206828 reads in 415.110 CPU sec, 40.722 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206818
	[0000][ M::kt_pipeline] read 1206818 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493432, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.64, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206718 reads in 401.033 CPU sec, 49.416 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1206880
	[0000][ M::kt_pipeline] read 1206880 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493082, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 715, 4662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13604)
[0000][PE] mean and std.dev: (2016.23, 2733.92)
[0000][PE] low and high boundaries for proper pairs: (1, 18075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.81, 81.52)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206818 reads in 403.562 CPU sec, 42.613 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1207024
	[0000][ M::kt_pipeline] read 1207024 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492891, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 271, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1512)
[0000][PE] mean and std.dev: (270.89, 151.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.77, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (122, 821, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6230)
[0000][PE] mean and std.dev: (1279.90, 1215.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8266)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 299, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (464.38, 415.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206880 reads in 404.431 CPU sec, 45.191 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206968
	[0000][ M::kt_pipeline] read 1206968 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 493232, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 257, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 688)
[0000][PE] mean and std.dev: (220.13, 69.55)
[0000][PE] low and high boundaries for proper pairs: (1, 860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.06, 81.41)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (153, 266, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (547.00, 529.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207024 reads in 411.246 CPU sec, 47.763 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1206904
	[0000][ M::kt_pipeline] read 1206904 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493364, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 756, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (966.20, 950.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.82, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (719, 988, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1141.20, 835.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 630, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2160)
[0000][PE] mean and std.dev: (601.64, 393.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206968 reads in 406.835 CPU sec, 42.808 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206974
	[0000][ M::kt_pipeline] read 1206974 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493324, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 418, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1646)
[0000][PE] mean and std.dev: (348.12, 156.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.90, 81.78)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (40, 363, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7396)
[0000][PE] mean and std.dev: (1171.50, 1793.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9848)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206904 reads in 397.392 CPU sec, 33.704 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1206884
	[0000][ M::kt_pipeline] read 1206884 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493355, 11, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.68, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 702, 3252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9312)
[0000][PE] mean and std.dev: (1304.45, 1554.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12342)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206974 reads in 401.880 CPU sec, 34.395 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1206864
	[0000][ M::kt_pipeline] read 1206864 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493509, 5, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.59, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206884 reads in 400.264 CPU sec, 45.422 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1206830
	[0000][ M::kt_pipeline] read 1206830 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493018, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 800, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (815.58, 563.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.45, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 299, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (929.75, 1190.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206864 reads in 404.198 CPU sec, 40.859 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1206904
	[0000][ M::kt_pipeline] read 1206904 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492926, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 252, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (401.27, 449.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.73, 81.68)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (390, 935, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (777.33, 618.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206830 reads in 419.683 CPU sec, 46.496 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1206810
	[0000][ M::kt_pipeline] read 1206810 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493353, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 622)
[0000][PE] mean and std.dev: (361.34, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206904 reads in 409.172 CPU sec, 47.106 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206930
	[0000][ M::kt_pipeline] read 1206930 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493895, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1088, 4817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13557)
[0000][PE] mean and std.dev: (2425.36, 2164.23)
[0000][PE] low and high boundaries for proper pairs: (1, 17927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.97, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 331, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (772.58, 844.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206810 reads in 415.698 CPU sec, 41.476 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1206934
	[0000][ M::kt_pipeline] read 1206934 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493597, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.34, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 281, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (281.12, 86.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1256)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206930 reads in 420.130 CPU sec, 48.668 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1206732
	[0000][ M::kt_pipeline] read 1206732 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 494042, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 287, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 874)
[0000][PE] mean and std.dev: (274.87, 132.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 624)
[0000][PE] mean and std.dev: (361.13, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206934 reads in 420.195 CPU sec, 53.376 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1206842
	[0000][ M::kt_pipeline] read 1206842 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493806, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 230, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (261.11, 131.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.06, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 396, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (714.91, 515.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206732 reads in 412.684 CPU sec, 50.965 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1207080
	[0000][ M::kt_pipeline] read 1207080 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492971, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 207, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 816)
[0000][PE] mean and std.dev: (206.12, 88.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.18, 81.64)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (77, 417, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1649)
[0000][PE] mean and std.dev: (312.00, 277.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2173)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (395, 1057, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5576)
[0000][PE] mean and std.dev: (1355.77, 1019.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206842 reads in 405.979 CPU sec, 38.074 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1206896
	[0000][ M::kt_pipeline] read 1206896 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493558, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 232, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2563)
[0000][PE] mean and std.dev: (381.70, 314.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 624)
[0000][PE] mean and std.dev: (361.24, 81.70)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 280, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1468)
[0000][PE] mean and std.dev: (379.50, 335.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207080 reads in 409.771 CPU sec, 45.390 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206898
	[0000][ M::kt_pipeline] read 1206898 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493668, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 298, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1778)
[0000][PE] mean and std.dev: (411.80, 315.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (361.02, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206896 reads in 411.919 CPU sec, 48.737 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1207014
	[0000][ M::kt_pipeline] read 1207014 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493368, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 386, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (497.92, 411.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (361.10, 81.63)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (627, 943, 3726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9924)
[0000][PE] mean and std.dev: (2253.58, 2775.85)
[0000][PE] low and high boundaries for proper pairs: (1, 13357)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206898 reads in 417.370 CPU sec, 55.266 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206938
	[0000][ M::kt_pipeline] read 1206938 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493704, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 646, 9129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 26763)
[0000][PE] mean and std.dev: (3574.25, 4047.70)
[0000][PE] low and high boundaries for proper pairs: (1, 35580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.76, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207014 reads in 415.868 CPU sec, 49.444 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1206770
	[0000][ M::kt_pipeline] read 1206770 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493284, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.88, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206938 reads in 421.448 CPU sec, 50.037 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206890
	[0000][ M::kt_pipeline] read 1206890 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493328, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 793, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (518.67, 316.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.03, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (334, 520, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1363)
[0000][PE] mean and std.dev: (385.44, 225.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1706)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 336, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (481.42, 398.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206770 reads in 401.255 CPU sec, 42.624 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1206702
	[0000][ M::kt_pipeline] read 1206702 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493186, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.94, 81.60)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206890 reads in 418.876 CPU sec, 36.989 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206744
	[0000][ M::kt_pipeline] read 1206744 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493480, 12, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.77, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (389, 795, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7505)
[0000][PE] mean and std.dev: (995.18, 975.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9877)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 307, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1593)
[0000][PE] mean and std.dev: (402.56, 348.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2066)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206702 reads in 418.379 CPU sec, 42.431 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206894
	[0000][ M::kt_pipeline] read 1206894 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493774, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.99, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206744 reads in 420.803 CPU sec, 50.586 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1207014
	[0000][ M::kt_pipeline] read 1207014 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492877, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 231, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (582.17, 626.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (361.01, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206894 reads in 409.777 CPU sec, 43.630 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1206770
	[0000][ M::kt_pipeline] read 1206770 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1207014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492920, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 194, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 787)
[0000][PE] mean and std.dev: (178.10, 80.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 362, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.66, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1207014 reads in 417.870 CPU sec, 44.459 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206812
	[0000][ M::kt_pipeline] read 1206812 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493251, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.82, 81.69)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 326, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (395.33, 336.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206770 reads in 417.243 CPU sec, 54.683 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206882
	[0000][ M::kt_pipeline] read 1206882 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 494068, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.86, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206812 reads in 413.048 CPU sec, 49.354 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206710
	[0000][ M::kt_pipeline] read 1206710 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493324, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.68, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 321, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (457.22, 397.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206882 reads in 406.616 CPU sec, 49.054 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206968
	[0000][ M::kt_pipeline] read 1206968 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493796, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 211, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 516)
[0000][PE] mean and std.dev: (215.36, 106.82)
[0000][PE] low and high boundaries for proper pairs: (1, 643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.89, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 733, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2550)
[0000][PE] mean and std.dev: (703.27, 547.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206710 reads in 403.897 CPU sec, 48.459 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206962
	[0000][ M::kt_pipeline] read 1206962 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493399, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.90, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206968 reads in 424.296 CPU sec, 52.741 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1206866
	[0000][ M::kt_pipeline] read 1206866 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493124, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 239, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (665.60, 719.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.70, 81.61)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1994, 4328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11332)
[0000][PE] mean and std.dev: (2238.08, 2105.93)
[0000][PE] low and high boundaries for proper pairs: (1, 14834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206962 reads in 414.840 CPU sec, 51.754 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1206772
	[0000][ M::kt_pipeline] read 1206772 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493626, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 430, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (416.80, 388.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.69, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 327, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (296.75, 79.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206866 reads in 407.277 CPU sec, 49.809 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206964
	[0000][ M::kt_pipeline] read 1206964 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492953, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 347, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (877.10, 950.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.71, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 594, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (773.50, 730.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206772 reads in 408.161 CPU sec, 47.939 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1206744
	[0000][ M::kt_pipeline] read 1206744 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493694, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (361.03, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 292, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 765)
[0000][PE] mean and std.dev: (257.82, 93.83)
[0000][PE] low and high boundaries for proper pairs: (1, 948)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206964 reads in 407.671 CPU sec, 46.593 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206830
	[0000][ M::kt_pipeline] read 1206830 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493801, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 204, 285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 531)
[0000][PE] mean and std.dev: (192.12, 59.47)
[0000][PE] low and high boundaries for proper pairs: (1, 654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.88, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206744 reads in 404.705 CPU sec, 45.379 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206876
	[0000][ M::kt_pipeline] read 1206876 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 494058, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 1139, 3332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8986)
[0000][PE] mean and std.dev: (2135.71, 2056.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.77, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 649, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (541.91, 413.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206830 reads in 401.628 CPU sec, 37.293 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206720
	[0000][ M::kt_pipeline] read 1206720 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493270, 9, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.83, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 388, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (540.50, 396.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206876 reads in 422.755 CPU sec, 46.632 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206670
	[0000][ M::kt_pipeline] read 1206670 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493585, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 439, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2044)
[0000][PE] mean and std.dev: (428.33, 256.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.74, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206720 reads in 404.353 CPU sec, 45.791 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1206690
	[0000][ M::kt_pipeline] read 1206690 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493909, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 673, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (567.88, 453.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.07, 81.18)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206670 reads in 398.856 CPU sec, 37.604 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206684
	[0000][ M::kt_pipeline] read 1206684 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493197, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (361.00, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 368, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (751.25, 853.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206690 reads in 419.191 CPU sec, 46.541 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206694
	[0000][ M::kt_pipeline] read 1206694 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493316, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 261, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 678)
[0000][PE] mean and std.dev: (241.40, 126.48)
[0000][PE] low and high boundaries for proper pairs: (1, 852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (361.01, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 323, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (525.64, 411.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206684 reads in 407.809 CPU sec, 46.126 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206772
	[0000][ M::kt_pipeline] read 1206772 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 494070, 11, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 894, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (955.00, 888.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.97, 81.21)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (825, 969, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8721)
[0000][PE] mean and std.dev: (1621.91, 1394.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11353)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 360, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1154)
[0000][PE] mean and std.dev: (324.53, 232.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206694 reads in 406.127 CPU sec, 45.670 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493727, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 276, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (535.57, 548.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (361.04, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1173, 7696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21642)
[0000][PE] mean and std.dev: (3035.18, 3557.62)
[0000][PE] low and high boundaries for proper pairs: (1, 28615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206772 reads in 401.797 CPU sec, 40.010 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 494055, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 282, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1488)
[0000][PE] mean and std.dev: (336.18, 209.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.71, 81.23)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (257, 1411, 3042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8612)
[0000][PE] mean and std.dev: (1432.73, 1299.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11397)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 400.047 CPU sec, 37.040 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206656
	[0000][ M::kt_pipeline] read 1206656 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 494071, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 989, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1316.10, 1625.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.96, 81.28)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 419.270 CPU sec, 44.494 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1206714
	[0000][ M::kt_pipeline] read 1206714 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493712, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 394, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (542.00, 304.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 621)
[0000][PE] mean and std.dev: (360.84, 81.23)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206656 reads in 420.166 CPU sec, 52.083 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 494212, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 619)
[0000][PE] mean and std.dev: (360.90, 81.09)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206714 reads in 404.665 CPU sec, 40.835 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492953, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.35, 81.00)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 412.542 CPU sec, 46.802 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492442, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 240, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (655.29, 807.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.25, 80.82)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 419.202 CPU sec, 39.113 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493115, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 281, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1118.67, 1620.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.33, 80.95)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 757, 3299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9041)
[0000][PE] mean and std.dev: (1446.07, 1318.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 417.173 CPU sec, 43.906 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492705, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 215, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (394.00, 402.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.06, 80.95)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 248, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 766)
[0000][PE] mean and std.dev: (244.82, 104.22)
[0000][PE] low and high boundaries for proper pairs: (1, 960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 423.822 CPU sec, 50.615 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 492781, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 346, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (373.47, 311.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.30, 80.90)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 570, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (985.24, 1096.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 421.443 CPU sec, 46.327 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1206206
	[0000][ M::kt_pipeline] read 1206206 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492425, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 290, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (908.50, 1132.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.22, 80.99)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 417.407 CPU sec, 44.346 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1206208
	[0000][ M::kt_pipeline] read 1206208 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492327, 7, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.27, 81.12)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 331, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (308.62, 105.22)
[0000][PE] low and high boundaries for proper pairs: (1, 839)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206206 reads in 417.101 CPU sec, 44.607 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 492797, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.13, 81.14)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 250, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (255.80, 103.64)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206208 reads in 434.255 CPU sec, 47.666 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492380, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 566, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (601.67, 489.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.02, 81.10)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 325, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (591.92, 483.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 435.709 CPU sec, 59.551 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206306
	[0000][ M::kt_pipeline] read 1206306 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492193, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 461, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (918.00, 816.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.45, 81.01)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (345, 1456, 3102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8616)
[0000][PE] mean and std.dev: (1723.00, 1399.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11373)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 436.191 CPU sec, 44.351 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492873, 10, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.61, 80.98)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (604, 947, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5809)
[0000][PE] mean and std.dev: (1251.00, 1086.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (363.12, 270.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1446)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206306 reads in 438.211 CPU sec, 52.479 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493199, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 375, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8035)
[0000][PE] mean and std.dev: (1390.93, 1917.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.43, 80.99)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 430.803 CPU sec, 50.582 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492515, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 404, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8515)
[0000][PE] mean and std.dev: (1437.47, 1904.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.32, 80.89)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 423.133 CPU sec, 48.856 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206150
	[0000][ M::kt_pipeline] read 1206150 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492839, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 465, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (642.20, 745.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.24, 81.03)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 353, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (434.36, 327.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 417.869 CPU sec, 37.402 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206198
	[0000][ M::kt_pipeline] read 1206198 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492940, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 307, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (336.62, 177.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.94, 81.08)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 373, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1656)
[0000][PE] mean and std.dev: (383.13, 313.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206150 reads in 415.206 CPU sec, 40.640 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206162
	[0000][ M::kt_pipeline] read 1206162 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492709, 12, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.06, 81.05)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (139, 2103, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6031)
[0000][PE] mean and std.dev: (1382.83, 1130.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7995)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 289, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 519)
[0000][PE] mean and std.dev: (239.38, 72.14)
[0000][PE] low and high boundaries for proper pairs: (1, 632)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206198 reads in 420.340 CPU sec, 43.388 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492714, 7, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.39, 81.12)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206162 reads in 421.849 CPU sec, 44.788 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492525, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 318, 4843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14131)
[0000][PE] mean and std.dev: (1966.33, 2942.90)
[0000][PE] low and high boundaries for proper pairs: (1, 18775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.51, 81.09)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 420.209 CPU sec, 44.366 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492952, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.37, 81.23)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 330, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1887)
[0000][PE] mean and std.dev: (329.70, 234.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2452)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 419.495 CPU sec, 40.242 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492810, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 407, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (699.90, 611.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.34, 81.31)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (876, 1112, 3624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9120)
[0000][PE] mean and std.dev: (1791.67, 1313.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11868)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 679, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (713.00, 441.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 426.522 CPU sec, 45.625 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492297, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 353, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (601.40, 471.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.58, 81.12)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 270, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1629)
[0000][PE] mean and std.dev: (396.73, 256.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 420.526 CPU sec, 46.786 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492136, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 180, 283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 507)
[0000][PE] mean and std.dev: (209.42, 85.64)
[0000][PE] low and high boundaries for proper pairs: (1, 619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.43, 81.27)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (174, 722, 4178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12186)
[0000][PE] mean and std.dev: (2136.92, 2602.71)
[0000][PE] low and high boundaries for proper pairs: (1, 16190)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 422.486 CPU sec, 41.979 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492498, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 391, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2306)
[0000][PE] mean and std.dev: (627.60, 573.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.47, 81.18)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 421.229 CPU sec, 42.438 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492452, 11, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.34, 81.28)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1814, 3064, 7034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17474)
[0000][PE] mean and std.dev: (3751.45, 2867.38)
[0000][PE] low and high boundaries for proper pairs: (1, 22694)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 445, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (709.27, 591.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 417.834 CPU sec, 35.811 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1206176
	[0000][ M::kt_pipeline] read 1206176 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492607, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.13, 81.38)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 431.072 CPU sec, 54.353 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493160, 12, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.19, 81.34)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (390, 1687, 4141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11643)
[0000][PE] mean and std.dev: (2867.00, 3123.23)
[0000][PE] low and high boundaries for proper pairs: (1, 15394)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 311, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (280.50, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206176 reads in 433.634 CPU sec, 49.980 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492559, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 246, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 500)
[0000][PE] mean and std.dev: (200.27, 62.01)
[0000][PE] low and high boundaries for proper pairs: (1, 613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.09, 81.39)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 287, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (259.58, 98.00)
[0000][PE] low and high boundaries for proper pairs: (1, 969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 420.031 CPU sec, 48.680 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492560, 7, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.36, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 433.627 CPU sec, 50.826 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492542, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 228, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1549)
[0000][PE] mean and std.dev: (226.64, 133.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.10, 81.46)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1089, 1334, 5081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13065)
[0000][PE] mean and std.dev: (2288.36, 1988.89)
[0000][PE] low and high boundaries for proper pairs: (1, 17057)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 425.998 CPU sec, 49.124 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492498, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 562, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (785.69, 727.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.20, 81.21)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (953, 2216, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7070)
[0000][PE] mean and std.dev: (1827.60, 1064.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9109)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 466, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1003.06, 1203.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 414.772 CPU sec, 45.923 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206234
	[0000][ M::kt_pipeline] read 1206234 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492822, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 339, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1575)
[0000][PE] mean and std.dev: (320.14, 187.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.04, 81.33)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 417.582 CPU sec, 48.092 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492446, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.10, 81.16)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206234 reads in 418.397 CPU sec, 44.164 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492113, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 425, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (627.00, 641.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.19, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (142, 338, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1315)
[0000][PE] mean and std.dev: (415.33, 362.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 423.996 CPU sec, 46.555 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1206112
	[0000][ M::kt_pipeline] read 1206112 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492504, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 451, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8020)
[0000][PE] mean and std.dev: (1295.62, 1580.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.27, 81.19)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 422.650 CPU sec, 48.188 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493332, 15, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 603, 5044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14448)
[0000][PE] mean and std.dev: (2276.00, 3030.00)
[0000][PE] low and high boundaries for proper pairs: (1, 19150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.88, 81.14)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 908, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (768.79, 722.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4893)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 682, 3477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10029)
[0000][PE] mean and std.dev: (1741.15, 1998.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206112 reads in 444.743 CPU sec, 54.128 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492437, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.89, 81.35)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 322, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (555.90, 665.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 419.658 CPU sec, 36.639 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 493112, 9, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.34, 81.17)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (140, 239, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (789.20, 1028.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5924)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 424.760 CPU sec, 45.873 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1206228
	[0000][ M::kt_pipeline] read 1206228 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493580, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 225, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (450.47, 514.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.88, 81.16)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (381, 876, 5017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14289)
[0000][PE] mean and std.dev: (1925.92, 2077.68)
[0000][PE] low and high boundaries for proper pairs: (1, 18925)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 416.677 CPU sec, 47.272 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206630
	[0000][ M::kt_pipeline] read 1206630 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 492444, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 265, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 747)
[0000][PE] mean and std.dev: (224.21, 85.84)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.53, 81.12)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (723, 1305, 3633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9453)
[0000][PE] mean and std.dev: (1902.09, 1608.87)
[0000][PE] low and high boundaries for proper pairs: (1, 12363)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206228 reads in 425.759 CPU sec, 50.322 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492855, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 223, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (343.24, 266.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.48, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1536, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7768)
[0000][PE] mean and std.dev: (1801.33, 1832.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10220)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 549, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (783.83, 740.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206630 reads in 422.896 CPU sec, 49.161 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1206208
	[0000][ M::kt_pipeline] read 1206208 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492390, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 353, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (526.45, 516.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.40, 81.22)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 380, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (569.42, 430.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 420.488 CPU sec, 51.197 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 491908, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 334, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (311.18, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.59, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206208 reads in 423.079 CPU sec, 46.817 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492276, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 243, 251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 447)
[0000][PE] mean and std.dev: (192.50, 66.67)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.81, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 289, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1635)
[0000][PE] mean and std.dev: (390.73, 267.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2111)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 420.786 CPU sec, 43.012 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492823, 12, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.82, 81.14)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (526, 1348, 6354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18010)
[0000][PE] mean and std.dev: (2447.25, 2766.04)
[0000][PE] low and high boundaries for proper pairs: (1, 23838)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 429.848 CPU sec, 49.422 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492726, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 240, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (688.07, 624.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.43, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (577, 1123, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8464)
[0000][PE] mean and std.dev: (2044.27, 2193.13)
[0000][PE] low and high boundaries for proper pairs: (1, 11093)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 309, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (384.00, 299.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 433.082 CPU sec, 48.590 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492829, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.43, 81.27)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 812, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1897)
[0000][PE] mean and std.dev: (844.55, 384.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 424.401 CPU sec, 41.494 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492676, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.26, 81.27)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 421.770 CPU sec, 36.424 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493287, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 258, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (515.80, 492.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.44, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 1374, 3821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10681)
[0000][PE] mean and std.dev: (1768.90, 1458.03)
[0000][PE] low and high boundaries for proper pairs: (1, 14111)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 419.407 CPU sec, 40.964 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492578, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 205, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (855.29, 1179.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.38, 81.14)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 268, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1000.53, 1415.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 430.946 CPU sec, 45.445 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492838, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 271, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (525.40, 509.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.23, 81.20)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (542, 994, 5209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14543)
[0000][PE] mean and std.dev: (2691.09, 2979.04)
[0000][PE] low and high boundaries for proper pairs: (1, 19210)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 429.792 CPU sec, 48.237 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492407, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 437, 3746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10558)
[0000][PE] mean and std.dev: (1680.33, 1973.09)
[0000][PE] low and high boundaries for proper pairs: (1, 13964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.03, 81.26)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 503, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7361)
[0000][PE] mean and std.dev: (1160.62, 1234.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9682)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 611, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (744.10, 538.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 418.516 CPU sec, 41.997 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492510, 11, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.21, 81.28)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (353, 872, 3825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10769)
[0000][PE] mean and std.dev: (1978.73, 2313.18)
[0000][PE] low and high boundaries for proper pairs: (1, 14241)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 425.117 CPU sec, 51.717 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1206166
	[0000][ M::kt_pipeline] read 1206166 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492156, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 808, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8084)
[0000][PE] mean and std.dev: (1305.83, 1388.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.29, 81.23)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 427.600 CPU sec, 50.482 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492464, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 300, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (572.73, 620.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.81, 81.25)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 400, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1081)
[0000][PE] mean and std.dev: (343.90, 138.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206166 reads in 443.438 CPU sec, 48.405 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206166
	[0000][ M::kt_pipeline] read 1206166 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492746, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.61, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 409.570 CPU sec, 33.810 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493037, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 328, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 843)
[0000][PE] mean and std.dev: (276.22, 91.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.80, 81.21)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 398, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2602)
[0000][PE] mean and std.dev: (582.92, 509.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206166 reads in 427.088 CPU sec, 43.379 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492622, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 753, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (757.92, 573.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.93, 81.28)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 336, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (528.44, 489.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 438.242 CPU sec, 45.082 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492575, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 543, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1739)
[0000][PE] mean and std.dev: (421.69, 176.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.57, 81.18)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (178, 831, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5992)
[0000][PE] mean and std.dev: (935.78, 1078.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7930)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 374, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (1090.24, 1260.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 426.054 CPU sec, 45.749 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492796, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 865, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2633)
[0000][PE] mean and std.dev: (741.08, 503.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.65, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 436.476 CPU sec, 42.412 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492358, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 417, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1421)
[0000][PE] mean and std.dev: (438.80, 257.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.16, 81.15)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 275, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 723)
[0000][PE] mean and std.dev: (281.11, 84.82)
[0000][PE] low and high boundaries for proper pairs: (1, 886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 414.958 CPU sec, 43.818 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492585, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 240, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1913)
[0000][PE] mean and std.dev: (344.91, 334.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.99, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 2379, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7692)
[0000][PE] mean and std.dev: (1909.10, 1878.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10161)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 418.420 CPU sec, 43.792 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492574, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 328, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1366)
[0000][PE] mean and std.dev: (341.00, 196.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.95, 81.12)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 427.502 CPU sec, 47.082 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1206188
	[0000][ M::kt_pipeline] read 1206188 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492062, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 279, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (461.22, 451.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.99, 81.19)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (459, 1573, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7638)
[0000][PE] mean and std.dev: (1726.46, 1296.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10031)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 432.291 CPU sec, 43.380 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1206150
	[0000][ M::kt_pipeline] read 1206150 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492683, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 240, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1825)
[0000][PE] mean and std.dev: (374.31, 285.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.86, 81.17)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 396, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (408.42, 263.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1580)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206188 reads in 422.255 CPU sec, 46.641 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1206166
	[0000][ M::kt_pipeline] read 1206166 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492385, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 283, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (620.56, 736.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.17, 81.12)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 355, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6026)
[0000][PE] mean and std.dev: (558.56, 626.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206150 reads in 436.888 CPU sec, 51.083 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206138
	[0000][ M::kt_pipeline] read 1206138 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492778, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 227, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (790.18, 748.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.73, 81.20)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 637, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (905.40, 995.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206166 reads in 423.179 CPU sec, 43.300 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 492895, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 281, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1880)
[0000][PE] mean and std.dev: (376.47, 237.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.17, 81.20)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206138 reads in 430.171 CPU sec, 46.951 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492940, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.16)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 436.030 CPU sec, 43.623 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206192
	[0000][ M::kt_pipeline] read 1206192 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493110, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 374, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2217)
[0000][PE] mean and std.dev: (585.57, 454.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.91, 81.19)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (505, 1122, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7351)
[0000][PE] mean and std.dev: (1688.09, 1528.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9633)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 394, 2911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8305)
[0000][PE] mean and std.dev: (1419.46, 2096.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 441.399 CPU sec, 49.302 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493098, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 370, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (353.00, 145.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.86, 81.26)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206192 reads in 442.948 CPU sec, 50.356 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492797, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 268, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (576.69, 591.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.69, 81.16)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 432.328 CPU sec, 54.610 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492819, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1390, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1088.92, 625.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.94, 81.13)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 425.325 CPU sec, 48.519 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492868, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 400, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2152)
[0000][PE] mean and std.dev: (469.75, 313.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.65, 81.02)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 425.045 CPU sec, 44.378 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492469, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 210, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (369.22, 324.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.87, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 384, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1972)
[0000][PE] mean and std.dev: (461.78, 331.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 426.010 CPU sec, 37.059 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1206180
	[0000][ M::kt_pipeline] read 1206180 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493184, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 358, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (613.78, 623.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.79, 81.04)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 368, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5151)
[0000][PE] mean and std.dev: (974.00, 1075.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 418.276 CPU sec, 41.607 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206154
	[0000][ M::kt_pipeline] read 1206154 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492922, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 294, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (616.17, 454.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.69, 81.02)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206180 reads in 423.412 CPU sec, 46.866 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492948, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 242, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 717)
[0000][PE] mean and std.dev: (200.91, 83.77)
[0000][PE] low and high boundaries for proper pairs: (1, 901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.66, 81.10)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206154 reads in 424.017 CPU sec, 48.377 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206202
	[0000][ M::kt_pipeline] read 1206202 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493349, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 226, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (412.55, 392.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.75, 81.02)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 416.491 CPU sec, 44.093 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493020, 9, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 618)
[0000][PE] mean and std.dev: (362.72, 80.90)
[0000][PE] low and high boundaries for proper pairs: (6, 720)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206202 reads in 417.235 CPU sec, 45.129 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206090
	[0000][ M::kt_pipeline] read 1206090 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492478, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.41, 80.85)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 617, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (783.33, 598.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 432.696 CPU sec, 37.708 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493251, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.55, 80.87)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 582, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7676)
[0000][PE] mean and std.dev: (1496.80, 1617.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10113)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206090 reads in 426.681 CPU sec, 45.687 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493045, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 236, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 705)
[0000][PE] mean and std.dev: (236.60, 163.59)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.07, 80.88)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 427.597 CPU sec, 49.546 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1206130
	[0000][ M::kt_pipeline] read 1206130 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493092, 15, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.13, 80.84)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (449, 663, 3369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9209)
[0000][PE] mean and std.dev: (1524.80, 1412.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12129)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 421.081 CPU sec, 45.307 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493021, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 416, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (444.00, 281.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.18, 80.92)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 881, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9542)
[0000][PE] mean and std.dev: (1471.40, 1691.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12632)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 664, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1838)
[0000][PE] mean and std.dev: (590.80, 349.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206130 reads in 421.735 CPU sec, 37.612 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1206218
	[0000][ M::kt_pipeline] read 1206218 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492196, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 238, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (268.09, 254.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.94, 80.98)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 425.362 CPU sec, 47.087 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492377, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.23, 80.97)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 314, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1950)
[0000][PE] mean and std.dev: (376.67, 259.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206218 reads in 414.484 CPU sec, 42.076 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1206172
	[0000][ M::kt_pipeline] read 1206172 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492536, 12, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.11, 80.94)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1346, 1777, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (6, 3356)
[0000][PE] mean and std.dev: (1455.27, 549.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 410, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (688.42, 632.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6439)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 418.052 CPU sec, 44.856 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1206190
	[0000][ M::kt_pipeline] read 1206190 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492835, 13, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.08, 81.02)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1011, 1473, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1472.23, 915.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 315, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 929)
[0000][PE] mean and std.dev: (332.88, 143.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1161)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206172 reads in 418.175 CPU sec, 38.201 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492641, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 349, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4573)
[0000][PE] mean and std.dev: (733.78, 1046.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.48, 81.12)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (61, 143, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1247.60, 1940.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9011)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 302, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1456)
[0000][PE] mean and std.dev: (411.14, 325.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206190 reads in 409.801 CPU sec, 37.017 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492536, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 441, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (807.56, 1002.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.58, 81.03)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 411.081 CPU sec, 39.130 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492228, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 286, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (592.67, 623.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 621)
[0000][PE] mean and std.dev: (365.58, 80.81)
[0000][PE] low and high boundaries for proper pairs: (9, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 446, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6477)
[0000][PE] mean and std.dev: (939.00, 923.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 422.295 CPU sec, 41.001 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206216
	[0000][ M::kt_pipeline] read 1206216 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492357, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 462, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (435.78, 316.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.38, 81.09)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 429.830 CPU sec, 48.573 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493068, 11, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 621)
[0000][PE] mean and std.dev: (365.58, 80.91)
[0000][PE] low and high boundaries for proper pairs: (9, 723)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (324, 455, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (532.00, 434.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 276, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (463.91, 423.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206216 reads in 424.854 CPU sec, 45.228 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492249, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 599, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (658.08, 552.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.18, 81.25)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (402, 598, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1917)
[0000][PE] mean and std.dev: (620.00, 467.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2490)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 426.439 CPU sec, 46.981 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206260
	[0000][ M::kt_pipeline] read 1206260 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492346, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 504, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (506.09, 300.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.81, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (617, 1609, 7578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21500)
[0000][PE] mean and std.dev: (3335.40, 3523.78)
[0000][PE] low and high boundaries for proper pairs: (1, 28461)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 388, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2112)
[0000][PE] mean and std.dev: (677.91, 541.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 425.038 CPU sec, 49.148 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 491932, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 351, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (394.82, 361.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.07, 81.24)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 836, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (805.89, 346.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206260 reads in 413.704 CPU sec, 41.011 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492685, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 395, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1860)
[0000][PE] mean and std.dev: (529.29, 359.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.11, 81.25)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 589, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1256.90, 1537.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 316, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (793.77, 977.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 414.485 CPU sec, 42.770 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 491892, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 213, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 868)
[0000][PE] mean and std.dev: (252.67, 108.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.04, 81.25)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 423.323 CPU sec, 42.027 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492680, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 233, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1421)
[0000][PE] mean and std.dev: (244.44, 150.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.08, 81.16)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 416, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (424.50, 284.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3192)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 413, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (38, 668)
[0000][PE] mean and std.dev: (315.50, 112.16)
[0000][PE] low and high boundaries for proper pairs: (1, 794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 419.342 CPU sec, 47.253 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206142
	[0000][ M::kt_pipeline] read 1206142 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492949, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 319, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (670.70, 558.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.24, 81.13)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 408.208 CPU sec, 32.370 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492268, 12, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.15, 81.16)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (82, 794, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (680.83, 607.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206142 reads in 419.583 CPU sec, 47.461 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492619, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.37, 81.15)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 424, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (753.15, 684.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6948)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 414.717 CPU sec, 44.845 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206182
	[0000][ M::kt_pipeline] read 1206182 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492292, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 339, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8274)
[0000][PE] mean and std.dev: (993.85, 1352.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.41, 81.18)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 409.000 CPU sec, 33.415 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492547, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.17, 81.24)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206182 reads in 411.061 CPU sec, 37.376 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492706, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.31, 81.41)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 417, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (790.78, 955.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 410.345 CPU sec, 34.615 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492128, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 239, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (325.27, 293.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.35, 81.21)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 219, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1087)
[0000][PE] mean and std.dev: (366.18, 277.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 414.480 CPU sec, 32.473 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493029, 11, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.42, 81.28)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (181, 297, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (398.33, 387.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 323, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1423)
[0000][PE] mean and std.dev: (416.56, 363.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1869)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 413.325 CPU sec, 37.574 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492552, 12, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.22, 81.39)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (362, 664, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (859.58, 834.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 409.115 CPU sec, 28.986 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492401, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.23, 81.20)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 426.435 CPU sec, 38.798 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492767, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 310, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1855)
[0000][PE] mean and std.dev: (562.50, 444.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.18, 81.23)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 404.265 CPU sec, 29.845 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 491818, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.33, 81.32)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 562, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (621.36, 393.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 423.731 CPU sec, 46.649 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 491780, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 198, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1695)
[0000][PE] mean and std.dev: (345.08, 314.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.22, 81.20)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (189, 1270, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6759)
[0000][PE] mean and std.dev: (1414.10, 1696.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8949)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 318, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (758.06, 947.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 432.962 CPU sec, 42.294 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492642, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 596, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1552)
[0000][PE] mean and std.dev: (551.55, 338.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.26, 81.16)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 421.335 CPU sec, 41.593 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 491857, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 594, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (818.15, 836.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.17, 81.21)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (447, 864, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7233)
[0000][PE] mean and std.dev: (1659.50, 1711.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9495)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 362, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (471.71, 325.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 419.879 CPU sec, 31.083 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492008, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 247, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1252)
[0000][PE] mean and std.dev: (383.67, 346.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.85, 81.23)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 793, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2245)
[0000][PE] mean and std.dev: (698.64, 474.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 426.234 CPU sec, 37.628 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206220
	[0000][ M::kt_pipeline] read 1206220 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 492569, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 276, 785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2023)
[0000][PE] mean and std.dev: (393.61, 403.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (365.08, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (118, 461, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (612.20, 582.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 406.897 CPU sec, 36.450 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492494, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 293, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (381.87, 295.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.82, 81.54)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 308, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (681.91, 620.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206220 reads in 414.650 CPU sec, 37.401 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492536, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 268, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (237.50, 131.39)
[0000][PE] low and high boundaries for proper pairs: (1, 964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.91, 81.16)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 410.613 CPU sec, 31.379 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492786, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 623, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8428)
[0000][PE] mean and std.dev: (1452.29, 1611.69)
[0000][PE] low and high boundaries for proper pairs: (1, 11159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.89, 81.35)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (353, 400, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8231)
[0000][PE] mean and std.dev: (2086.00, 2675.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (98, 148, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (526.23, 640.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 415.590 CPU sec, 39.497 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492097, 13, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.64, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (558, 1093, 3148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8328)
[0000][PE] mean and std.dev: (1853.54, 1394.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10918)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 323, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (603.91, 614.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 406.066 CPU sec, 35.459 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 491967, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.57, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 657, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (748.64, 507.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 414.508 CPU sec, 43.619 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492326, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (89, 331, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (384.88, 416.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.31, 81.26)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 578, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (1153.31, 1278.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 411.888 CPU sec, 39.404 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492926, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.53, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 331, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (488.55, 403.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 410.589 CPU sec, 38.485 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492578, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 254, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5843)
[0000][PE] mean and std.dev: (1348.67, 1927.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.61, 81.17)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 412.267 CPU sec, 38.234 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206224
	[0000][ M::kt_pipeline] read 1206224 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492543, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 409, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (498.91, 386.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.62, 81.27)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 1351, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6441)
[0000][PE] mean and std.dev: (1282.75, 1211.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8540)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 410.158 CPU sec, 34.447 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492789, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 335, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (903.85, 1067.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.38, 81.02)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (373, 621, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5329)
[0000][PE] mean and std.dev: (891.10, 792.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206224 reads in 406.989 CPU sec, 34.338 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492042, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 219, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (486.57, 485.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.49, 81.37)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 408.446 CPU sec, 37.709 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1206756
	[0000][ M::kt_pipeline] read 1206756 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 492811, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 321, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1519)
[0000][PE] mean and std.dev: (370.41, 308.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.47, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (314, 930, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7814)
[0000][PE] mean and std.dev: (1612.50, 1667.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10314)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 425.920 CPU sec, 31.742 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 490876, 6, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 363, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 625)
[0000][PE] mean and std.dev: (361.88, 82.00)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206756 reads in 454.329 CPU sec, 36.101 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492244, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 301, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (468.56, 411.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.12, 81.39)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (102, 2779, 4883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14445)
[0000][PE] mean and std.dev: (2315.50, 2260.88)
[0000][PE] low and high boundaries for proper pairs: (1, 19226)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 422.657 CPU sec, 33.595 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206554
	[0000][ M::kt_pipeline] read 1206554 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492531, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (364.13, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 415.292 CPU sec, 39.291 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492881, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 211, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (358.17, 307.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.09, 81.40)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (399, 640, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1206)
[0000][PE] mean and std.dev: (528.36, 159.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1475)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206554 reads in 409.277 CPU sec, 38.513 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492737, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 238, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 796)
[0000][PE] mean and std.dev: (250.19, 162.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.95, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 396, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (737.00, 741.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 423.938 CPU sec, 37.709 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 492437, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.96, 81.13)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 299, 4468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12982)
[0000][PE] mean and std.dev: (1387.09, 1889.56)
[0000][PE] low and high boundaries for proper pairs: (1, 17239)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 413.768 CPU sec, 38.988 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492436, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 349, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (381.62, 212.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.60, 81.17)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 415.749 CPU sec, 39.477 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492282, 7, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.24, 81.20)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 425.284 CPU sec, 31.920 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492815, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.18, 81.17)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 537, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2404)
[0000][PE] mean and std.dev: (553.40, 371.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3134)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 411.442 CPU sec, 37.219 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492379, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 267, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (494.30, 393.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.17, 81.08)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 404.783 CPU sec, 37.561 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493150, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.35, 81.27)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 417.850 CPU sec, 39.945 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493116, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 219, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (238.77, 89.89)
[0000][PE] low and high boundaries for proper pairs: (1, 951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.25, 81.13)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 256, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7472)
[0000][PE] mean and std.dev: (718.64, 946.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 414.500 CPU sec, 37.739 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493074, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 312, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6827)
[0000][PE] mean and std.dev: (1115.54, 1615.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.12, 81.27)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 1512, 4224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12182)
[0000][PE] mean and std.dev: (2185.60, 2206.90)
[0000][PE] low and high boundaries for proper pairs: (1, 16161)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 415.731 CPU sec, 39.480 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206244
	[0000][ M::kt_pipeline] read 1206244 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492555, 9, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.46, 81.08)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 412.644 CPU sec, 34.188 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492857, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 252, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2064)
[0000][PE] mean and std.dev: (509.08, 515.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.70, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 218, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 366)
[0000][PE] mean and std.dev: (227.44, 55.28)
[0000][PE] low and high boundaries for proper pairs: (6, 449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206244 reads in 423.134 CPU sec, 32.518 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492895, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 284, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2217)
[0000][PE] mean and std.dev: (482.40, 359.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.85, 81.30)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 402, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 909)
[0000][PE] mean and std.dev: (334.40, 147.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 417.701 CPU sec, 39.918 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1206110
	[0000][ M::kt_pipeline] read 1206110 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493238, 14, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 428, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (516.78, 502.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.87, 81.33)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (224, 729, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7082)
[0000][PE] mean and std.dev: (900.25, 998.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9368)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 284, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (731.29, 935.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 410.370 CPU sec, 35.047 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493133, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 282, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4607)
[0000][PE] mean and std.dev: (786.00, 844.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.67, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 371, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (522.36, 342.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206110 reads in 418.681 CPU sec, 34.819 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492764, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.09, 81.13)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 298, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (537.80, 593.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 417.390 CPU sec, 35.478 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493070, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 648, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (672.33, 600.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.85, 81.27)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 249, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (560.20, 516.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 328, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (561.12, 559.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 411.680 CPU sec, 35.161 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206138
	[0000][ M::kt_pipeline] read 1206138 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492620, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 179, 3928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11520)
[0000][PE] mean and std.dev: (1386.15, 2295.43)
[0000][PE] low and high boundaries for proper pairs: (1, 15316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.66, 81.21)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 407.330 CPU sec, 33.521 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1206124
	[0000][ M::kt_pipeline] read 1206124 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492303, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 245, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 629)
[0000][PE] mean and std.dev: (238.08, 83.31)
[0000][PE] low and high boundaries for proper pairs: (1, 781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.77, 80.99)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (442, 2776, 4619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12973)
[0000][PE] mean and std.dev: (2454.75, 1996.72)
[0000][PE] low and high boundaries for proper pairs: (1, 17150)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 456, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2812)
[0000][PE] mean and std.dev: (700.20, 485.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206138 reads in 417.820 CPU sec, 39.055 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493403, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 293, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (648.08, 736.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.79, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (639, 1236, 7553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21381)
[0000][PE] mean and std.dev: (2741.15, 2918.39)
[0000][PE] low and high boundaries for proper pairs: (1, 28295)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 239, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 925)
[0000][PE] mean and std.dev: (248.89, 100.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206124 reads in 412.120 CPU sec, 40.226 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492697, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.64, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 408.113 CPU sec, 30.360 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492924, 15, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 275, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (226.20, 83.49)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.66, 81.40)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 671, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7030)
[0000][PE] mean and std.dev: (1482.36, 2183.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10216)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 509, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (604.91, 384.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 420.186 CPU sec, 37.626 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492479, 12, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.43, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (416, 780, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (673.09, 525.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 330, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (569.83, 570.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 410.559 CPU sec, 30.909 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206170
	[0000][ M::kt_pipeline] read 1206170 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492576, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 517, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1046.43, 1124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.75, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 282, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 706)
[0000][PE] mean and std.dev: (282.87, 125.55)
[0000][PE] low and high boundaries for proper pairs: (1, 857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 425.908 CPU sec, 41.398 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 493250, 9, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.83, 81.15)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 543, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (754.80, 702.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206170 reads in 422.331 CPU sec, 41.120 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493653, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 180, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 765)
[0000][PE] mean and std.dev: (204.89, 66.05)
[0000][PE] low and high boundaries for proper pairs: (1, 960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.57, 81.10)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (196, 1593, 3532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10204)
[0000][PE] mean and std.dev: (2204.00, 2379.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13540)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 303, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1755)
[0000][PE] mean and std.dev: (431.00, 365.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 418.552 CPU sec, 44.851 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206190
	[0000][ M::kt_pipeline] read 1206190 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492605, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 249, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 914)
[0000][PE] mean and std.dev: (263.80, 85.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.65, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 710, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (631.25, 451.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 413.919 CPU sec, 39.795 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492848, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 504, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (907.80, 949.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.70, 81.12)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (97, 676, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (494.22, 324.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 636, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (750.92, 597.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206190 reads in 416.798 CPU sec, 42.490 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493142, 9, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.84, 81.14)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 659, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (700.00, 520.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 412.991 CPU sec, 31.696 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1206180
	[0000][ M::kt_pipeline] read 1206180 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492688, 11, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.90, 81.08)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (439, 966, 3194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8704)
[0000][PE] mean and std.dev: (1531.18, 1324.36)
[0000][PE] low and high boundaries for proper pairs: (1, 11459)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 415.782 CPU sec, 36.369 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1206204
	[0000][ M::kt_pipeline] read 1206204 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492277, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 184, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (806.14, 941.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.91, 80.93)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206180 reads in 417.870 CPU sec, 41.089 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493275, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (119, 219, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4814)
[0000][PE] mean and std.dev: (761.75, 1062.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.75, 81.07)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206204 reads in 415.014 CPU sec, 35.086 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492755, 10, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.81, 80.81)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 596, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6477)
[0000][PE] mean and std.dev: (1318.20, 1451.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8589)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 416.105 CPU sec, 42.299 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206178
	[0000][ M::kt_pipeline] read 1206178 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492937, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 316, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (821.09, 941.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.74, 81.06)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 375, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2053)
[0000][PE] mean and std.dev: (424.79, 293.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 418.458 CPU sec, 36.528 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206150
	[0000][ M::kt_pipeline] read 1206150 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493004, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.03, 80.82)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206178 reads in 416.122 CPU sec, 33.267 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1206172
	[0000][ M::kt_pipeline] read 1206172 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492543, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 626, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2501)
[0000][PE] mean and std.dev: (609.20, 392.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.95, 80.86)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 337, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (61, 611)
[0000][PE] mean and std.dev: (288.78, 78.95)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206150 reads in 414.637 CPU sec, 30.561 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492671, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.95, 80.85)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1446, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8532)
[0000][PE] mean and std.dev: (1455.82, 1434.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11275)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206172 reads in 425.179 CPU sec, 43.285 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206164
	[0000][ M::kt_pipeline] read 1206164 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492229, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.29, 80.66)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 623, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (705.10, 682.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3436)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 424.883 CPU sec, 41.761 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206118
	[0000][ M::kt_pipeline] read 1206118 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492466, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.10, 81.14)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (112, 290, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (434.67, 463.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206164 reads in 425.188 CPU sec, 41.819 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492018, 12, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.05, 80.94)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (608, 765, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (202, 1217)
[0000][PE] mean and std.dev: (702.60, 147.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1420)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206118 reads in 427.601 CPU sec, 48.370 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206116
	[0000][ M::kt_pipeline] read 1206116 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492251, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.98, 80.97)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 411.989 CPU sec, 34.656 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492332, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 260, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 665)
[0000][PE] mean and std.dev: (245.36, 86.33)
[0000][PE] low and high boundaries for proper pairs: (1, 825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.48, 81.06)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (161, 327, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1694)
[0000][PE] mean and std.dev: (461.25, 425.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206116 reads in 423.874 CPU sec, 39.672 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206208
	[0000][ M::kt_pipeline] read 1206208 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492151, 12, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.95, 81.06)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 622, 5841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16979)
[0000][PE] mean and std.dev: (2082.33, 2803.66)
[0000][PE] low and high boundaries for proper pairs: (1, 22548)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 409.771 CPU sec, 39.683 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492690, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 277, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (34, 564)
[0000][PE] mean and std.dev: (241.67, 73.13)
[0000][PE] low and high boundaries for proper pairs: (1, 670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.13, 81.03)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206208 reads in 414.380 CPU sec, 38.683 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1206242
	[0000][ M::kt_pipeline] read 1206242 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492229, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 306, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (157, 427)
[0000][PE] mean and std.dev: (296.83, 18.60)
[0000][PE] low and high boundaries for proper pairs: (103, 481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.28, 80.99)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 277, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (559.50, 472.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 414.887 CPU sec, 32.986 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492223, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 650, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (929.58, 971.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.05, 81.09)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206242 reads in 409.961 CPU sec, 38.434 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492422, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 274, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (461.60, 387.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.00, 80.97)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (481, 782, 5059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14215)
[0000][PE] mean and std.dev: (1844.00, 1959.28)
[0000][PE] low and high boundaries for proper pairs: (1, 18793)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 274, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (510.13, 412.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.664 CPU sec, 34.135 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 491444, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 335, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (545.42, 599.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.01, 81.12)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 367, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (551.73, 422.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 407.780 CPU sec, 32.113 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492276, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 721, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (743.82, 668.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.29, 81.07)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 331, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1783)
[0000][PE] mean and std.dev: (501.92, 421.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 410.299 CPU sec, 35.177 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492078, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 200, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 622)
[0000][PE] mean and std.dev: (195.33, 62.41)
[0000][PE] low and high boundaries for proper pairs: (1, 763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.16, 81.34)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 414.130 CPU sec, 35.939 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492286, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.38, 81.23)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 504, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (512.60, 369.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 416.672 CPU sec, 40.066 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492299, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.45, 81.26)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 424.842 CPU sec, 38.657 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492597, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 899, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (945.85, 579.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.41, 81.13)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 410.501 CPU sec, 39.059 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492606, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 193, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (628.27, 861.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.23, 81.16)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 406.881 CPU sec, 30.305 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492224, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 751, 3253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9289)
[0000][PE] mean and std.dev: (1646.33, 1983.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.24, 81.37)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 597, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (496.22, 396.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 417.672 CPU sec, 42.846 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492512, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.11, 81.39)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 414.392 CPU sec, 36.326 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 491964, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 334, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1701)
[0000][PE] mean and std.dev: (462.27, 389.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.03, 81.14)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 428, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1496)
[0000][PE] mean and std.dev: (377.00, 194.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 416.949 CPU sec, 43.438 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1206254
	[0000][ M::kt_pipeline] read 1206254 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492330, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 417, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (539.83, 467.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.12, 81.22)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 412.184 CPU sec, 42.562 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492577, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 216, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1896)
[0000][PE] mean and std.dev: (383.86, 414.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.09, 81.30)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 363, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 755)
[0000][PE] mean and std.dev: (323.00, 98.73)
[0000][PE] low and high boundaries for proper pairs: (1, 908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206254 reads in 410.217 CPU sec, 33.582 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 492651, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 267, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (758.11, 806.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.91, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 408.695 CPU sec, 38.746 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492689, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 605, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (446.69, 282.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.06, 81.33)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1128, 1920, 5057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12915)
[0000][PE] mean and std.dev: (2817.30, 2350.12)
[0000][PE] low and high boundaries for proper pairs: (1, 16844)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 409.030 CPU sec, 37.918 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492225, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 323, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (324.80, 179.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.91, 81.33)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 823, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (781.20, 557.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 408.341 CPU sec, 33.865 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492787, 1, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.25, 81.39)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 409.702 CPU sec, 34.013 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206604
	[0000][ M::kt_pipeline] read 1206604 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 491952, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 431, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1565)
[0000][PE] mean and std.dev: (419.88, 247.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.94, 81.35)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 272, 3504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10174)
[0000][PE] mean and std.dev: (1309.82, 1797.42)
[0000][PE] low and high boundaries for proper pairs: (1, 13509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 408.336 CPU sec, 38.759 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206602
	[0000][ M::kt_pipeline] read 1206602 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492755, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 314, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (538.94, 461.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.32, 81.45)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206604 reads in 407.992 CPU sec, 44.969 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492039, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 224, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1692)
[0000][PE] mean and std.dev: (353.29, 308.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.14, 81.46)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 350, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 703)
[0000][PE] mean and std.dev: (310.70, 147.18)
[0000][PE] low and high boundaries for proper pairs: (1, 899)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 1547, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8282)
[0000][PE] mean and std.dev: (1734.23, 1474.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206602 reads in 408.517 CPU sec, 37.721 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 491778, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 266, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 622)
[0000][PE] mean and std.dev: (245.30, 67.33)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.97, 81.22)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 249, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1469)
[0000][PE] mean and std.dev: (390.08, 247.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 413.655 CPU sec, 35.223 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1206614
	[0000][ M::kt_pipeline] read 1206614 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492856, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.90, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 283, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 567)
[0000][PE] mean and std.dev: (227.50, 68.40)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 425.979 CPU sec, 30.283 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492155, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 240, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (824.27, 974.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.89, 81.32)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1376, 3238, 3346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7286)
[0000][PE] mean and std.dev: (2495.08, 1642.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9256)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206614 reads in 413.466 CPU sec, 38.147 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492311, 13, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 367, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (755.10, 752.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.95, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (972, 2139, 3054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7218)
[0000][PE] mean and std.dev: (1688.75, 1151.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9300)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 417.073 CPU sec, 35.607 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492630, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 233, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 696)
[0000][PE] mean and std.dev: (261.00, 164.96)
[0000][PE] low and high boundaries for proper pairs: (1, 921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.82, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (692, 1416, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (928.56, 546.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 405.893 CPU sec, 34.014 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492686, 11, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.53, 81.18)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (117, 241, 3115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9111)
[0000][PE] mean and std.dev: (1141.18, 1495.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12109)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 412.741 CPU sec, 36.571 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492312, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 429, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (504.93, 357.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.65, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 1069, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1430.42, 1261.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 413.536 CPU sec, 35.001 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492215, 11, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.73, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1226, 2940, 3861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9131)
[0000][PE] mean and std.dev: (2666.09, 1978.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11766)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (153, 572, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (613.50, 498.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 415.467 CPU sec, 41.291 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1206552
	[0000][ M::kt_pipeline] read 1206552 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492700, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 1117, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (678.73, 579.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.86, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 337, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 879)
[0000][PE] mean and std.dev: (354.45, 155.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 406.550 CPU sec, 30.447 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492305, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.69, 81.22)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206552 reads in 410.759 CPU sec, 30.088 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492367, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.67, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 256, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (535.07, 615.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 404.708 CPU sec, 29.584 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206680
	[0000][ M::kt_pipeline] read 1206680 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 492213, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 322, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (455.55, 352.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.36, 81.34)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (83, 703, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (364.73, 315.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 410.362 CPU sec, 27.895 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492088, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.62, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206680 reads in 409.863 CPU sec, 26.398 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492272, 11, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.35, 81.34)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (433, 1011, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8965)
[0000][PE] mean and std.dev: (1059.33, 1109.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11809)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (155, 912, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (485.38, 339.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 403.943 CPU sec, 29.732 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492146, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 274, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1950)
[0000][PE] mean and std.dev: (485.50, 438.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.72, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 755, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (996.73, 857.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 413.323 CPU sec, 34.746 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492506, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 459, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (768.57, 923.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.70, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 344, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (340.46, 205.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 417.683 CPU sec, 34.529 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492290, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 477, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1450)
[0000][PE] mean and std.dev: (452.22, 355.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.08, 81.27)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (751, 1836, 3071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7711)
[0000][PE] mean and std.dev: (1715.80, 1355.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10031)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 579, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8661)
[0000][PE] mean and std.dev: (1606.08, 2269.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 405.401 CPU sec, 28.810 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492755, 12, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.46, 81.35)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (162, 702, 3218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9330)
[0000][PE] mean and std.dev: (1478.08, 1521.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12386)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 422.208 CPU sec, 33.763 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492433, 13, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 281, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1091)
[0000][PE] mean and std.dev: (373.82, 258.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.12, 81.22)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 503, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5925)
[0000][PE] mean and std.dev: (1229.23, 1340.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7824)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 368, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1657)
[0000][PE] mean and std.dev: (470.00, 267.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 401.853 CPU sec, 25.132 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 491834, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 290, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1325)
[0000][PE] mean and std.dev: (343.42, 198.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.17, 81.26)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 415.741 CPU sec, 29.795 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1206196
	[0000][ M::kt_pipeline] read 1206196 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492658, 9, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.97, 81.41)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 422.941 CPU sec, 35.320 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1206164
	[0000][ M::kt_pipeline] read 1206164 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492413, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 333, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1998)
[0000][PE] mean and std.dev: (400.36, 300.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.07, 81.32)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 295, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 780)
[0000][PE] mean and std.dev: (257.12, 89.66)
[0000][PE] low and high boundaries for proper pairs: (1, 968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206196 reads in 418.543 CPU sec, 31.124 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 491803, 15, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 718, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1708)
[0000][PE] mean and std.dev: (616.50, 319.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.08, 81.20)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (515, 822, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6281)
[0000][PE] mean and std.dev: (990.46, 815.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8203)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206164 reads in 408.669 CPU sec, 33.935 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492693, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 1172, 7660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22658)
[0000][PE] mean and std.dev: (3102.10, 3364.72)
[0000][PE] low and high boundaries for proper pairs: (1, 30157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.46, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 244, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (37, 427)
[0000][PE] mean and std.dev: (216.30, 42.89)
[0000][PE] low and high boundaries for proper pairs: (1, 505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 402.773 CPU sec, 28.699 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492713, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.74, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 402.454 CPU sec, 28.934 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492969, 10, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.50, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 285, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 844)
[0000][PE] mean and std.dev: (199.22, 148.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1099)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 387, 4318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12370)
[0000][PE] mean and std.dev: (1746.10, 2250.59)
[0000][PE] low and high boundaries for proper pairs: (1, 16396)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 403.768 CPU sec, 30.007 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492828, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.40, 81.35)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 287, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 475)
[0000][PE] mean and std.dev: (241.60, 69.36)
[0000][PE] low and high boundaries for proper pairs: (1, 553)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 402.528 CPU sec, 28.953 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 492450, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.75, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 417.727 CPU sec, 30.155 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492701, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 394, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1433)
[0000][PE] mean and std.dev: (464.82, 336.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.12, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 420.655 CPU sec, 33.895 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492855, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 493, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6471)
[0000][PE] mean and std.dev: (1020.08, 1100.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.05, 81.40)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 223, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (770.00, 882.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 401.936 CPU sec, 25.923 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1206156
	[0000][ M::kt_pipeline] read 1206156 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492109, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 250, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1415)
[0000][PE] mean and std.dev: (325.15, 240.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.30, 81.20)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 411.965 CPU sec, 31.618 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 491989, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (119, 192, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (393.00, 466.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.71, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (505, 1538, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6193)
[0000][PE] mean and std.dev: (1609.00, 1270.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8089)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 304, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (444.45, 348.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206156 reads in 424.873 CPU sec, 35.077 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493039, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.98, 81.35)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 380, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1744)
[0000][PE] mean and std.dev: (442.58, 264.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2245)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 413.155 CPU sec, 28.007 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492439, 13, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 289, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 650)
[0000][PE] mean and std.dev: (210.11, 86.58)
[0000][PE] low and high boundaries for proper pairs: (1, 828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (364.00, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 1375, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8350)
[0000][PE] mean and std.dev: (1527.85, 1154.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11036)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 236, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (559.62, 481.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 407.084 CPU sec, 25.030 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492465, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 304, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (787.71, 953.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.54, 81.57)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 404, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6177)
[0000][PE] mean and std.dev: (929.00, 1171.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 315, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (465.60, 402.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 409.406 CPU sec, 28.286 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492358, 14, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 572, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2107)
[0000][PE] mean and std.dev: (599.20, 466.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.45, 81.22)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 1074, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1316.36, 1295.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 413.013 CPU sec, 30.936 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1206190
	[0000][ M::kt_pipeline] read 1206190 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492305, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.64, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 419.417 CPU sec, 32.016 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493126, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 395, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2072)
[0000][PE] mean and std.dev: (562.10, 366.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.62, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 314, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1704)
[0000][PE] mean and std.dev: (320.12, 161.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206190 reads in 410.348 CPU sec, 28.867 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492912, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 161, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 399)
[0000][PE] mean and std.dev: (147.89, 48.50)
[0000][PE] low and high boundaries for proper pairs: (1, 490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.49, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 405.451 CPU sec, 26.936 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492193, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 322, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2169)
[0000][PE] mean and std.dev: (490.20, 372.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.56, 81.42)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 417.535 CPU sec, 31.058 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 491987, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 590, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (765.75, 535.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.71, 81.19)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 415.333 CPU sec, 32.048 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492639, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.69, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 419.894 CPU sec, 29.752 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206154
	[0000][ M::kt_pipeline] read 1206154 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492784, 11, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.66, 81.10)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (747, 1197, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (1132.10, 686.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 263, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1279)
[0000][PE] mean and std.dev: (463.50, 368.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1936)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 429.881 CPU sec, 31.988 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206176
	[0000][ M::kt_pipeline] read 1206176 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493215, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 460, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (795.60, 788.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.54, 81.23)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206154 reads in 408.558 CPU sec, 28.173 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492782, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 288, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1058.20, 1242.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.78, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 302, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (354.88, 374.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 317, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (69, 599)
[0000][PE] mean and std.dev: (300.11, 82.32)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206176 reads in 405.797 CPU sec, 27.069 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493373, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1034, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4694)
[0000][PE] mean and std.dev: (998.92, 916.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.58, 81.02)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 411.065 CPU sec, 28.896 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206224
	[0000][ M::kt_pipeline] read 1206224 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 493076, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.43, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (567, 1375, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (878.00, 620.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 421.352 CPU sec, 31.418 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492584, 10, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.48, 81.29)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (133, 1143, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (942.22, 982.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 462, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2183)
[0000][PE] mean and std.dev: (588.42, 508.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2822)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206224 reads in 413.945 CPU sec, 29.497 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1206130
	[0000][ M::kt_pipeline] read 1206130 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492927, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.34, 81.01)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 500, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (468.11, 279.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2866)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 408.730 CPU sec, 26.107 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493276, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 363, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1216.70, 1543.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.37, 80.99)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (93, 263, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (202.11, 88.32)
[0000][PE] low and high boundaries for proper pairs: (1, 881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206130 reads in 411.551 CPU sec, 26.787 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492493, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 221, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1457)
[0000][PE] mean and std.dev: (432.62, 420.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 619)
[0000][PE] mean and std.dev: (363.73, 80.95)
[0000][PE] low and high boundaries for proper pairs: (7, 721)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 297, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1321)
[0000][PE] mean and std.dev: (309.86, 123.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 407.404 CPU sec, 29.549 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206174
	[0000][ M::kt_pipeline] read 1206174 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492540, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.75, 81.09)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 491, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (466.55, 350.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 407.383 CPU sec, 30.945 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492968, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 326, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6184)
[0000][PE] mean and std.dev: (917.18, 941.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.54, 81.02)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1484, 4986, 5654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13994)
[0000][PE] mean and std.dev: (3641.08, 2698.29)
[0000][PE] low and high boundaries for proper pairs: (1, 18164)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (137, 295, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (606.30, 761.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206174 reads in 414.096 CPU sec, 28.184 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492314, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.40, 81.20)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 430, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1271)
[0000][PE] mean and std.dev: (368.00, 173.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1601)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 416.229 CPU sec, 31.337 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 491731, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 342, 687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1615)
[0000][PE] mean and std.dev: (337.07, 227.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.43, 81.01)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 285, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (454.91, 423.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 411.109 CPU sec, 30.291 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1206160
	[0000][ M::kt_pipeline] read 1206160 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492558, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.65, 80.93)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 410.631 CPU sec, 30.004 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492823, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 324, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2106)
[0000][PE] mean and std.dev: (467.00, 314.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.87, 80.88)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (130, 227, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (602.40, 606.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206160 reads in 408.709 CPU sec, 29.977 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1206152
	[0000][ M::kt_pipeline] read 1206152 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492596, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.09, 80.84)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 305, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1857)
[0000][PE] mean and std.dev: (436.93, 294.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2384)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 408.910 CPU sec, 30.009 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492131, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 301, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (331.50, 186.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.03, 80.85)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (48, 625, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (515.20, 493.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 872, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (748.93, 371.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206152 reads in 405.396 CPU sec, 29.786 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492309, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 237, 622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (378.89, 363.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.21, 81.12)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1199, 2323, 4934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12404)
[0000][PE] mean and std.dev: (3151.33, 2652.89)
[0000][PE] low and high boundaries for proper pairs: (1, 16139)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 403.623 CPU sec, 27.931 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492107, 15, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 211, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 469)
[0000][PE] mean and std.dev: (210.62, 75.60)
[0000][PE] low and high boundaries for proper pairs: (1, 566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.81, 80.83)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 79, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6181)
[0000][PE] mean and std.dev: (1211.07, 1687.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8230)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 517, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1916)
[0000][PE] mean and std.dev: (460.22, 363.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 417.304 CPU sec, 36.892 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492116, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 260, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (563.30, 621.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.21, 81.05)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 405.912 CPU sec, 28.347 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492178, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 274, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (581.64, 501.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.32, 81.32)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 376, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (353.64, 209.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 413.386 CPU sec, 28.145 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206260
	[0000][ M::kt_pipeline] read 1206260 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492023, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.06, 81.07)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 863, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (897.58, 673.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 406.629 CPU sec, 29.394 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492127, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.32, 81.30)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206260 reads in 402.102 CPU sec, 25.270 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492329, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 808, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (897.47, 874.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.26, 81.18)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (208, 703, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (649.11, 545.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 314, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1724)
[0000][PE] mean and std.dev: (403.80, 313.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 402.386 CPU sec, 30.634 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206144
	[0000][ M::kt_pipeline] read 1206144 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492676, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.19, 81.12)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 378, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (268.75, 124.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1459)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 404.201 CPU sec, 28.137 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 490459, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.00, 81.21)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206144 reads in 428.167 CPU sec, 29.340 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492951, 13, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.22, 81.39)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (159, 657, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (665.23, 594.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 366, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5224)
[0000][PE] mean and std.dev: (1008.21, 1030.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 399.368 CPU sec, 31.056 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492783, 13, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.26, 81.23)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (260, 652, 2960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8360)
[0000][PE] mean and std.dev: (1144.83, 1417.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11060)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 417.311 CPU sec, 31.748 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492724, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 339, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1191)
[0000][PE] mean and std.dev: (329.62, 128.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.06, 81.34)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 402, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 590)
[0000][PE] mean and std.dev: (340.71, 76.75)
[0000][PE] low and high boundaries for proper pairs: (34, 681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 413.500 CPU sec, 30.530 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492033, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 309, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (428.33, 328.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.44, 81.31)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (418, 2906, 7663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22153)
[0000][PE] mean and std.dev: (3352.91, 3083.91)
[0000][PE] low and high boundaries for proper pairs: (1, 29398)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 695, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1978)
[0000][PE] mean and std.dev: (651.62, 392.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 408.838 CPU sec, 29.237 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 491691, 9, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.48, 81.18)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 409.159 CPU sec, 28.237 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492466, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 357, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (692.53, 765.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.01, 81.38)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 411.762 CPU sec, 29.897 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 491937, 7, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.18, 81.42)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 357, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (714.12, 703.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3985)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 414.377 CPU sec, 39.128 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492642, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 329, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (540.13, 460.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.27, 81.28)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 402.509 CPU sec, 27.333 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492455, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 390, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (831.13, 789.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.43, 81.28)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 609, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8064)
[0000][PE] mean and std.dev: (947.44, 1094.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10704)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 306, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (643.64, 737.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 400.456 CPU sec, 24.749 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 491798, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 372, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (799.00, 828.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.24, 81.34)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 402.421 CPU sec, 28.693 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 491681, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1229, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (836.40, 541.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.44, 81.40)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 432, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1692)
[0000][PE] mean and std.dev: (483.00, 261.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 399.625 CPU sec, 26.694 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 491935, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 302, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (515.78, 461.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 626)
[0000][PE] mean and std.dev: (365.61, 81.48)
[0000][PE] low and high boundaries for proper pairs: (2, 730)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 312, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (311.25, 134.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 420.623 CPU sec, 31.212 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492434, 13, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 626)
[0000][PE] mean and std.dev: (365.26, 81.58)
[0000][PE] low and high boundaries for proper pairs: (2, 730)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (96, 494, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7224)
[0000][PE] mean and std.dev: (1290.69, 1836.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9600)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 400.413 CPU sec, 31.521 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492306, 11, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.35, 81.30)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1081, 3958, 5117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13189)
[0000][PE] mean and std.dev: (3243.09, 2753.91)
[0000][PE] low and high boundaries for proper pairs: (1, 17225)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 274, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (244.25, 78.26)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 404.362 CPU sec, 32.184 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206182
	[0000][ M::kt_pipeline] read 1206182 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492135, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 241, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 733)
[0000][PE] mean and std.dev: (213.00, 73.71)
[0000][PE] low and high boundaries for proper pairs: (1, 919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.07, 81.45)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (165, 936, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6786)
[0000][PE] mean and std.dev: (1412.70, 1549.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8993)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 363, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6084)
[0000][PE] mean and std.dev: (1035.58, 1436.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 414.679 CPU sec, 35.645 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492726, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 505, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (534.22, 419.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.97, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206182 reads in 402.098 CPU sec, 29.529 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492518, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 373, 6612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19262)
[0000][PE] mean and std.dev: (1906.46, 2628.79)
[0000][PE] low and high boundaries for proper pairs: (1, 25587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.85, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 424.631 CPU sec, 36.813 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 491943, 11, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.91, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 739, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8845)
[0000][PE] mean and std.dev: (1457.91, 1575.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11659)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 403.467 CPU sec, 30.894 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492334, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.14, 81.37)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 377, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (746.08, 560.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 419.039 CPU sec, 29.872 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 492802, 10, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 272, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 937)
[0000][PE] mean and std.dev: (279.56, 150.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.91, 81.33)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (336, 1258, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7413)
[0000][PE] mean and std.dev: (1494.30, 1600.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9772)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 404.103 CPU sec, 33.172 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492772, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 267, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (344.82, 287.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.98, 81.38)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (563, 1491, 4534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12476)
[0000][PE] mean and std.dev: (2260.83, 2553.76)
[0000][PE] low and high boundaries for proper pairs: (1, 16447)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 621, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2001)
[0000][PE] mean and std.dev: (695.27, 438.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 401.997 CPU sec, 28.536 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 491922, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 378, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (909.31, 1174.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.17, 81.45)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (288, 893, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7212)
[0000][PE] mean and std.dev: (1194.10, 1445.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9520)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 412.116 CPU sec, 34.838 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492213, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.05, 81.41)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 398.772 CPU sec, 26.889 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492544, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.66, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 401, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (795.43, 810.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 409.935 CPU sec, 30.967 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492892, 16, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 226, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 697)
[0000][PE] mean and std.dev: (232.17, 118.83)
[0000][PE] low and high boundaries for proper pairs: (1, 879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.81, 81.24)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (201, 806, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (710.43, 602.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5809)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 376, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (608.85, 553.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 399.569 CPU sec, 28.641 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1206154
	[0000][ M::kt_pipeline] read 1206154 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492653, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 369, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (434.20, 329.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.03, 81.32)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 599, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1933)
[0000][PE] mean and std.dev: (563.42, 359.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 405.172 CPU sec, 33.481 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492611, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 168, 289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 569)
[0000][PE] mean and std.dev: (213.40, 79.88)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.05, 81.19)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 1207, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1313.73, 1544.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206154 reads in 402.906 CPU sec, 29.501 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492271, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 225, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 777)
[0000][PE] mean and std.dev: (227.56, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.86, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 405.619 CPU sec, 32.427 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492341, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 249, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (50, 410)
[0000][PE] mean and std.dev: (227.78, 73.12)
[0000][PE] low and high boundaries for proper pairs: (1, 520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.66, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (672, 1286, 3641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9579)
[0000][PE] mean and std.dev: (1860.50, 1483.04)
[0000][PE] low and high boundaries for proper pairs: (1, 12548)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 404, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5967)
[0000][PE] mean and std.dev: (648.12, 668.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 406.881 CPU sec, 30.397 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492439, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 225, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (269.30, 169.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.79, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 295, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1254)
[0000][PE] mean and std.dev: (354.40, 273.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 430.869 CPU sec, 29.487 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493132, 13, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 359, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (473.92, 475.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.80, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (501, 1366, 4405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12213)
[0000][PE] mean and std.dev: (1969.31, 1705.89)
[0000][PE] low and high boundaries for proper pairs: (1, 16117)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 425.331 CPU sec, 37.125 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492681, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 201, 225)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 305)
[0000][PE] mean and std.dev: (189.25, 40.28)
[0000][PE] low and high boundaries for proper pairs: (28, 350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.44, 81.31)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 309, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (451.08, 374.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 430.743 CPU sec, 35.287 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492306, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 812, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (885.73, 917.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.44, 81.22)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (307, 1379, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1097.89, 809.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 427.499 CPU sec, 30.285 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492121, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.52, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 409.515 CPU sec, 27.630 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492116, 18, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 650, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (522.44, 370.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.62, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (100, 1178, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (881.25, 848.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7320)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 279, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2848)
[0000][PE] mean and std.dev: (523.10, 664.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 423.138 CPU sec, 32.987 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492768, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 287, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (533.64, 503.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.35, 81.24)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 283, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 598)
[0000][PE] mean and std.dev: (254.44, 90.01)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 424.485 CPU sec, 29.599 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492105, 6, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.39, 81.25)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 414.913 CPU sec, 32.062 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492536, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.36, 81.25)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 423.976 CPU sec, 31.380 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1206254
	[0000][ M::kt_pipeline] read 1206254 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492804, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 219, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (208.44, 132.30)
[0000][PE] low and high boundaries for proper pairs: (1, 802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.20, 81.33)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 423.613 CPU sec, 29.122 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492590, 7, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.60, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 283, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 672)
[0000][PE] mean and std.dev: (254.69, 101.32)
[0000][PE] low and high boundaries for proper pairs: (1, 816)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206254 reads in 418.292 CPU sec, 34.812 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 491872, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.50, 81.78)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 332, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (337.70, 327.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 424.870 CPU sec, 35.959 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1206566
	[0000][ M::kt_pipeline] read 1206566 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492250, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 230, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 393)
[0000][PE] mean and std.dev: (221.46, 58.80)
[0000][PE] low and high boundaries for proper pairs: (1, 460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.37, 81.44)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 672, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (941.18, 798.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 417.863 CPU sec, 28.738 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492490, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (364.06, 81.55)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206566 reads in 417.535 CPU sec, 33.787 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492637, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 384, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (614.22, 691.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (364.12, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (157, 331, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (484.70, 417.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (141, 332, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (562.85, 628.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 419.580 CPU sec, 32.942 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492003, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.11, 81.33)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 315, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (694.38, 800.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 421.987 CPU sec, 28.742 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 491796, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 236, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (221.30, 52.68)
[0000][PE] low and high boundaries for proper pairs: (1, 686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.11, 81.41)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 360, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (527.15, 400.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 423.499 CPU sec, 31.456 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492725, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 359, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (446.50, 352.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.34, 81.25)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 409.394 CPU sec, 28.153 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492661, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 305, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 551)
[0000][PE] mean and std.dev: (225.91, 91.06)
[0000][PE] low and high boundaries for proper pairs: (1, 663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.09, 81.45)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 422.857 CPU sec, 28.782 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492856, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 343, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1709)
[0000][PE] mean and std.dev: (458.82, 300.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.72, 81.42)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 431.569 CPU sec, 31.281 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492824, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 240, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (431.73, 522.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.71, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 269, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (503.06, 523.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 421.964 CPU sec, 33.699 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492704, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 257, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (747.00, 805.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.68, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 417.984 CPU sec, 30.343 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492598, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.90, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 980, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (824.00, 479.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 411.549 CPU sec, 28.622 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1206148
	[0000][ M::kt_pipeline] read 1206148 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493104, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 266, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (293.25, 177.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.87, 81.33)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 426.752 CPU sec, 34.352 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492818, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 252, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1261)
[0000][PE] mean and std.dev: (317.83, 259.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.84, 81.28)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 1071, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1198.78, 1229.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206148 reads in 422.593 CPU sec, 29.421 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206114
	[0000][ M::kt_pipeline] read 1206114 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 493125, 8, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.84, 81.24)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 529, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (608.69, 547.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3190)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 431.870 CPU sec, 33.099 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206180
	[0000][ M::kt_pipeline] read 1206180 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492663, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 489, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (648.54, 599.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.84, 81.21)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206114 reads in 423.274 CPU sec, 32.623 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492470, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 216, 284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 510)
[0000][PE] mean and std.dev: (220.20, 70.67)
[0000][PE] low and high boundaries for proper pairs: (1, 623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.98, 81.23)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206180 reads in 406.717 CPU sec, 27.224 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492773, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.71, 81.26)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 422.229 CPU sec, 33.198 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206162
	[0000][ M::kt_pipeline] read 1206162 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492660, 12, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.59, 81.17)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (434, 858, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (588.10, 406.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 364, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (642.92, 547.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 417.732 CPU sec, 27.990 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206170
	[0000][ M::kt_pipeline] read 1206170 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492790, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 432, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (780.92, 699.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.84, 81.17)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 803, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (740.89, 591.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206162 reads in 429.430 CPU sec, 32.890 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492508, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.90, 81.18)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 384, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (643.10, 770.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206170 reads in 425.751 CPU sec, 35.972 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493044, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 242, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (450.70, 436.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.07, 81.04)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 418.160 CPU sec, 27.767 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206260
	[0000][ M::kt_pipeline] read 1206260 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492317, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 277, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1443)
[0000][PE] mean and std.dev: (266.55, 150.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.98, 81.25)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (567, 807, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6864)
[0000][PE] mean and std.dev: (1166.67, 982.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8963)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 867, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (577.88, 317.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 419.092 CPU sec, 33.499 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 493015, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 223, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1313)
[0000][PE] mean and std.dev: (296.13, 251.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.95, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 367, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1678)
[0000][PE] mean and std.dev: (468.55, 453.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 338, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (391.12, 298.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206260 reads in 422.716 CPU sec, 30.049 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492338, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 204, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (506.20, 682.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 619)
[0000][PE] mean and std.dev: (363.74, 80.87)
[0000][PE] low and high boundaries for proper pairs: (7, 721)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 389, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (600.00, 484.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 438.255 CPU sec, 33.851 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206186
	[0000][ M::kt_pipeline] read 1206186 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492171, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 245, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1601)
[0000][PE] mean and std.dev: (257.56, 163.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.57, 81.02)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 330, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (334.38, 112.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 439.234 CPU sec, 34.819 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492576, 14, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.82, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (686, 1565, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6890)
[0000][PE] mean and std.dev: (1873.57, 1726.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8958)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 239, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1877)
[0000][PE] mean and std.dev: (373.00, 354.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2445)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206186 reads in 426.457 CPU sec, 31.242 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492662, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 345, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (809.59, 995.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.57, 80.92)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 594, 3496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10162)
[0000][PE] mean and std.dev: (2242.36, 3039.68)
[0000][PE] low and high boundaries for proper pairs: (1, 14401)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 432.655 CPU sec, 29.653 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 493654, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 203, 263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 491)
[0000][PE] mean and std.dev: (180.08, 57.84)
[0000][PE] low and high boundaries for proper pairs: (1, 605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.63, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1016, 1121, 2886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6626)
[0000][PE] mean and std.dev: (1785.64, 1589.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8496)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (114, 247, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (289.25, 280.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 433.222 CPU sec, 30.540 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1206130
	[0000][ M::kt_pipeline] read 1206130 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493210, 11, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.84, 80.98)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (415, 518, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2395)
[0000][PE] mean and std.dev: (527.11, 330.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 362, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (423.67, 298.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3116)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 445.597 CPU sec, 38.444 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492494, 10, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.58, 80.51)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (205, 717, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (918.80, 908.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 279, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 735)
[0000][PE] mean and std.dev: (283.60, 89.52)
[0000][PE] low and high boundaries for proper pairs: (1, 909)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206130 reads in 428.690 CPU sec, 30.376 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492441, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 194, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 560)
[0000][PE] mean and std.dev: (192.23, 74.08)
[0000][PE] low and high boundaries for proper pairs: (1, 689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.39, 80.71)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 607, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1449)
[0000][PE] mean and std.dev: (499.89, 264.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1833)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 617, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (742.40, 753.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 441.398 CPU sec, 38.983 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206170
	[0000][ M::kt_pipeline] read 1206170 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492463, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 415, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1386)
[0000][PE] mean and std.dev: (329.00, 176.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.51, 80.83)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (155, 230, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2297)
[0000][PE] mean and std.dev: (492.27, 422.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3011)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 434.609 CPU sec, 37.162 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492567, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.91, 80.92)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 390, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1573)
[0000][PE] mean and std.dev: (410.33, 202.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1982)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206170 reads in 431.312 CPU sec, 31.567 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206306
	[0000][ M::kt_pipeline] read 1206306 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 492424, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 266, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (532.84, 504.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.63, 80.95)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 353, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (560.20, 386.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 422.207 CPU sec, 29.809 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492571, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.77, 81.00)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 701, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9571)
[0000][PE] mean and std.dev: (2184.09, 2889.32)
[0000][PE] low and high boundaries for proper pairs: (1, 13741)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206306 reads in 429.682 CPU sec, 36.972 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492387, 13, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 236, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (509.44, 571.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.57, 80.92)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (135, 605, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (700.69, 665.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 423.980 CPU sec, 29.116 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492224, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 260, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (628.83, 724.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.93, 81.15)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 431.648 CPU sec, 31.204 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1206230
	[0000][ M::kt_pipeline] read 1206230 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492398, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 331, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (274.27, 98.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 620)
[0000][PE] mean and std.dev: (364.72, 80.88)
[0000][PE] low and high boundaries for proper pairs: (8, 722)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 299, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 822)
[0000][PE] mean and std.dev: (272.21, 86.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 424.703 CPU sec, 25.529 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492470, 14, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 274, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 778)
[0000][PE] mean and std.dev: (286.11, 71.99)
[0000][PE] low and high boundaries for proper pairs: (1, 956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.08, 81.16)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 570, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (557.58, 607.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3185)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 353, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2647)
[0000][PE] mean and std.dev: (612.80, 661.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206230 reads in 433.381 CPU sec, 26.317 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206260
	[0000][ M::kt_pipeline] read 1206260 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492380, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 614, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (897.62, 1014.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.16, 81.00)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 210, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (222.25, 87.53)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 433.288 CPU sec, 26.123 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492408, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 226, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (658.14, 867.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.05, 81.28)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206260 reads in 421.954 CPU sec, 26.171 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492082, 12, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.98, 81.01)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1148, 1994, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1986.00, 1213.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 246, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (725.77, 998.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 403.873 CPU sec, 24.572 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492101, 13, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1142, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5417)
[0000][PE] mean and std.dev: (1120.89, 884.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.95, 81.05)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (302, 1281, 3769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10703)
[0000][PE] mean and std.dev: (2029.15, 1961.99)
[0000][PE] low and high boundaries for proper pairs: (1, 14170)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 401, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1321)
[0000][PE] mean and std.dev: (459.60, 281.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 409.881 CPU sec, 24.610 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492053, 11, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.04, 81.37)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 121, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (160.44, 158.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1581)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 413.746 CPU sec, 25.807 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492939, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 223, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1883)
[0000][PE] mean and std.dev: (329.00, 323.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 367, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.36, 81.31)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (118, 315, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1405)
[0000][PE] mean and std.dev: (220.50, 197.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1834)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 273, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 673)
[0000][PE] mean and std.dev: (257.67, 72.38)
[0000][PE] low and high boundaries for proper pairs: (1, 825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 403.350 CPU sec, 24.116 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 491819, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 472, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (597.52, 480.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.89, 81.22)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (118, 830, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (796.91, 759.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 404.074 CPU sec, 25.174 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492600, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (616, 616, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (861.27, 607.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.66, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 293, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 829)
[0000][PE] mean and std.dev: (253.00, 90.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 406.987 CPU sec, 24.747 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492094, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 293, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (261.60, 82.78)
[0000][PE] low and high boundaries for proper pairs: (1, 943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.88, 81.13)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 412, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (582.65, 537.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 414.065 CPU sec, 26.554 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492138, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.69, 81.56)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 411.085 CPU sec, 24.726 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492747, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 288, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 769)
[0000][PE] mean and std.dev: (247.91, 118.21)
[0000][PE] low and high boundaries for proper pairs: (1, 957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.90, 81.21)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 410.984 CPU sec, 25.133 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 491664, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.87, 81.28)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 648, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (914.91, 1026.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6381)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 403.776 CPU sec, 24.485 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 492585, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 280, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1457)
[0000][PE] mean and std.dev: (334.39, 273.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.74, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 518, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (550.90, 392.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 422.860 CPU sec, 25.459 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 492396, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 198, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 662)
[0000][PE] mean and std.dev: (212.62, 103.18)
[0000][PE] low and high boundaries for proper pairs: (1, 831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.81, 81.40)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 347, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (419.91, 325.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 410.099 CPU sec, 24.723 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 491810, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.02, 81.08)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (330, 845, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1124.30, 914.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8038)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 406.745 CPU sec, 25.731 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492783, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.93, 81.25)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 431, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (755.54, 512.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 407.799 CPU sec, 24.843 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 491867, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 205, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (202.29, 64.94)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.75, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 371, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (462.00, 383.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 409.266 CPU sec, 24.783 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492561, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.95, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 418.654 CPU sec, 26.126 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 492588, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.95, 81.45)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 311, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1298)
[0000][PE] mean and std.dev: (350.93, 186.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1646)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 405.878 CPU sec, 24.812 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492166, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 318, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1843)
[0000][PE] mean and std.dev: (421.10, 241.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (365.03, 81.51)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 309, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (619.71, 617.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 409.397 CPU sec, 25.236 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492678, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 186, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (223.56, 103.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.81, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (346, 1514, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (965.62, 601.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 411.496 CPU sec, 25.180 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492182, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 239, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2181)
[0000][PE] mean and std.dev: (491.40, 491.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.62, 81.53)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 405.619 CPU sec, 23.639 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492866, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.54, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 408.122 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492635, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.59, 81.50)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 403.115 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492764, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 318, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7862)
[0000][PE] mean and std.dev: (1272.17, 1622.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.48, 81.33)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 445, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1051.90, 1221.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 369, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (613.55, 446.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 402.656 CPU sec, 22.935 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492617, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 340, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7246)
[0000][PE] mean and std.dev: (1229.00, 1550.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.44, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 569, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (452.75, 304.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 405.995 CPU sec, 23.321 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492293, 9, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.38, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 1769, 5155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14925)
[0000][PE] mean and std.dev: (3002.00, 3284.39)
[0000][PE] low and high boundaries for proper pairs: (1, 19810)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 416.682 CPU sec, 23.849 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492369, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 337, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 656)
[0000][PE] mean and std.dev: (264.36, 86.33)
[0000][PE] low and high boundaries for proper pairs: (1, 798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.64, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 449, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (689.87, 586.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 401.051 CPU sec, 23.082 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492338, 11, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.37, 81.34)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1278, 4913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13943)
[0000][PE] mean and std.dev: (2368.18, 2488.72)
[0000][PE] low and high boundaries for proper pairs: (1, 18458)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 409.164 CPU sec, 23.327 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492222, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 574, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (726.75, 661.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.86, 81.35)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 375, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1872)
[0000][PE] mean and std.dev: (580.21, 477.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 408.090 CPU sec, 23.170 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492978, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 282, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 919)
[0000][PE] mean and std.dev: (243.08, 108.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.59, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 240, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (335.85, 279.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 400.682 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492489, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 182, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1435)
[0000][PE] mean and std.dev: (298.00, 208.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.55, 81.65)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 511, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (774.75, 680.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 358, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1652)
[0000][PE] mean and std.dev: (439.09, 273.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 407.191 CPU sec, 23.253 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492787, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 343, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (799.50, 694.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.30, 81.08)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 403.605 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 492297, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 350, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (654.25, 501.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 623)
[0000][PE] mean and std.dev: (364.70, 81.28)
[0000][PE] low and high boundaries for proper pairs: (5, 726)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 678, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1731)
[0000][PE] mean and std.dev: (579.08, 402.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 405.448 CPU sec, 23.159 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1206254
	[0000][ M::kt_pipeline] read 1206254 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 492747, 13, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.31, 81.28)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 1185, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1125.92, 893.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7562)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 439, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (523.58, 481.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 403.431 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492774, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 777, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (655.67, 455.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.36, 81.59)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206254 reads in 404.525 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492280, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 205, 236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 414)
[0000][PE] mean and std.dev: (174.12, 45.84)
[0000][PE] low and high boundaries for proper pairs: (1, 503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 625)
[0000][PE] mean and std.dev: (364.72, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 1069, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2566)
[0000][PE] mean and std.dev: (729.78, 380.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 410.884 CPU sec, 23.742 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492336, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.24, 81.31)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (145, 229, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (567.46, 557.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 408.326 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492692, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 329, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (398.40, 315.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.35, 81.30)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 402.559 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492727, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.12, 81.27)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 366, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (624.50, 565.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 400.420 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 491963, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 322, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (381.17, 293.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.06, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 260, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (316.88, 236.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 400.006 CPU sec, 22.558 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 491911, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 354, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (392.00, 320.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.40, 81.26)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 405.499 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492669, 11, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.22, 81.27)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (369, 881, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1125.55, 1197.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1023, 4999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14329)
[0000][PE] mean and std.dev: (2287.20, 2747.70)
[0000][PE] low and high boundaries for proper pairs: (1, 18994)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 395.665 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492936, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.22, 81.08)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 400.226 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492751, 14, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.13, 81.23)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (442, 1387, 3253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8875)
[0000][PE] mean and std.dev: (2216.86, 2395.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11801)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 360, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (443.92, 318.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2868)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 406.112 CPU sec, 23.378 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492462, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 408, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (770.07, 781.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.92, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 416.352 CPU sec, 24.032 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206158
	[0000][ M::kt_pipeline] read 1206158 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492214, 10, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.30, 81.29)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 2052, 4163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12071)
[0000][PE] mean and std.dev: (2148.30, 2057.19)
[0000][PE] low and high boundaries for proper pairs: (1, 16025)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 530, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (650.60, 390.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3192)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 411.983 CPU sec, 24.129 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492457, 11, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.78, 81.49)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (570, 824, 3696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9948)
[0000][PE] mean and std.dev: (1688.27, 1905.50)
[0000][PE] low and high boundaries for proper pairs: (1, 13074)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206158 reads in 415.228 CPU sec, 23.519 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492101, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 290, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (297.44, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.10, 81.40)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 481, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6514)
[0000][PE] mean and std.dev: (1090.86, 1157.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 413.101 CPU sec, 23.275 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492729, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 210, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 557)
[0000][PE] mean and std.dev: (214.83, 64.83)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.12, 81.34)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (105, 259, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (659.38, 883.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 423.705 CPU sec, 23.895 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492638, 8, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.02, 81.21)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 414.940 CPU sec, 23.398 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 491909, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.64, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 362, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (769.90, 800.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 418.053 CPU sec, 23.561 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1206188
	[0000][ M::kt_pipeline] read 1206188 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492580, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 262, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (525.40, 503.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.55, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 235, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 803)
[0000][PE] mean and std.dev: (223.18, 95.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 421.246 CPU sec, 23.741 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 492425, 9, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.68, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206188 reads in 420.697 CPU sec, 23.663 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492139, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.33, 81.30)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 237, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (678.85, 682.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6120)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 434.222 CPU sec, 24.452 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492899, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 262, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (270.70, 161.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.54, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 277, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (264.20, 89.87)
[0000][PE] low and high boundaries for proper pairs: (1, 678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 458.982 CPU sec, 38.225 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1206204
	[0000][ M::kt_pipeline] read 1206204 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492851, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 151, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 653)
[0000][PE] mean and std.dev: (158.90, 68.34)
[0000][PE] low and high boundaries for proper pairs: (1, 834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.67, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 475, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (679.32, 484.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 421.247 CPU sec, 25.965 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492980, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.77, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206204 reads in 412.292 CPU sec, 24.043 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492747, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 298, 398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 804)
[0000][PE] mean and std.dev: (278.00, 143.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.42, 81.10)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (536, 1298, 3790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10298)
[0000][PE] mean and std.dev: (1934.90, 1685.86)
[0000][PE] low and high boundaries for proper pairs: (1, 13552)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 299, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (452.80, 388.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 413.318 CPU sec, 24.228 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492398, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 295, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (526.31, 549.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.41, 81.22)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 309, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 621)
[0000][PE] mean and std.dev: (291.50, 61.61)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 414.188 CPU sec, 23.586 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1206162
	[0000][ M::kt_pipeline] read 1206162 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492380, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 514, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1487)
[0000][PE] mean and std.dev: (569.64, 341.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.39, 81.10)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 415.664 CPU sec, 23.431 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492825, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.66, 81.30)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 1010, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7096)
[0000][PE] mean and std.dev: (1320.00, 1649.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9303)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206162 reads in 421.081 CPU sec, 23.754 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1206196
	[0000][ M::kt_pipeline] read 1206196 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492980, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.53, 81.06)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 420.681 CPU sec, 23.720 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1206188
	[0000][ M::kt_pipeline] read 1206188 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493108, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.59, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 395, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (751.64, 765.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206196 reads in 418.233 CPU sec, 23.848 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492786, 7, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.56, 81.32)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206188 reads in 416.224 CPU sec, 23.504 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1206112
	[0000][ M::kt_pipeline] read 1206112 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492690, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 308, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1768)
[0000][PE] mean and std.dev: (461.93, 295.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.48, 81.05)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 391, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1023)
[0000][PE] mean and std.dev: (358.27, 181.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 419.822 CPU sec, 23.824 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492618, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.28, 80.98)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (154, 293, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1801)
[0000][PE] mean and std.dev: (360.13, 280.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2350)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206112 reads in 411.072 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206148
	[0000][ M::kt_pipeline] read 1206148 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492429, 10, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.13, 81.19)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (525, 2057, 3288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8814)
[0000][PE] mean and std.dev: (1770.22, 1360.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11577)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 408.391 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492747, 9, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.45, 80.93)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 269, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1020)
[0000][PE] mean and std.dev: (274.31, 172.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1310)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206148 reads in 413.254 CPU sec, 23.423 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 493127, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 250, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (400.54, 318.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.41, 81.04)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 361, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (881.67, 881.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7073)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 274, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (623.40, 766.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 414.784 CPU sec, 23.576 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493061, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 507, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (943.29, 995.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 619)
[0000][PE] mean and std.dev: (363.56, 80.81)
[0000][PE] low and high boundaries for proper pairs: (7, 721)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 174, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (173.70, 63.22)
[0000][PE] low and high boundaries for proper pairs: (1, 522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 413.851 CPU sec, 23.438 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492923, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.39, 81.02)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 422.790 CPU sec, 23.973 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493266, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.52, 80.94)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 338, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (666.00, 653.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 414.494 CPU sec, 23.359 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493441, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.73, 81.06)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 417.518 CPU sec, 23.580 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492541, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 225, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (230.11, 82.44)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 619)
[0000][PE] mean and std.dev: (363.71, 80.87)
[0000][PE] low and high boundaries for proper pairs: (7, 721)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 422.217 CPU sec, 23.774 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492767, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 943, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6692)
[0000][PE] mean and std.dev: (1319.33, 1566.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.06, 80.93)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 413.707 CPU sec, 23.267 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1206244
	[0000][ M::kt_pipeline] read 1206244 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493010, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.63, 80.98)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 374, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2313)
[0000][PE] mean and std.dev: (589.40, 358.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2963)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 421.790 CPU sec, 23.902 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492352, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.83, 81.00)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 258, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (650.73, 560.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206244 reads in 418.156 CPU sec, 23.592 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492235, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.79, 81.17)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 419.829 CPU sec, 23.630 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492721, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 167, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 839)
[0000][PE] mean and std.dev: (286.55, 226.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.83, 80.98)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 415.800 CPU sec, 23.400 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492342, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 353, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1194)
[0000][PE] mean and std.dev: (419.92, 204.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.14, 81.03)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 458, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (501.73, 375.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 747, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (804.00, 535.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 423.214 CPU sec, 23.984 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492833, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 192, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1636)
[0000][PE] mean and std.dev: (295.69, 234.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.04, 81.08)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (424, 1041, 3111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8485)
[0000][PE] mean and std.dev: (1435.33, 1330.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11172)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 413.724 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492722, 13, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 619)
[0000][PE] mean and std.dev: (363.72, 80.91)
[0000][PE] low and high boundaries for proper pairs: (7, 721)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (237, 674, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (855.75, 847.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 413.653 CPU sec, 23.479 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492962, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 878, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (715.82, 508.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.93, 81.09)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 410.345 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493182, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 697, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (470.78, 306.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.95, 81.11)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 311, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2439)
[0000][PE] mean and std.dev: (538.58, 494.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 408.053 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492347, 10, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.65, 81.23)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 751, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1058.70, 1317.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 408.524 CPU sec, 23.004 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1206186
	[0000][ M::kt_pipeline] read 1206186 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492649, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 336, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (546.33, 566.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.77, 81.11)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (137, 212, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5651)
[0000][PE] mean and std.dev: (1110.54, 1635.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 418.035 CPU sec, 23.567 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492412, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.01, 80.96)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 368, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (680.00, 635.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206186 reads in 407.817 CPU sec, 22.971 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492862, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 366, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (364.02, 81.00)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 418.634 CPU sec, 23.579 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492858, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.94, 81.19)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 408.602 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493071, 11, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.86, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (336, 564, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7584)
[0000][PE] mean and std.dev: (1719.55, 2106.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10146)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 417.453 CPU sec, 23.569 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492800, 7, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.77, 81.27)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 411.914 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492501, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.84, 81.13)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 335, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (541.62, 520.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 406.351 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1206582
	[0000][ M::kt_pipeline] read 1206582 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492419, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.87, 81.17)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (278, 556, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8579)
[0000][PE] mean and std.dev: (2180.40, 2885.84)
[0000][PE] low and high boundaries for proper pairs: (1, 13724)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 405.115 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492413, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.86, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 282, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1271)
[0000][PE] mean and std.dev: (366.70, 269.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1616)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206582 reads in 403.230 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492948, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 495, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (465.09, 291.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.72, 81.42)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 405.788 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492545, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 573, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (929.30, 940.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.59, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 417.275 CPU sec, 23.520 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492403, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 672, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (698.57, 438.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.89, 81.23)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 243, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1866)
[0000][PE] mean and std.dev: (344.11, 250.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 399.984 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492536, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 396, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (615.83, 507.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.78, 81.39)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (125, 301, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1343)
[0000][PE] mean and std.dev: (297.92, 181.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 405.498 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492328, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 305, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1815)
[0000][PE] mean and std.dev: (465.60, 330.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.73, 81.43)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 467, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (556.69, 624.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 401.379 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492954, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 234, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (307.46, 254.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.54, 81.46)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 427, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (530.22, 390.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 401.062 CPU sec, 22.545 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492511, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 298, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2449)
[0000][PE] mean and std.dev: (309.10, 245.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.80, 81.58)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 686, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (590.44, 412.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 399.943 CPU sec, 22.496 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1206610
	[0000][ M::kt_pipeline] read 1206610 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492585, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.90, 81.28)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 409.297 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492359, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 292, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (555.71, 619.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.64, 81.48)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 620, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (584.11, 610.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 378, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1950)
[0000][PE] mean and std.dev: (491.50, 414.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206610 reads in 405.017 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1206642
	[0000][ M::kt_pipeline] read 1206642 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 493042, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 218, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (201.38, 77.79)
[0000][PE] low and high boundaries for proper pairs: (1, 851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.68, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 769, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1176.91, 1329.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7225)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 409.302 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492305, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 846, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (950.70, 880.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.77, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206642 reads in 418.022 CPU sec, 23.684 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492618, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 233, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1366)
[0000][PE] mean and std.dev: (377.25, 312.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.64, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 393, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (500.91, 332.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 412.408 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 492524, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 361, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (318.06, 149.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.35, 81.38)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 361, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1810)
[0000][PE] mean and std.dev: (492.10, 419.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 413.575 CPU sec, 23.412 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493065, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 804, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (661.00, 502.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.56, 81.35)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 518, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (484.80, 326.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 415.072 CPU sec, 23.530 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492926, 8, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.30, 81.47)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 352, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (526.38, 400.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2559)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 417.221 CPU sec, 23.585 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492775, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 307, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (815.08, 893.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.48, 81.41)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (276, 510, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (715.57, 652.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 419.843 CPU sec, 23.722 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492860, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 282, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 909)
[0000][PE] mean and std.dev: (275.30, 79.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.36, 81.27)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 267, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (360.25, 273.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 430.807 CPU sec, 25.502 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 492578, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 290, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1194)
[0000][PE] mean and std.dev: (257.07, 135.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.35, 81.35)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 643, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1964)
[0000][PE] mean and std.dev: (545.11, 388.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2537)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 441.682 CPU sec, 29.015 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 493089, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 619)
[0000][PE] mean and std.dev: (363.69, 81.08)
[0000][PE] low and high boundaries for proper pairs: (7, 721)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 418.679 CPU sec, 24.673 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206156
	[0000][ M::kt_pipeline] read 1206156 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492792, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 245, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2727)
[0000][PE] mean and std.dev: (476.17, 429.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.75, 81.36)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 991, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (1045.07, 970.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 418.316 CPU sec, 23.659 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492035, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 333, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2892)
[0000][PE] mean and std.dev: (632.92, 524.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.79, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (452, 937, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2261)
[0000][PE] mean and std.dev: (627.25, 317.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2864)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 182, 255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 439)
[0000][PE] mean and std.dev: (208.00, 89.27)
[0000][PE] low and high boundaries for proper pairs: (1, 565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206156 reads in 409.795 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492782, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 238, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 554)
[0000][PE] mean and std.dev: (212.50, 68.32)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 622)
[0000][PE] mean and std.dev: (363.89, 81.22)
[0000][PE] low and high boundaries for proper pairs: (4, 725)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 412.275 CPU sec, 23.251 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 492156, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (102, 253, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5832)
[0000][PE] mean and std.dev: (549.21, 657.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 624)
[0000][PE] mean and std.dev: (363.47, 81.45)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 402, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1396)
[0000][PE] mean and std.dev: (281.88, 164.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 410.739 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492909, 10, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.33, 81.18)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (421, 1016, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1431.90, 1577.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8601)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 403, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (728.82, 738.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 431.510 CPU sec, 28.323 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492444, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 388, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (579.75, 659.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.53, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 434.501 CPU sec, 29.114 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492929, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 250, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (459.08, 379.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.01, 81.37)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 433.381 CPU sec, 28.664 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 492602, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.88, 81.38)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 339, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 937)
[0000][PE] mean and std.dev: (256.50, 109.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1184)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 417.522 CPU sec, 23.544 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492497, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 409, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (692.92, 615.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.29, 81.23)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 415.001 CPU sec, 23.534 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 493052, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 398, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5434)
[0000][PE] mean and std.dev: (1037.09, 1212.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.10, 81.34)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (713, 1065, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (910.70, 468.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3061)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 418.945 CPU sec, 23.855 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492735, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.45, 81.30)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 421.732 CPU sec, 24.222 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492353, 12, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.22, 81.33)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (598, 1188, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1223.27, 955.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 329, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1348)
[0000][PE] mean and std.dev: (302.11, 132.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1732)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 421.961 CPU sec, 24.121 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492678, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 318, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (542.50, 582.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.21, 81.21)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 461.633 CPU sec, 38.005 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492686, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.05, 81.23)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 449.062 CPU sec, 32.897 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492352, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.41, 81.32)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (463.58, 412.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 432.115 CPU sec, 25.741 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493150, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 256, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (415.73, 416.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.15, 81.23)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 428.430 CPU sec, 26.063 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492860, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 1151, 2758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7772)
[0000][PE] mean and std.dev: (1360.75, 1136.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.17, 81.29)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 437.007 CPU sec, 27.279 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492720, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 692, 3357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9677)
[0000][PE] mean and std.dev: (1372.69, 1487.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.15, 81.20)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 824, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6107)
[0000][PE] mean and std.dev: (1494.67, 1953.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9311)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 434.429 CPU sec, 26.113 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206228
	[0000][ M::kt_pipeline] read 1206228 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492565, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 491, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (658.55, 488.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.11, 81.32)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 419, 3914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11176)
[0000][PE] mean and std.dev: (1762.00, 1899.99)
[0000][PE] low and high boundaries for proper pairs: (1, 14807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 443.642 CPU sec, 27.388 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492885, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 262, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 755)
[0000][PE] mean and std.dev: (266.40, 79.11)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.08, 81.25)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 517, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2183)
[0000][PE] mean and std.dev: (565.44, 449.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206228 reads in 448.122 CPU sec, 30.831 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206200
	[0000][ M::kt_pipeline] read 1206200 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 492770, 9, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.73, 81.37)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 744, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7845)
[0000][PE] mean and std.dev: (1190.09, 1108.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10357)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 446.341 CPU sec, 33.666 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 492937, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 244, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 976)
[0000][PE] mean and std.dev: (269.10, 179.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.85, 81.15)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 216, 3340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9944)
[0000][PE] mean and std.dev: (1349.30, 1750.58)
[0000][PE] low and high boundaries for proper pairs: (1, 13246)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 349, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (750.87, 768.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206200 reads in 426.332 CPU sec, 26.839 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492947, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 1194, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5844)
[0000][PE] mean and std.dev: (1070.56, 950.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.59, 81.40)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (543, 949, 3176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8442)
[0000][PE] mean and std.dev: (1416.90, 1496.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11075)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 426.393 CPU sec, 27.542 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 492857, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 648, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (1028.17, 1281.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.83, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 1209, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5870)
[0000][PE] mean and std.dev: (942.67, 762.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7754)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 424.917 CPU sec, 27.046 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 492898, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.93, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 422.124 CPU sec, 26.430 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206236
	[0000][ M::kt_pipeline] read 1206236 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 492419, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 233, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 676)
[0000][PE] mean and std.dev: (269.60, 132.52)
[0000][PE] low and high boundaries for proper pairs: (1, 839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.96, 81.44)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 295, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 956)
[0000][PE] mean and std.dev: (299.42, 176.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 422.802 CPU sec, 25.971 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1206240
	[0000][ M::kt_pipeline] read 1206240 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492785, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.77, 81.34)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206236 reads in 419.926 CPU sec, 25.260 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1206228
	[0000][ M::kt_pipeline] read 1206228 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 492912, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 236, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (308.00, 253.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.76, 81.27)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 214, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1827)
[0000][PE] mean and std.dev: (245.82, 159.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206240 reads in 422.034 CPU sec, 25.009 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 492645, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 310, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (830.27, 1186.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.67, 81.26)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206228 reads in 419.516 CPU sec, 24.170 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492569, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.59, 81.16)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 421.106 CPU sec, 23.829 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492800, 12, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.65, 81.29)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 642, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (730.90, 517.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6178)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 422.004 CPU sec, 24.145 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 492945, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.86, 81.10)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 638, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (759.15, 712.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 415.841 CPU sec, 23.633 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 493545, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (115, 215, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (513.71, 605.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.94, 81.13)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 297, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2185)
[0000][PE] mean and std.dev: (518.38, 439.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 417.543 CPU sec, 23.756 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1206216
	[0000][ M::kt_pipeline] read 1206216 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492067, 13, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.76, 81.00)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (366, 865, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1432.08, 1399.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8870)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 431.458 CPU sec, 24.547 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1206244
	[0000][ M::kt_pipeline] read 1206244 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 492579, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.70, 81.25)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206216 reads in 428.448 CPU sec, 24.540 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 492718, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.74, 81.18)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 413, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10107)
[0000][PE] mean and std.dev: (1674.82, 1962.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13349)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206244 reads in 420.547 CPU sec, 23.990 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1206192
	[0000][ M::kt_pipeline] read 1206192 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 492652, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 408, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (515.36, 574.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.68, 80.89)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 287, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (600.58, 643.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 421.462 CPU sec, 24.310 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206234
	[0000][ M::kt_pipeline] read 1206234 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 493003, 8, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.72, 81.03)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 373, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (500.79, 422.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2815)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206192 reads in 420.277 CPU sec, 24.470 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493020, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 623)
[0000][PE] mean and std.dev: (362.73, 81.01)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206234 reads in 420.718 CPU sec, 24.573 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 493328, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 364, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 620)
[0000][PE] mean and std.dev: (362.68, 80.84)
[0000][PE] low and high boundaries for proper pairs: (2, 723)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 422.539 CPU sec, 24.868 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1206186
	[0000][ M::kt_pipeline] read 1206186 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 493312, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 411, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (368.90, 296.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.88, 80.96)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (115, 243, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4723)
[0000][PE] mean and std.dev: (676.23, 943.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 418.290 CPU sec, 25.073 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 126516691, nseq: 847642
	[0000][ M::kt_pipeline] read 847642 sequences (126516691 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 493227, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 265, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (225.45, 67.14)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 364, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (362.74, 80.91)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (370, 1283, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7501)
[0000][PE] mean and std.dev: (1576.45, 1304.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9878)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206186 reads in 419.264 CPU sec, 24.792 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 847642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 346227, 4, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 365, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 621)
[0000][PE] mean and std.dev: (363.14, 80.96)
[0000][PE] low and high boundaries for proper pairs: (3, 724)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 847642 reads in 297.639 CPU sec, 17.279 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.163806 MHz
Runtime profile:

	Time taken for main_mem function: 45384.21 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2273.74, (2273.74, 2273.74)
	Writing IO time (SAM) avg: 4888.93, (4888.93, 4888.93)
	Reading IO time (Reference Genome) avg: 14.62, (14.62, 14.62)
	Index read time avg: 16.66, (16.66, 16.66)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 45351.60
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 45344.27, (45344.27, 45344.27)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 15319.37, (15319.37, 15319.37)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 29816.24, (29816.24, 29816.24)
		SMEM compute avg: 9650.12, (9673.91, 9616.08)
		SAL compute avg: 6364.79, (6429.35, 6326.50)
				MEM_SA avg: 3044.71, (3066.52, 3024.73)

		BSW time, avg: 7958.03, (7975.14, 7934.86)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
