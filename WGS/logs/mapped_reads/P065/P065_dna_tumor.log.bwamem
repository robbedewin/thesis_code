Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000097 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514541, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 926, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (1238.94, 1150.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.25, 64.48)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1266, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1398.13, 729.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 342.772 CPU sec, 74.266 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514760, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 602, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (928.40, 893.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.49, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1338, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1404.36, 1086.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 330.802 CPU sec, 73.590 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515173, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 545, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (662.95, 536.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.40, 64.60)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 316, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (557.37, 535.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 324.317 CPU sec, 92.730 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515035, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1018, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1027.57, 796.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.34, 64.51)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1005, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (1125.32, 961.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 323.098 CPU sec, 76.587 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204852
	[0000][ M::kt_pipeline] read 1204852 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514975, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 245, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (830.92, 1084.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.47, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 328.101 CPU sec, 58.925 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515007, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (720, 1470, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6624)
[0000][PE] mean and std.dev: (1546.47, 1458.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.58, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 561, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (912.00, 852.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204852 reads in 325.208 CPU sec, 64.391 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515149, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 1279, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1504.45, 1179.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.57, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1253, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1583.83, 762.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 333.010 CPU sec, 53.083 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515232, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1401, 1424, 3355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7263)
[0000][PE] mean and std.dev: (2059.23, 1550.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.83, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1257, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (1140.45, 833.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 325.795 CPU sec, 50.274 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515305, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (929, 1371, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5489)
[0000][PE] mean and std.dev: (1384.31, 1076.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1601, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (1490.25, 873.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 321.932 CPU sec, 47.450 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514801, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 865, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (889.67, 630.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.70, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1100, 4026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10330)
[0000][PE] mean and std.dev: (2265.45, 2288.21)
[0000][PE] low and high boundaries for proper pairs: (1, 13482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 326.305 CPU sec, 51.385 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515182, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 215, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (169.25, 67.91)
[0000][PE] low and high boundaries for proper pairs: (1, 776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.80, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 937, 2957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8235)
[0000][PE] mean and std.dev: (1376.50, 1493.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 322.408 CPU sec, 49.209 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515322, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 338, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (763.07, 669.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.66, 64.95)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 1249, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5611)
[0000][PE] mean and std.dev: (1421.50, 1152.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 322.103 CPU sec, 49.792 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515513, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 782, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (931.23, 681.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.77, 64.70)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1590, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6770)
[0000][PE] mean and std.dev: (1688.92, 1079.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 325.012 CPU sec, 53.753 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515806, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 1365, 2500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7030)
[0000][PE] mean and std.dev: (1668.14, 1777.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.82, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1124, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (865.40, 472.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 326.723 CPU sec, 50.888 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515874, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.96, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1309, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1428.67, 1389.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8072)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 318.563 CPU sec, 53.760 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204910
	[0000][ M::kt_pipeline] read 1204910 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514971, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 678, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (759.85, 567.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.05, 64.74)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 988, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (827.67, 751.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 325.963 CPU sec, 49.828 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515509, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 1578, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7487)
[0000][PE] mean and std.dev: (1568.93, 1394.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.03, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1500, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4869)
[0000][PE] mean and std.dev: (1551.00, 990.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204910 reads in 325.878 CPU sec, 43.915 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515381, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 919, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (907.33, 575.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.94, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1299, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (1381.47, 861.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 335.775 CPU sec, 59.128 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204876
	[0000][ M::kt_pipeline] read 1204876 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515068, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 834, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (710.40, 472.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.98, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1272, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1502.81, 1126.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 318.338 CPU sec, 46.354 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515128, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 891, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1139.67, 1005.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.92, 64.72)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1430, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1231.94, 684.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204876 reads in 331.669 CPU sec, 47.433 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515090, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (676, 812, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4828)
[0000][PE] mean and std.dev: (1432.27, 1269.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.85, 64.56)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1241, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1136.54, 895.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 327.581 CPU sec, 48.291 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514694, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 1698, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1852.30, 1568.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.85, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1506, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6989)
[0000][PE] mean and std.dev: (1911.25, 1383.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 334.601 CPU sec, 50.105 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515596, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1147, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6468)
[0000][PE] mean and std.dev: (1062.25, 997.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.86, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 935, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4869)
[0000][PE] mean and std.dev: (1132.69, 871.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 326.369 CPU sec, 47.631 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204862
	[0000][ M::kt_pipeline] read 1204862 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515356, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 1162, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1146.29, 934.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.02, 64.77)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1755, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (1321.29, 628.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 331.383 CPU sec, 46.233 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204900
	[0000][ M::kt_pipeline] read 1204900 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515310, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (707, 899, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4745)
[0000][PE] mean and std.dev: (1075.82, 672.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204862 reads in 325.941 CPU sec, 47.534 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515007, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (620, 1285, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1208.90, 744.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.20, 64.79)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1500, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6751)
[0000][PE] mean and std.dev: (1637.89, 1484.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204900 reads in 334.316 CPU sec, 55.727 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515258, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 614, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (803.09, 780.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.22, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 318.376 CPU sec, 45.522 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515295, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.90, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1263, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (1057.79, 466.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 333.582 CPU sec, 46.296 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514873, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.04, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 334.937 CPU sec, 52.985 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514977, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1093, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1191.07, 895.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.29, 64.79)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1023, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (1056.80, 479.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 324.165 CPU sec, 47.556 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515395, 6, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.97, 64.46)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 942, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (1037.73, 914.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 325.075 CPU sec, 45.056 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515262, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1032, 2007, 4659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11913)
[0000][PE] mean and std.dev: (2332.50, 1710.07)
[0000][PE] low and high boundaries for proper pairs: (1, 15540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.99, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1173, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1370.67, 1071.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 321.037 CPU sec, 46.934 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515681, 4, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.90, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 849, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (828.47, 561.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 324.001 CPU sec, 41.483 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515355, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (802, 922, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (180, 1735)
[0000][PE] mean and std.dev: (913.50, 261.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.91, 64.67)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1537, 1840, 4281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9769)
[0000][PE] mean and std.dev: (2853.38, 2139.84)
[0000][PE] low and high boundaries for proper pairs: (1, 12513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 318.615 CPU sec, 54.592 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515361, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 1395, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7377)
[0000][PE] mean and std.dev: (1654.67, 1404.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.90, 64.67)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 444, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (514.82, 553.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 321.137 CPU sec, 49.822 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515708, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1166, 3304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8760)
[0000][PE] mean and std.dev: (1751.50, 1628.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.89, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 631, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (1188.50, 1245.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 326.117 CPU sec, 45.883 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515079, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.56, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (486, 1362, 3290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8898)
[0000][PE] mean and std.dev: (1822.06, 1542.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11702)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 325.939 CPU sec, 44.924 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515234, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 363, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (422.50, 301.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.77, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1424, 4010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10230)
[0000][PE] mean and std.dev: (2224.71, 1692.21)
[0000][PE] low and high boundaries for proper pairs: (1, 13340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 316.440 CPU sec, 38.634 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515333, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 996, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (999.00, 674.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.74, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1039, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (1211.64, 1069.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 323.359 CPU sec, 48.466 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515219, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 685, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (886.18, 841.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1853, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7147)
[0000][PE] mean and std.dev: (1857.83, 1463.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 317.563 CPU sec, 51.312 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515724, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (683, 1087, 3282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8480)
[0000][PE] mean and std.dev: (2013.18, 2201.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.63, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1094, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (974.17, 522.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 325.625 CPU sec, 51.716 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514867, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1201, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1090.67, 787.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.54, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1074, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (936.77, 553.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 343.310 CPU sec, 52.366 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515132, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1154, 1562, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1437.92, 798.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.75, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1606, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (1417.69, 855.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 326.892 CPU sec, 51.599 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514909, 5, 23)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.76, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 756, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1119.78, 987.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 324.802 CPU sec, 58.310 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515719, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 615, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (873.56, 842.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1414, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8227)
[0000][PE] mean and std.dev: (1776.69, 1248.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 325.635 CPU sec, 53.188 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514419, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.47)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (493, 1162, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1247.00, 912.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 321.998 CPU sec, 45.523 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515390, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 227, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 648)
[0000][PE] mean and std.dev: (201.56, 68.88)
[0000][PE] low and high boundaries for proper pairs: (1, 808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.57, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1413, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1273.94, 842.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 325.088 CPU sec, 47.583 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515080, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1037, 1418, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (1265.91, 553.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.60, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 1602, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1271.07, 978.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 317.790 CPU sec, 47.224 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515450, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 332, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (416.94, 306.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.88, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 324.074 CPU sec, 51.969 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514977, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 351, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (692.27, 660.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.67)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1506, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1337.25, 772.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 332.243 CPU sec, 56.153 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514987, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 540, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (731.92, 540.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.80, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 778, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (1053.65, 864.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 321.056 CPU sec, 43.647 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515751, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.74, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 1047, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (938.43, 533.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 323.808 CPU sec, 47.593 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515793, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 769, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (987.71, 1110.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1479, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1428.05, 860.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 325.870 CPU sec, 59.190 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204910
	[0000][ M::kt_pipeline] read 1204910 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515554, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 394, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7876)
[0000][PE] mean and std.dev: (1014.08, 1081.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.72, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 1379, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1279.59, 1089.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 323.364 CPU sec, 43.907 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515646, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 610, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (671.79, 680.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.81, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 1383, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5583)
[0000][PE] mean and std.dev: (1457.94, 1147.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204910 reads in 315.304 CPU sec, 46.579 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515109, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 647, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6410)
[0000][PE] mean and std.dev: (1094.46, 1114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 425, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (532.08, 530.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 317.391 CPU sec, 44.179 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515199, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 820, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (898.20, 571.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 848, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (861.00, 513.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 333.011 CPU sec, 47.205 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515172, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 840, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (682.18, 491.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.68, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1567, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (1590.64, 699.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 318.853 CPU sec, 52.262 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514993, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 476, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (569.17, 490.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.76, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 303, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (778.64, 851.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 323.102 CPU sec, 52.305 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515331, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (528, 1085, 3849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10491)
[0000][PE] mean and std.dev: (1847.30, 1928.93)
[0000][PE] low and high boundaries for proper pairs: (1, 13812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.68, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1383, 4051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9837)
[0000][PE] mean and std.dev: (2266.00, 1758.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 316.230 CPU sec, 51.331 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515512, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 802, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1305.00, 1149.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.53, 64.47)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1429, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (1245.60, 807.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 324.239 CPU sec, 48.974 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515876, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 303, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (522.20, 505.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.64, 64.75)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 316.653 CPU sec, 43.330 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515297, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 710, 2928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8390)
[0000][PE] mean and std.dev: (1555.25, 1737.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.53, 64.73)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1088, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 2204)
[0000][PE] mean and std.dev: (1036.08, 457.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 317.295 CPU sec, 49.530 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515545, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 694, 3665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10577)
[0000][PE] mean and std.dev: (1380.67, 1577.37)
[0000][PE] low and high boundaries for proper pairs: (1, 14033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1196, 4835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13397)
[0000][PE] mean and std.dev: (2244.44, 2530.59)
[0000][PE] low and high boundaries for proper pairs: (1, 17678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 325.440 CPU sec, 52.109 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515265, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1377, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7726)
[0000][PE] mean and std.dev: (1835.36, 1823.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.58, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 957, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (1007.15, 868.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 325.334 CPU sec, 51.736 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515647, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 853, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (899.67, 754.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.52, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 981, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (1075.75, 1027.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 321.923 CPU sec, 52.045 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514735, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1749, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8581)
[0000][PE] mean and std.dev: (1597.80, 1188.51)
[0000][PE] low and high boundaries for proper pairs: (1, 11304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.49, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1080, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (1213.47, 967.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 332.619 CPU sec, 60.214 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515650, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 758, 5112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14758)
[0000][PE] mean and std.dev: (2018.58, 2479.63)
[0000][PE] low and high boundaries for proper pairs: (1, 19581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.51, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 1068, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (1052.26, 865.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 326.182 CPU sec, 57.689 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204930
	[0000][ M::kt_pipeline] read 1204930 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 514589, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 597, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (628.45, 622.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.56, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 705, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (631.08, 401.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 337.597 CPU sec, 58.058 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515384, 0, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.67)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1535, 4534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12092)
[0000][PE] mean and std.dev: (2121.58, 1706.79)
[0000][PE] low and high boundaries for proper pairs: (1, 15871)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204930 reads in 324.201 CPU sec, 58.510 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514957, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (661, 1822, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7618)
[0000][PE] mean and std.dev: (1696.75, 1274.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.60, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1103, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (1007.14, 391.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 330.687 CPU sec, 57.500 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515557, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 323, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9379)
[0000][PE] mean and std.dev: (1342.31, 1677.24)
[0000][PE] low and high boundaries for proper pairs: (1, 12435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.55, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 736, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (996.52, 867.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 326.201 CPU sec, 63.543 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514851, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 221, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2421)
[0000][PE] mean and std.dev: (481.10, 506.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.64, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1409, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6759)
[0000][PE] mean and std.dev: (1918.30, 1219.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 327.742 CPU sec, 61.258 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515724, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1113, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1189.54, 842.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.64, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 920, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (1005.00, 579.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 329.793 CPU sec, 61.747 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515272, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1147, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (1064.94, 746.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.72, 64.75)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 831, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (820.17, 564.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 330.304 CPU sec, 66.123 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515589, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 279, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (710.27, 776.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.79, 64.70)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 875, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1022.00, 921.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 316.735 CPU sec, 62.404 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514790, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 365, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (577.27, 576.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.74, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1886, 4058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9806)
[0000][PE] mean and std.dev: (2330.21, 1632.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 329.482 CPU sec, 65.782 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204846
	[0000][ M::kt_pipeline] read 1204846 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 515003, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.52, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1357, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6525)
[0000][PE] mean and std.dev: (1410.09, 983.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8509)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 322.996 CPU sec, 71.474 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515170, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 739, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (874.55, 738.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.53, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 808, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (1221.00, 957.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204846 reads in 323.131 CPU sec, 58.838 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515373, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1189, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8437)
[0000][PE] mean and std.dev: (1857.30, 1972.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.14, 64.96)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 1124, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8577)
[0000][PE] mean and std.dev: (1861.67, 2124.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 323.078 CPU sec, 60.896 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515616, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 637, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1805)
[0000][PE] mean and std.dev: (640.53, 368.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.94, 64.83)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 1394, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (1635.44, 1422.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 319.749 CPU sec, 60.977 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514792, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 312, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (714.17, 757.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.20, 64.90)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1013, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (963.19, 556.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 330.025 CPU sec, 64.502 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515251, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 517, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (679.36, 671.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.98, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1318, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1204.58, 633.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 318.387 CPU sec, 58.319 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515109, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 988, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6858)
[0000][PE] mean and std.dev: (1240.00, 1073.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.88, 64.79)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1103, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (1236.19, 774.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 324.431 CPU sec, 59.444 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515208, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1000, 5156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14644)
[0000][PE] mean and std.dev: (2271.36, 2369.22)
[0000][PE] low and high boundaries for proper pairs: (1, 19388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.34, 64.79)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 1161, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4551)
[0000][PE] mean and std.dev: (1110.64, 752.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 326.773 CPU sec, 55.372 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515297, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 827, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (719.50, 489.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.40, 64.88)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 432, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1055.06, 1041.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 329.458 CPU sec, 57.346 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515321, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 827, 4407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12711)
[0000][PE] mean and std.dev: (2120.31, 2494.59)
[0000][PE] low and high boundaries for proper pairs: (1, 16863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.39, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 998, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (1171.93, 724.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 319.848 CPU sec, 61.472 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515075, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.30, 64.86)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 444, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (792.31, 807.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6855)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 323.830 CPU sec, 62.112 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515288, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.14, 64.83)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1492, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5865)
[0000][PE] mean and std.dev: (1605.11, 964.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7465)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 320.276 CPU sec, 60.171 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514767, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 313, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5674)
[0000][PE] mean and std.dev: (901.92, 866.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.31, 64.93)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 327.418 CPU sec, 59.791 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514769, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 420, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (548.56, 379.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.31, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (418, 812, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6973)
[0000][PE] mean and std.dev: (1493.40, 1364.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 328.584 CPU sec, 62.420 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515231, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1209, 1996, 4692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11658)
[0000][PE] mean and std.dev: (2556.73, 1855.06)
[0000][PE] low and high boundaries for proper pairs: (1, 15141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.54, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 1546, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (1013.11, 664.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 328.314 CPU sec, 65.720 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514879, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 719, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1032.80, 873.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.29, 64.76)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 648, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1957)
[0000][PE] mean and std.dev: (450.38, 222.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 323.485 CPU sec, 54.906 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204898
	[0000][ M::kt_pipeline] read 1204898 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515267, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 1103, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1252.38, 1044.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.47, 64.78)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 2077, 3750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9726)
[0000][PE] mean and std.dev: (2346.38, 1844.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 319.848 CPU sec, 57.929 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514750, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 556, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (676.62, 506.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.61, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1227, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7071)
[0000][PE] mean and std.dev: (1856.62, 1419.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204898 reads in 319.778 CPU sec, 55.711 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515683, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1015, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6771)
[0000][PE] mean and std.dev: (1494.81, 1515.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.51, 64.67)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 942, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1223.11, 1010.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 328.010 CPU sec, 56.763 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515163, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 559, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (770.30, 666.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.58, 64.88)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 320.069 CPU sec, 61.381 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514391, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 484, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (620.06, 514.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.70, 65.09)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 327.052 CPU sec, 59.548 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515105, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 930, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2870)
[0000][PE] mean and std.dev: (834.15, 617.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 504, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2516)
[0000][PE] mean and std.dev: (604.90, 405.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 320.433 CPU sec, 59.631 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515170, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 817, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (923.69, 765.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.67, 64.82)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 917, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (759.92, 446.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 323.971 CPU sec, 64.164 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515220, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.59, 64.85)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 2298, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6300)
[0000][PE] mean and std.dev: (1660.10, 1198.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8301)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 321.674 CPU sec, 58.310 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204894
	[0000][ M::kt_pipeline] read 1204894 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515233, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 898, 3109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8941)
[0000][PE] mean and std.dev: (1299.15, 1313.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.49, 64.81)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1038, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1084.15, 634.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 323.598 CPU sec, 55.787 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514866, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.50, 64.74)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 537, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (550.50, 501.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204894 reads in 321.452 CPU sec, 62.677 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515233, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 335, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (728.09, 604.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.58, 64.94)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1393, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (1576.73, 995.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 329.514 CPU sec, 61.570 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515209, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 765, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1114.44, 1004.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.67, 64.98)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1393, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1390.07, 686.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 319.287 CPU sec, 56.847 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513601, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 324, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6251)
[0000][PE] mean and std.dev: (1138.00, 1466.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.62, 65.00)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 339.163 CPU sec, 69.535 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515222, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.68, 64.80)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1559, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6678)
[0000][PE] mean and std.dev: (1761.64, 1441.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8586)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 320.232 CPU sec, 70.946 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204910
	[0000][ M::kt_pipeline] read 1204910 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 514991, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.76, 64.91)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1038, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (1009.82, 400.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3316)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 326.984 CPU sec, 71.987 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515316, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (657, 984, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1238.06, 1049.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.75, 64.83)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 1087, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1035.18, 829.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204910 reads in 325.163 CPU sec, 74.600 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514969, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (807, 1845, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6609)
[0000][PE] mean and std.dev: (1526.82, 1095.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.74, 64.93)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1413, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1385.71, 944.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 328.773 CPU sec, 70.446 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515152, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 651, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (648.00, 545.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.61, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 325.364 CPU sec, 70.445 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515674, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 1193, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (983.65, 578.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 64.86)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 818, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (572.50, 278.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 322.265 CPU sec, 65.438 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515873, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.49, 64.77)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (122, 870, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (911.41, 744.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 320.642 CPU sec, 76.824 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513531, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 587, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (918.46, 780.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.91, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 778, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (892.69, 593.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 365.394 CPU sec, 79.028 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515134, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 968, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (820.17, 574.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.44, 64.96)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 929, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (1246.67, 931.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 332.954 CPU sec, 78.537 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515204, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 308, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (531.93, 440.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.52, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 242, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (492.80, 451.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 321.952 CPU sec, 70.689 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515745, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 420, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8658)
[0000][PE] mean and std.dev: (1594.00, 2149.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.50, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 608, 2676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7448)
[0000][PE] mean and std.dev: (1146.29, 1029.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 320.044 CPU sec, 66.186 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515251, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 488, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (902.53, 780.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.47, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 2237, 3260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7394)
[0000][PE] mean and std.dev: (2331.83, 1486.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 319.178 CPU sec, 70.709 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515432, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 1077, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1283.64, 1466.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 545, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (479.70, 199.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 325.226 CPU sec, 71.880 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 514924, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 401, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4358)
[0000][PE] mean and std.dev: (827.60, 837.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.32, 64.80)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 1017, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (965.57, 692.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 323.121 CPU sec, 78.217 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515272, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 766, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (974.14, 743.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.39, 64.82)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 574, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (784.18, 643.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 320.065 CPU sec, 63.323 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 514699, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.33, 64.99)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 1691, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (1230.00, 925.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10666)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 326.779 CPU sec, 70.486 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514622, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (713, 1223, 4908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13298)
[0000][PE] mean and std.dev: (2729.76, 2667.87)
[0000][PE] low and high boundaries for proper pairs: (1, 17493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.51, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 964, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (458, 1633)
[0000][PE] mean and std.dev: (1033.00, 205.44)
[0000][PE] low and high boundaries for proper pairs: (211, 1868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 322.509 CPU sec, 70.526 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514949, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.45, 64.96)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1127, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7448)
[0000][PE] mean and std.dev: (1888.45, 1794.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9642)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 327.520 CPU sec, 72.779 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515167, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 549, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (710.07, 540.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.50, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 393, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5275)
[0000][PE] mean and std.dev: (1138.55, 1186.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 319.665 CPU sec, 70.650 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515266, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 307, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (641.46, 754.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.12, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1697, 4446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11184)
[0000][PE] mean and std.dev: (2415.35, 2048.86)
[0000][PE] low and high boundaries for proper pairs: (1, 14553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 329.732 CPU sec, 77.727 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515763, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 1442, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1363.56, 1019.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.33, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1258, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1075.40, 854.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 319.256 CPU sec, 60.960 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515883, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.22, 64.85)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 321.393 CPU sec, 61.967 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515331, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (846, 1292, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (1134.82, 704.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.40, 64.75)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1821, 3625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8959)
[0000][PE] mean and std.dev: (1988.12, 1640.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 326.309 CPU sec, 65.423 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515748, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.28, 64.79)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1366, 2322, 3711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8401)
[0000][PE] mean and std.dev: (2772.00, 1941.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10746)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 322.191 CPU sec, 64.979 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515444, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.29, 64.93)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 320.757 CPU sec, 69.643 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515192, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 567, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1683)
[0000][PE] mean and std.dev: (438.67, 293.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.02, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1117, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1157.21, 663.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 322.357 CPU sec, 65.435 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204838
	[0000][ M::kt_pipeline] read 1204838 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515148, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 576, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (758.06, 611.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.46, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 323.789 CPU sec, 68.437 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515263, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 1310, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (800.25, 550.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.44, 64.85)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204838 reads in 321.471 CPU sec, 69.688 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515527, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.07, 64.83)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1076, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5683)
[0000][PE] mean and std.dev: (1342.87, 1189.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 327.697 CPU sec, 72.142 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514878, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 451, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1138.73, 1204.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.44, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1227, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1325.46, 884.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 326.712 CPU sec, 66.623 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515346, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 995, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (1332.31, 1444.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.15, 64.80)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 730, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (698.50, 488.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 322.301 CPU sec, 67.220 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515672, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (580, 864, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1141.50, 1005.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.25, 64.81)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1504, 3569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8671)
[0000][PE] mean and std.dev: (2012.93, 1669.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 319.254 CPU sec, 66.583 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515797, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 1132, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (948.15, 884.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.21, 64.82)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 711, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (976.80, 875.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 321.752 CPU sec, 65.020 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515335, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 307, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (631.82, 718.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.02, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 1350, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6550)
[0000][PE] mean and std.dev: (1528.14, 1305.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 322.372 CPU sec, 67.516 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515584, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 988, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1124.31, 774.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.08, 64.72)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 1105, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1277.12, 1021.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 333.772 CPU sec, 74.921 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515499, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.21, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 1448, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1218.00, 804.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7675)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 325.048 CPU sec, 69.085 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515369, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (941, 975, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1090.60, 765.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.30, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 790, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (854.85, 570.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 323.081 CPU sec, 71.167 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515405, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.42, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 379, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (803.71, 708.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 324.421 CPU sec, 66.098 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515260, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 297, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (674.18, 624.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.02, 64.72)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 1147, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (1653.09, 1691.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 321.581 CPU sec, 67.334 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515394, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 521, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (938.72, 969.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.18, 64.77)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1146, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6086)
[0000][PE] mean and std.dev: (1617.07, 1169.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 320.913 CPU sec, 69.380 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515520, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.28, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1419, 1572, 3887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8823)
[0000][PE] mean and std.dev: (2167.84, 1534.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11291)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 325.654 CPU sec, 73.375 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515215, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.96, 64.87)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1354, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (1156.64, 595.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 318.697 CPU sec, 68.626 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515187, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 971, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (940.20, 668.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.19, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1189, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (1456.21, 650.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 329.970 CPU sec, 63.214 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515310, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1529, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6355)
[0000][PE] mean and std.dev: (1486.80, 1226.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.11, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1144, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1369.82, 937.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 320.091 CPU sec, 69.034 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515342, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 698, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (801.71, 471.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.10, 64.77)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 1537, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6415)
[0000][PE] mean and std.dev: (1438.31, 918.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 316.666 CPU sec, 66.467 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204908
	[0000][ M::kt_pipeline] read 1204908 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515020, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 947, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (1109.94, 889.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.19, 64.96)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1425, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1249.31, 791.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 322.052 CPU sec, 64.889 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515457, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 318, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2464)
[0000][PE] mean and std.dev: (478.67, 352.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1036, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (1045.50, 738.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204908 reads in 320.570 CPU sec, 66.049 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515075, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 831, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (951.59, 836.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.04, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 1072, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (873.56, 543.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 321.668 CPU sec, 68.280 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515468, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 559, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (819.92, 818.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.40, 65.01)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 905, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (1034.07, 777.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 319.376 CPU sec, 62.578 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515856, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.09, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 1107, 3639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10291)
[0000][PE] mean and std.dev: (2141.77, 2651.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13617)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 318.500 CPU sec, 74.264 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515469, 0, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.15, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1261, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6484)
[0000][PE] mean and std.dev: (1862.38, 1553.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8299)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 325.328 CPU sec, 66.260 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515187, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 440, 3460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10058)
[0000][PE] mean and std.dev: (1495.46, 2167.82)
[0000][PE] low and high boundaries for proper pairs: (1, 13357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.09, 64.73)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1338, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1255.25, 1154.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 320.287 CPU sec, 62.724 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514820, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.74, 65.07)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 1103, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (1035.10, 875.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 329.627 CPU sec, 67.956 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515586, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 3300, 3962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11280)
[0000][PE] mean and std.dev: (2233.33, 1842.46)
[0000][PE] low and high boundaries for proper pairs: (1, 14939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.15, 65.71)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1279, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (1190.11, 664.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 321.562 CPU sec, 66.180 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514935, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 898, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5978)
[0000][PE] mean and std.dev: (1530.33, 1424.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.31, 65.47)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 323.394 CPU sec, 70.523 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514804, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (679, 905, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1366.93, 1357.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.36, 65.50)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 602, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2050)
[0000][PE] mean and std.dev: (604.75, 336.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 323.930 CPU sec, 69.044 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514405, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1202, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7574)
[0000][PE] mean and std.dev: (1382.50, 1109.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.26, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 772, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (845.13, 492.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 321.418 CPU sec, 67.230 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514956, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1368, 3622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10248)
[0000][PE] mean and std.dev: (2114.69, 1717.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.34, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 704, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3420)
[0000][PE] mean and std.dev: (1067.88, 808.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 318.373 CPU sec, 69.339 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514875, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (708, 1722, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1492.50, 945.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.46)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 872, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (1135.06, 842.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 324.568 CPU sec, 69.581 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515446, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 831, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5910)
[0000][PE] mean and std.dev: (1000.50, 818.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.61, 65.69)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1269, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1404.53, 1042.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 319.783 CPU sec, 68.767 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514746, 5, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.69, 65.68)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 754, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6574)
[0000][PE] mean and std.dev: (1302.83, 1437.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8671)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 322.083 CPU sec, 72.224 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515077, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.30, 65.48)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 826, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (1009.13, 822.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 323.832 CPU sec, 74.314 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515347, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 538, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3125)
[0000][PE] mean and std.dev: (711.50, 618.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.33, 65.41)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1332, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7302)
[0000][PE] mean and std.dev: (1748.73, 1412.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 321.291 CPU sec, 63.573 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515420, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 889, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1218.70, 1107.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.26, 65.38)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 1041, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8918)
[0000][PE] mean and std.dev: (1673.77, 1596.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 318.464 CPU sec, 71.482 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514756, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1212, 3216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8726)
[0000][PE] mean and std.dev: (1833.73, 1736.32)
[0000][PE] low and high boundaries for proper pairs: (1, 11481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.42, 65.55)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1163, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1253.71, 776.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 323.690 CPU sec, 69.436 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515075, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 684, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (881.42, 651.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.55, 65.60)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 318.407 CPU sec, 69.488 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515376, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.89, 65.80)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1150, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1313.53, 927.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 318.068 CPU sec, 65.023 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515010, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.81, 65.78)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1647, 5573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14709)
[0000][PE] mean and std.dev: (2676.92, 2565.79)
[0000][PE] low and high boundaries for proper pairs: (1, 19277)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 323.732 CPU sec, 68.557 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515276, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 352, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (526.17, 669.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.66, 65.81)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 1082, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6371)
[0000][PE] mean and std.dev: (872.33, 925.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 320.674 CPU sec, 70.106 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515537, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 682, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1217.30, 1165.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.74, 65.68)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1568, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1536.06, 1033.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 320.537 CPU sec, 72.568 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514921, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.69, 65.70)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 324.260 CPU sec, 69.760 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515129, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 1547, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5800)
[0000][PE] mean and std.dev: (1230.60, 954.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.73, 65.68)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1042, 4601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12183)
[0000][PE] mean and std.dev: (1873.92, 1735.85)
[0000][PE] low and high boundaries for proper pairs: (1, 15974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 321.752 CPU sec, 71.717 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515196, 0, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.80, 65.71)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 1095, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7995)
[0000][PE] mean and std.dev: (1874.77, 1980.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10515)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 320.457 CPU sec, 64.278 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515045, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 925, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (647.17, 459.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.76, 65.68)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 974, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (795.77, 435.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 321.110 CPU sec, 72.753 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515401, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 362, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (991.17, 1108.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.66, 65.60)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 821, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1269.42, 1019.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 322.186 CPU sec, 70.066 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204920
	[0000][ M::kt_pipeline] read 1204920 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515289, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 315, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (877.06, 936.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.77, 65.61)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1534, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6670)
[0000][PE] mean and std.dev: (1533.22, 1037.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 317.767 CPU sec, 67.429 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514752, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 693, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (700.71, 406.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.56, 65.42)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 1019, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (829.33, 541.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204920 reads in 328.138 CPU sec, 64.356 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515060, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1101, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (1263.67, 1246.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.43, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 990, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (1010.53, 667.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 320.165 CPU sec, 64.613 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515264, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.46, 65.42)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 1028, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1051.31, 834.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 321.344 CPU sec, 71.467 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514757, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1610, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1302.00, 959.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.24)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 336.173 CPU sec, 61.269 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514995, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (624, 902, 3323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8721)
[0000][PE] mean and std.dev: (1718.47, 1650.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.22, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 462, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (676.67, 598.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 323.079 CPU sec, 70.490 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 514969, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 1147, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (970.47, 524.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 325.545 CPU sec, 66.771 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515234, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 909, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1270.75, 1453.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (500, 874, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (874.53, 645.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 322.877 CPU sec, 75.194 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515401, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 300, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1092.36, 1493.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.22, 65.37)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 325.377 CPU sec, 62.240 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204906
	[0000][ M::kt_pipeline] read 1204906 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514671, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 875, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1012.67, 692.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.27, 65.33)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1349, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1265.77, 712.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 324.726 CPU sec, 66.895 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515839, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 434, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (839.73, 828.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.29, 65.36)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1057, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1137.42, 811.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204906 reads in 324.791 CPU sec, 68.297 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515135, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.26)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1289, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1372.18, 1067.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6730)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 318.117 CPU sec, 69.277 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514643, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 332, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (592.25, 624.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1089, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1097.22, 787.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 324.857 CPU sec, 69.434 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515304, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1370, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1177.08, 722.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 329.661 CPU sec, 70.555 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515655, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (943, 1227, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1248.38, 893.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.24, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 1086, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1479.82, 1376.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 328.343 CPU sec, 71.305 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514658, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.29, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 982, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (940.80, 782.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4072)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 324.087 CPU sec, 62.625 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515052, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 573, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2104)
[0000][PE] mean and std.dev: (547.94, 392.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.15, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 564, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9293)
[0000][PE] mean and std.dev: (2110.27, 2515.90)
[0000][PE] low and high boundaries for proper pairs: (1, 12276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 325.712 CPU sec, 69.476 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514667, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (749, 975, 3366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8600)
[0000][PE] mean and std.dev: (1823.62, 1912.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.25, 65.23)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1161, 3306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9080)
[0000][PE] mean and std.dev: (1737.62, 1828.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 322.461 CPU sec, 68.474 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515275, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 278, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (770.07, 995.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.30, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1159, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1033.20, 766.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 322.447 CPU sec, 70.494 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515379, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 1139, 3119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8899)
[0000][PE] mean and std.dev: (1878.12, 2003.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.35, 65.15)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1012, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (762.50, 442.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 331.874 CPU sec, 66.827 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514663, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 739, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (691.31, 576.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.28, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 995, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (1058.92, 712.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 330.825 CPU sec, 74.832 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204922
	[0000][ M::kt_pipeline] read 1204922 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515185, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 1200, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1101.50, 736.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.00, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (77, 3409, 4018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11900)
[0000][PE] mean and std.dev: (2411.40, 2512.15)
[0000][PE] low and high boundaries for proper pairs: (1, 15841)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 703, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (945.41, 749.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 331.388 CPU sec, 67.504 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514997, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 1810, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1314.67, 954.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1480, 3549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8677)
[0000][PE] mean and std.dev: (1750.09, 1608.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204922 reads in 325.464 CPU sec, 67.209 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515074, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 618, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (732.55, 786.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.99, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 975, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (1220.33, 789.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 325.473 CPU sec, 65.998 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204866
	[0000][ M::kt_pipeline] read 1204866 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515340, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 219, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (408.10, 381.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1542, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1187.77, 758.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 323.387 CPU sec, 72.841 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515570, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 604, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7017)
[0000][PE] mean and std.dev: (822.08, 910.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 982, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5694)
[0000][PE] mean and std.dev: (1173.21, 803.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204866 reads in 324.263 CPU sec, 68.888 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515177, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 611, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (801.76, 763.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.80, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1443, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (1116.19, 641.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 324.337 CPU sec, 58.002 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514728, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1455, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6340)
[0000][PE] mean and std.dev: (1362.87, 1058.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.22)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 845, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5733)
[0000][PE] mean and std.dev: (1294.13, 1189.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 341.832 CPU sec, 65.553 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515567, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.00, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 325.018 CPU sec, 72.482 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515324, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 850, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5459)
[0000][PE] mean and std.dev: (1325.13, 1191.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.99, 65.17)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 325.125 CPU sec, 72.540 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515109, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 745, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1082.16, 879.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.79, 64.99)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 327.745 CPU sec, 65.875 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514726, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (742, 1282, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (1169.56, 782.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.91, 64.99)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1288, 3991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10429)
[0000][PE] mean and std.dev: (2157.35, 2030.78)
[0000][PE] low and high boundaries for proper pairs: (1, 13648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 324.584 CPU sec, 59.137 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514986, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (757, 1699, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6118)
[0000][PE] mean and std.dev: (1423.50, 1010.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.99, 65.38)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1465, 2082, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (1883.92, 798.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 324.519 CPU sec, 66.522 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515125, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 1903, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6569)
[0000][PE] mean and std.dev: (1592.71, 1152.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.74, 65.12)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1562, 6797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18473)
[0000][PE] mean and std.dev: (2725.20, 2738.08)
[0000][PE] low and high boundaries for proper pairs: (1, 24311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 327.385 CPU sec, 69.108 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515069, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 1310, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8384)
[0000][PE] mean and std.dev: (1728.29, 1984.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.71, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1562, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1274.43, 950.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 324.858 CPU sec, 74.936 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515505, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 868, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (1162.69, 845.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.96, 65.16)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 320.100 CPU sec, 66.909 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515565, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.00, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1162, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6266)
[0000][PE] mean and std.dev: (1634.45, 1102.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7991)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 322.234 CPU sec, 59.715 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515104, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 900, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (1154.70, 1066.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.89, 65.46)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 326.131 CPU sec, 72.353 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514993, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 484, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (810.19, 754.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.14)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 322.450 CPU sec, 67.900 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515317, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1158, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1026.00, 837.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.67, 65.23)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 1100, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (916.53, 491.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 325.495 CPU sec, 66.714 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515169, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1167, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1454.50, 1337.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.67, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1150, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (1017.69, 566.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 324.525 CPU sec, 63.118 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515178, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1004, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1050.69, 889.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.22)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 981, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (923.27, 742.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 321.242 CPU sec, 68.071 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204906
	[0000][ M::kt_pipeline] read 1204906 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515123, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (696, 1393, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (1152.62, 680.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.53, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 931, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (963.33, 760.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 320.584 CPU sec, 66.269 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515605, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 497, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (581.00, 513.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.19)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204906 reads in 321.844 CPU sec, 69.004 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515444, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 1217, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (714.78, 542.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.57, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 1525, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6488)
[0000][PE] mean and std.dev: (1696.92, 1651.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 319.687 CPU sec, 72.970 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515334, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 1163, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1141.38, 1016.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.00, 65.38)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1346, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6264)
[0000][PE] mean and std.dev: (1574.54, 1193.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 327.516 CPU sec, 70.463 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515020, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.75, 65.01)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1275, 3648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9980)
[0000][PE] mean and std.dev: (1826.62, 1778.75)
[0000][PE] low and high boundaries for proper pairs: (1, 13146)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 322.348 CPU sec, 74.293 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515195, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 319, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (589.87, 563.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.59, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1441, 4463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11403)
[0000][PE] mean and std.dev: (2507.31, 2370.57)
[0000][PE] low and high boundaries for proper pairs: (1, 14873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 320.804 CPU sec, 73.498 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204908
	[0000][ M::kt_pipeline] read 1204908 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515698, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1384, 3329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9407)
[0000][PE] mean and std.dev: (1636.18, 1499.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.66, 64.89)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 971, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (872.18, 624.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 319.834 CPU sec, 69.783 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515158, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 431, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (762.00, 703.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.51, 65.16)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1475, 3273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8043)
[0000][PE] mean and std.dev: (1914.69, 1269.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204908 reads in 320.414 CPU sec, 66.925 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515103, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.53, 65.10)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 988, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1270.71, 1187.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 326.769 CPU sec, 70.831 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515338, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1216, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6994)
[0000][PE] mean and std.dev: (1452.71, 1363.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.74, 65.15)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1099, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6077)
[0000][PE] mean and std.dev: (1329.00, 997.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 321.171 CPU sec, 68.817 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515158, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 279, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (685.25, 742.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.72, 65.21)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1102, 6413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17709)
[0000][PE] mean and std.dev: (2509.55, 2625.52)
[0000][PE] low and high boundaries for proper pairs: (1, 23357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 320.757 CPU sec, 69.302 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515131, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 1446, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6538)
[0000][PE] mean and std.dev: (1345.00, 1135.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1244, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1438.60, 1102.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 321.521 CPU sec, 66.260 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515269, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (853, 1119, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (75, 2020)
[0000][PE] mean and std.dev: (894.15, 481.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.76, 65.20)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 325.772 CPU sec, 60.328 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515383, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 328.302 CPU sec, 68.284 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515755, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (980, 2245, 4482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11486)
[0000][PE] mean and std.dev: (2599.39, 1852.17)
[0000][PE] low and high boundaries for proper pairs: (1, 14988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.53, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 327.399 CPU sec, 70.876 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515004, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.67, 65.19)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1297, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6641)
[0000][PE] mean and std.dev: (1371.85, 1037.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8715)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 324.101 CPU sec, 80.428 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515341, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1244, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6676)
[0000][PE] mean and std.dev: (1145.89, 1084.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.75, 65.18)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1432, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1293.79, 913.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 325.110 CPU sec, 71.586 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515711, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 356, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (517.41, 431.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.56, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 1175, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1404.86, 1131.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 323.218 CPU sec, 73.409 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 514878, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1052, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (1016.10, 614.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.54, 64.90)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 323.683 CPU sec, 67.035 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514619, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1349, 2066, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (2421.09, 1892.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1569, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (258, 2748)
[0000][PE] mean and std.dev: (1515.12, 545.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 325.085 CPU sec, 64.223 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514718, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 553, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (776.64, 680.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.02, 65.24)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1533, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (1529.57, 1040.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 325.880 CPU sec, 62.505 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515162, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 495, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (692.70, 631.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.99, 65.44)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1150, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1239.08, 748.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 321.469 CPU sec, 70.802 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514970, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 437, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1837)
[0000][PE] mean and std.dev: (486.08, 366.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.02, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 1001, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (826.33, 735.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 325.817 CPU sec, 64.985 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515127, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 599, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (482.42, 359.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.06, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 869, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (794.68, 607.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 325.841 CPU sec, 64.548 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515019, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (934, 1334, 3370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8242)
[0000][PE] mean and std.dev: (1990.31, 1301.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.88, 65.43)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1517, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (1402.67, 505.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 319.731 CPU sec, 62.810 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515418, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 2680, 2994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8402)
[0000][PE] mean and std.dev: (2085.50, 1898.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.01, 65.44)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (378, 990, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (966.38, 633.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 320.923 CPU sec, 59.996 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514810, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (527, 1153, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (1080.69, 688.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.91, 65.27)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1581, 3437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8093)
[0000][PE] mean and std.dev: (2383.69, 1948.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 321.117 CPU sec, 77.827 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514948, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 217, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (444.92, 447.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.19, 65.39)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 991, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (964.18, 868.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 328.899 CPU sec, 59.688 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 514574, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 679, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (715.11, 606.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.13, 65.40)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1480, 3050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7028)
[0000][PE] mean and std.dev: (1615.40, 1156.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 322.201 CPU sec, 61.519 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515793, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1052, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (923.18, 806.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.17, 65.23)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 320.582 CPU sec, 63.535 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515383, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (805, 1255, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1160.25, 727.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.17, 65.50)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 819, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (810.09, 523.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 323.726 CPU sec, 71.151 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515538, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 711, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5105)
[0000][PE] mean and std.dev: (1152.38, 1328.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.29, 65.49)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1070, 3451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8943)
[0000][PE] mean and std.dev: (1523.17, 1320.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 318.876 CPU sec, 65.176 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515653, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 585, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6639)
[0000][PE] mean and std.dev: (790.14, 832.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.27, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (486, 946, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (1071.62, 729.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 320.518 CPU sec, 68.379 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515143, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 289, 3137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9029)
[0000][PE] mean and std.dev: (1784.00, 2498.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.42, 65.45)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 967, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (896.30, 717.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 323.250 CPU sec, 68.544 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514938, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 958, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (926.53, 681.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.43, 65.46)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 825, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1100.08, 1073.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 324.150 CPU sec, 74.144 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515467, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1480, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6963)
[0000][PE] mean and std.dev: (1685.22, 1596.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.31, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 1143, 3766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10748)
[0000][PE] mean and std.dev: (2045.40, 2297.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 326.665 CPU sec, 73.538 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515359, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 362, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1004.77, 1238.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.46, 65.47)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1072, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6833)
[0000][PE] mean and std.dev: (1288.20, 1504.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 323.885 CPU sec, 70.860 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204900
	[0000][ M::kt_pipeline] read 1204900 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515345, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 947, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7406)
[0000][PE] mean and std.dev: (1315.50, 1458.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.65, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 927, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (1164.89, 1234.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 320.604 CPU sec, 74.026 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515150, 2, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.88, 65.55)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 963, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (1190.52, 870.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204900 reads in 323.224 CPU sec, 61.460 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515619, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 395, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6286)
[0000][PE] mean and std.dev: (1021.15, 1109.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.48, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 322.531 CPU sec, 64.554 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515545, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 535, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (742.45, 587.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.48, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 322.923 CPU sec, 70.363 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515173, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 564, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (992.94, 1081.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.47, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 320.295 CPU sec, 71.613 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515649, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 613, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (895.07, 814.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.57, 65.40)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 319.869 CPU sec, 71.282 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515160, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 1556, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (1390.40, 1200.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.53, 65.47)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 975, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1470.64, 1523.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 319.028 CPU sec, 68.522 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515328, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1384, 1550, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (388, 2878)
[0000][PE] mean and std.dev: (1737.64, 368.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.40, 65.48)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 716, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5439)
[0000][PE] mean and std.dev: (1056.44, 936.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 321.025 CPU sec, 63.731 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515227, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 416, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (716.82, 702.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.44, 65.50)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1302, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1556.72, 1182.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 319.071 CPU sec, 61.817 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515768, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.35, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 835, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (916.08, 671.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 319.668 CPU sec, 71.815 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515514, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1336, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7652)
[0000][PE] mean and std.dev: (1346.92, 1038.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.62, 65.66)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 878, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (1042.86, 982.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 320.477 CPU sec, 74.773 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515005, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 372, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (713.86, 657.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.20, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1765, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1936.54, 1216.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 323.902 CPU sec, 71.977 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514924, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1467, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6809)
[0000][PE] mean and std.dev: (1687.77, 1523.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.70, 65.63)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 948, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6480)
[0000][PE] mean and std.dev: (1427.92, 1172.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 337.520 CPU sec, 70.088 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515372, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.30, 65.41)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 828, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (995.18, 846.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 324.140 CPU sec, 70.701 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515297, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 825, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1008.80, 996.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.29, 65.45)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (418, 1292, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7354)
[0000][PE] mean and std.dev: (1576.60, 1460.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 323.969 CPU sec, 67.844 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515127, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 1497, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5548)
[0000][PE] mean and std.dev: (1088.56, 971.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.49, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 791, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (1128.17, 866.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 328.699 CPU sec, 60.123 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514758, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 340, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (605.06, 565.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.28, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 326.880 CPU sec, 60.504 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515795, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.35, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 878, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (779.13, 510.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 322.315 CPU sec, 67.276 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515256, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1347, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1173.62, 1153.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.37, 65.19)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1553, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1504.21, 892.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 332.678 CPU sec, 60.765 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514784, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 743, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1047.21, 1095.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.30, 65.27)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1189, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7156)
[0000][PE] mean and std.dev: (1621.91, 1172.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 329.839 CPU sec, 53.874 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515471, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 910, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (834.62, 780.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1185, 3235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8617)
[0000][PE] mean and std.dev: (1915.25, 1838.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 328.803 CPU sec, 57.339 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514674, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 377, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1451)
[0000][PE] mean and std.dev: (391.82, 250.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.97, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1331, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (1101.64, 374.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 323.815 CPU sec, 68.120 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515696, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.07, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1140, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (1155.76, 547.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 320.968 CPU sec, 65.382 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515334, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 1079, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1129.07, 1133.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.02, 65.17)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 766, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1043.00, 774.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 322.017 CPU sec, 59.378 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514984, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 960, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (857.71, 671.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.04, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 350, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (565.53, 428.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 326.602 CPU sec, 61.263 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515100, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1028, 1483, 2975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6869)
[0000][PE] mean and std.dev: (1859.10, 1293.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.24)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1030, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6857)
[0000][PE] mean and std.dev: (1449.44, 1337.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 327.184 CPU sec, 60.496 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514754, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 715, 3224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9230)
[0000][PE] mean and std.dev: (1386.88, 1501.07)
[0000][PE] low and high boundaries for proper pairs: (1, 12233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.84, 65.02)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 1174, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (865.64, 500.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 325.420 CPU sec, 63.982 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204910
	[0000][ M::kt_pipeline] read 1204910 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515091, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.71, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 592, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1224.00, 1251.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6405)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 334.317 CPU sec, 69.772 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515052, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 566, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5348)
[0000][PE] mean and std.dev: (973.50, 828.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.70, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 1542, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1439.17, 841.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204910 reads in 330.889 CPU sec, 68.671 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515189, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.96, 65.29)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 618, 3235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8923)
[0000][PE] mean and std.dev: (1948.73, 2404.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11767)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 324.518 CPU sec, 57.740 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514486, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 753, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1128.06, 1103.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 65.11)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (264, 588, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (545.67, 349.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3188)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 774, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7059)
[0000][PE] mean and std.dev: (810.33, 759.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 354.785 CPU sec, 73.113 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515603, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.89, 65.32)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 860, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (987.93, 710.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5677)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 327.026 CPU sec, 61.291 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515589, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1256, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (1040.55, 501.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.83, 64.86)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (448, 1671, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5848)
[0000][PE] mean and std.dev: (1542.62, 1437.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 325.969 CPU sec, 59.099 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514869, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (791, 1256, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1585.81, 1163.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.75, 65.14)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 805, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (714.31, 587.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 324.575 CPU sec, 61.283 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515192, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 299, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (605.00, 512.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.72, 65.05)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1843, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (2019.92, 1426.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 324.467 CPU sec, 62.560 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515402, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.26)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1098, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (1579.93, 1139.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 328.411 CPU sec, 61.282 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515296, 11, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.14, 65.38)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 281, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (675.55, 838.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (330, 1323, 3985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11295)
[0000][PE] mean and std.dev: (2016.50, 1645.94)
[0000][PE] low and high boundaries for proper pairs: (1, 14950)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 326.743 CPU sec, 61.251 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515300, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1067, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8037)
[0000][PE] mean and std.dev: (1372.17, 1101.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.71, 64.95)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 1854, 3403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9167)
[0000][PE] mean and std.dev: (2084.00, 2020.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 327.486 CPU sec, 60.687 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515594, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1272, 1350, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1381.08, 789.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.74, 65.11)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1282, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6081)
[0000][PE] mean and std.dev: (1650.80, 1478.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 328.344 CPU sec, 65.634 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515546, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1235, 1984, 3735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8735)
[0000][PE] mean and std.dev: (2538.08, 2071.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.95, 65.37)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1110, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (1032.10, 558.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 323.754 CPU sec, 57.169 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 514994, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 531, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (639.00, 496.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.08, 65.19)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 469, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2191)
[0000][PE] mean and std.dev: (455.22, 245.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 326.549 CPU sec, 62.445 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515089, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.84, 65.38)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 830, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2444)
[0000][PE] mean and std.dev: (567.58, 361.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3185)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 326.038 CPU sec, 66.289 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514669, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 873, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (596.56, 506.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.64, 65.17)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 1351, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1792.72, 1752.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 328.344 CPU sec, 61.150 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514913, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 400, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1768)
[0000][PE] mean and std.dev: (455.44, 293.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.69, 65.01)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 332.771 CPU sec, 65.068 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515357, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 249, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6386)
[0000][PE] mean and std.dev: (680.60, 845.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.80, 65.18)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (452, 967, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (733.08, 431.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 325.163 CPU sec, 64.825 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515108, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (567, 1125, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (1181.73, 760.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.92, 65.30)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1499, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1813.00, 1283.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 323.421 CPU sec, 55.376 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515885, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 682, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1181.00, 1136.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.93, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1091, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (921.00, 612.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 319.450 CPU sec, 65.040 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204778
	[0000][ M::kt_pipeline] read 1204778 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514833, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1046, 1432, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (1291.62, 671.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.21)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 930, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (932.50, 674.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 331.798 CPU sec, 60.478 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515503, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 999, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (1080.00, 867.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.92, 65.42)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 917, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1082.85, 731.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204778 reads in 321.845 CPU sec, 57.736 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515515, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 808, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1025.75, 1120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.76, 65.07)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 916, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (1107.56, 613.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 322.014 CPU sec, 58.293 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515314, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 889, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1226.86, 1133.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.62, 65.15)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 914, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1114.86, 819.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 322.544 CPU sec, 58.754 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515317, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.92, 65.42)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 1044, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (903.62, 549.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5326)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 321.552 CPU sec, 63.360 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204896
	[0000][ M::kt_pipeline] read 1204896 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515766, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 360, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (981.33, 1015.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.83, 65.39)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1283, 3790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10012)
[0000][PE] mean and std.dev: (2277.64, 2093.69)
[0000][PE] low and high boundaries for proper pairs: (1, 13123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 327.827 CPU sec, 64.334 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515426, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.24)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1035, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (887.21, 508.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204896 reads in 321.695 CPU sec, 60.700 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515357, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 273, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8432)
[0000][PE] mean and std.dev: (913.92, 1141.53)
[0000][PE] low and high boundaries for proper pairs: (1, 11179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.20)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 1392, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6401)
[0000][PE] mean and std.dev: (1444.38, 1212.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 323.841 CPU sec, 65.147 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514938, 9, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.97, 65.46)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1393, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1321.17, 625.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 322.819 CPU sec, 64.551 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515509, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (783, 1147, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2214)
[0000][PE] mean and std.dev: (1091.20, 577.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.98, 65.50)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 1018, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1019.27, 662.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 323.093 CPU sec, 58.812 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515002, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1070, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (998.56, 776.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.56, 65.19)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 715, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (849.64, 690.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 329.001 CPU sec, 59.051 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515054, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (714, 1240, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1343.92, 949.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.31, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 759, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (829.35, 508.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 327.613 CPU sec, 53.486 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514682, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 778, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (772.23, 586.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.64, 65.10)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1113, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (975.80, 468.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 325.991 CPU sec, 59.655 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514933, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 337, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (954.61, 955.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.72, 65.15)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 328.718 CPU sec, 58.462 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515362, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.71, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1421, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (1290.33, 564.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 325.910 CPU sec, 70.695 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515185, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (831, 992, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (812.60, 361.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (487, 1008, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1344.69, 1182.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 322.137 CPU sec, 54.995 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515018, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (800, 1670, 3155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7865)
[0000][PE] mean and std.dev: (2087.21, 1538.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.71, 65.12)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (535, 1069, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (1018.62, 783.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 323.955 CPU sec, 68.127 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515522, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1392, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (1045.36, 629.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.10)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 991, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5594)
[0000][PE] mean and std.dev: (1105.50, 1263.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 324.565 CPU sec, 55.988 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515404, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1087, 1937, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1841.31, 1209.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.11)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 482, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (706.29, 532.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 320.936 CPU sec, 57.359 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515176, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 1559, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1148.70, 697.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.54, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 324.057 CPU sec, 60.268 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515311, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 1182, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9127)
[0000][PE] mean and std.dev: (1285.00, 1227.11)
[0000][PE] low and high boundaries for proper pairs: (1, 12082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.68, 65.00)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 321.439 CPU sec, 60.379 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515646, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 601, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (839.50, 752.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.61, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 784, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (822.20, 486.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 323.923 CPU sec, 59.187 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515413, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.57, 65.10)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 843, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1030.50, 1137.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6077)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 319.309 CPU sec, 62.130 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515458, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 1031, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (903.15, 506.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.72, 65.03)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 1047, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1083.57, 907.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 316.950 CPU sec, 52.754 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515002, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1072, 1435, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5887)
[0000][PE] mean and std.dev: (1838.94, 1404.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.94, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 714, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (973.29, 900.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 318.889 CPU sec, 58.364 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515046, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 544, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8114)
[0000][PE] mean and std.dev: (1332.92, 1548.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.96, 65.36)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 823, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8049)
[0000][PE] mean and std.dev: (1609.35, 2019.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 323.928 CPU sec, 56.895 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514280, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.79, 65.53)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1268, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (1196.53, 568.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 342.815 CPU sec, 58.218 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204908
	[0000][ M::kt_pipeline] read 1204908 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514645, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 1084, 3757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10769)
[0000][PE] mean and std.dev: (1605.38, 1498.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.86, 65.43)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 346.063 CPU sec, 62.398 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515072, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.06, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 1029, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (926.27, 605.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5849)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204908 reads in 319.663 CPU sec, 56.475 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515131, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.07, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1350, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6384)
[0000][PE] mean and std.dev: (1668.53, 1087.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8107)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 321.502 CPU sec, 55.619 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515042, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 708, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (716.25, 507.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.25, 65.33)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 953, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (1049.36, 638.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 321.555 CPU sec, 68.869 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515540, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (963, 1639, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5928)
[0000][PE] mean and std.dev: (1651.22, 1189.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.31, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 793, 2900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8234)
[0000][PE] mean and std.dev: (1627.87, 1940.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 317.594 CPU sec, 57.848 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515229, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 1303, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6821)
[0000][PE] mean and std.dev: (1444.10, 1226.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.09, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 691, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (711.75, 694.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 326.823 CPU sec, 54.143 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515458, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.17, 65.19)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 316.818 CPU sec, 44.814 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204932
	[0000][ M::kt_pipeline] read 1204932 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515419, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 939, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2331)
[0000][PE] mean and std.dev: (534.25, 332.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.15)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 905, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (758.71, 529.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 317.606 CPU sec, 54.369 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515346, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 953, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6915)
[0000][PE] mean and std.dev: (1357.31, 1446.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 323, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (809.58, 878.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204932 reads in 322.522 CPU sec, 55.371 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515116, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 534, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (659.33, 517.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.31, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 330.467 CPU sec, 55.800 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515466, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1254, 1425, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1781.64, 1045.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.29, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1202, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1307.23, 786.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 315.121 CPU sec, 60.834 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515663, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 369, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7514)
[0000][PE] mean and std.dev: (1117.09, 1106.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.00, 65.15)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 323.025 CPU sec, 58.844 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515610, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (562, 1545, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1318.92, 1036.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.02, 65.33)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 497, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (679.83, 562.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 325.624 CPU sec, 55.061 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515141, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.08, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 917, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7400)
[0000][PE] mean and std.dev: (1567.27, 1430.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9561)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 325.698 CPU sec, 56.457 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515122, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 480, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1304.64, 1323.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.17, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 761, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (996.45, 785.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 329.632 CPU sec, 58.686 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515663, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.09, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 794, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (897.15, 718.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 325.714 CPU sec, 57.723 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515683, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.24, 65.23)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 1785, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5904)
[0000][PE] mean and std.dev: (1421.85, 1246.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 323.457 CPU sec, 52.570 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515039, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 206, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 489)
[0000][PE] mean and std.dev: (188.22, 64.90)
[0000][PE] low and high boundaries for proper pairs: (1, 595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.34, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1304, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (1949.56, 1636.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 325.554 CPU sec, 61.535 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514608, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 606, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (627.17, 494.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.43, 65.17)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 1130, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7486)
[0000][PE] mean and std.dev: (1386.33, 1120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 336.062 CPU sec, 59.345 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515769, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (714, 1132, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1356.50, 1128.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.33, 65.20)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1371, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1742.91, 1342.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 324.520 CPU sec, 63.106 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515827, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 1227, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6550)
[0000][PE] mean and std.dev: (1799.56, 1691.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.20)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 423, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (529.30, 330.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 326.071 CPU sec, 58.624 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515106, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 905, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1124.33, 1008.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.41, 65.20)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 331.242 CPU sec, 57.532 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515637, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1071, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1215.71, 1087.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.99, 65.11)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1090, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1256.62, 872.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 323.720 CPU sec, 54.538 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515259, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 443, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2389)
[0000][PE] mean and std.dev: (522.08, 382.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.17, 65.41)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1208, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (1180.36, 720.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 328.711 CPU sec, 59.543 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515651, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 884, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (895.00, 664.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.22, 65.16)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 1442, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1418.38, 990.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 321.580 CPU sec, 55.326 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515427, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 684, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1177.89, 1181.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.06, 65.46)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 1125, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5943)
[0000][PE] mean and std.dev: (1374.07, 1121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 325.692 CPU sec, 55.349 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515159, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1170, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1070.15, 978.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.98, 64.98)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 327.162 CPU sec, 55.829 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515199, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 425, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (839.70, 836.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.07, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1118, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5964)
[0000][PE] mean and std.dev: (1194.27, 961.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 318.971 CPU sec, 57.983 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515699, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 279, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (658.27, 533.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.15)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 992, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1241.78, 1105.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 320.756 CPU sec, 54.020 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515342, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 982, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1160.06, 1169.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.74, 64.86)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 1122, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1048.90, 839.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 325.261 CPU sec, 58.630 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515661, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1347, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1563.00, 1476.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.76, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1540, 3978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10556)
[0000][PE] mean and std.dev: (2759.53, 3061.09)
[0000][PE] low and high boundaries for proper pairs: (1, 15004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 327.132 CPU sec, 61.111 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515281, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 808, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (628.11, 409.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.75, 64.90)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 704, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (28, 1318)
[0000][PE] mean and std.dev: (590.50, 264.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 329.170 CPU sec, 54.689 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515014, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1149, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6205)
[0000][PE] mean and std.dev: (1195.92, 909.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.62, 64.83)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1097, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1620.33, 821.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 325.061 CPU sec, 55.953 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515714, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 349, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (741.61, 793.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.51, 64.94)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 347, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (837.93, 828.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 322.010 CPU sec, 56.849 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515344, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.44, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 374.492 CPU sec, 72.901 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515333, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 983, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1114.67, 873.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.40, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1511, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6560)
[0000][PE] mean and std.dev: (1687.46, 868.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 324.667 CPU sec, 59.490 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515195, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (947, 1113, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (1058.10, 541.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.52, 64.83)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 917, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (978.62, 673.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 332.871 CPU sec, 61.144 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515458, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 1337, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1163.80, 907.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.54, 64.94)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 339.709 CPU sec, 55.599 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204876
	[0000][ M::kt_pipeline] read 1204876 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515054, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.25, 64.93)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 2021, 5504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14860)
[0000][PE] mean and std.dev: (2538.33, 2032.95)
[0000][PE] low and high boundaries for proper pairs: (1, 19538)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 333.533 CPU sec, 56.965 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515796, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 1172, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7514)
[0000][PE] mean and std.dev: (1431.92, 1175.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.13, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1504, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1497.19, 801.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204876 reads in 334.604 CPU sec, 56.554 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204894
	[0000][ M::kt_pipeline] read 1204894 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515238, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (790, 1247, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1190.88, 830.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.17, 64.74)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1430, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1708.70, 1082.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 328.205 CPU sec, 51.055 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515073, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1575, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (979.40, 673.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.45, 64.80)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1729, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7646)
[0000][PE] mean and std.dev: (2290.21, 1802.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204894 reads in 333.528 CPU sec, 58.183 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515550, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (889, 1500, 3583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8971)
[0000][PE] mean and std.dev: (1911.62, 1589.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.42, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1193, 3175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8473)
[0000][PE] mean and std.dev: (1468.62, 1167.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 358.810 CPU sec, 67.738 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515330, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (816, 1848, 3748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9612)
[0000][PE] mean and std.dev: (2241.31, 1588.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.32, 64.82)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1019, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1275.83, 998.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 328.853 CPU sec, 52.638 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204832
	[0000][ M::kt_pipeline] read 1204832 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515277, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1255, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6873)
[0000][PE] mean and std.dev: (1637.89, 1597.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.46, 64.90)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 949, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7023)
[0000][PE] mean and std.dev: (1448.12, 1224.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 333.013 CPU sec, 58.340 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515210, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (796, 1395, 3701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9511)
[0000][PE] mean and std.dev: (1858.50, 1308.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 957, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (801.00, 500.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204832 reads in 322.372 CPU sec, 56.615 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515057, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.94, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 560, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (736.00, 682.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 325.614 CPU sec, 52.924 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514928, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1112, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6431)
[0000][PE] mean and std.dev: (1329.91, 1087.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.79, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1153, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1336.11, 1217.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 336.659 CPU sec, 58.109 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515021, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 290, 3181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9097)
[0000][PE] mean and std.dev: (1054.00, 1263.85)
[0000][PE] low and high boundaries for proper pairs: (1, 12055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.88, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 925, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (805.18, 389.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 323.093 CPU sec, 46.783 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515836, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 971, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (966.80, 705.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.16, 64.79)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 335.644 CPU sec, 51.407 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515305, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 959, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1205.59, 1086.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.94, 64.69)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1452, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (1304.69, 652.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 332.071 CPU sec, 53.891 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515487, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 876, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (754.92, 546.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.10, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 327.915 CPU sec, 49.303 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515011, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 369, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (899.59, 1128.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.31, 64.68)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1048, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1121.91, 624.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 322.525 CPU sec, 56.701 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515549, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 907, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1163.63, 1083.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.05, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 1107, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (908.80, 559.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 322.946 CPU sec, 55.894 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515560, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (958, 1055, 3328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8068)
[0000][PE] mean and std.dev: (1508.60, 1104.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.88)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 2060, 6785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19693)
[0000][PE] mean and std.dev: (3449.50, 3371.89)
[0000][PE] low and high boundaries for proper pairs: (1, 26147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 325.723 CPU sec, 73.919 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515013, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 568, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2083)
[0000][PE] mean and std.dev: (480.62, 263.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.91, 64.69)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 331.894 CPU sec, 60.086 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515446, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 518, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (703.62, 632.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.20, 64.72)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1125, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1230.92, 756.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 322.400 CPU sec, 54.339 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515157, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 1258, 3595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10303)
[0000][PE] mean and std.dev: (1877.73, 2184.01)
[0000][PE] low and high boundaries for proper pairs: (1, 13657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.26, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1253, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (1226.14, 667.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 323.708 CPU sec, 53.769 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 514910, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 873, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1125.05, 1000.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.17, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 327.017 CPU sec, 50.703 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515178, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.20, 64.90)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 713, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (1004.00, 1165.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 323.103 CPU sec, 57.623 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515321, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 938, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4209)
[0000][PE] mean and std.dev: (1080.82, 827.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.99, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 328.122 CPU sec, 62.194 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515182, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (974, 1234, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (1069.44, 568.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.32, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1238, 3730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9588)
[0000][PE] mean and std.dev: (1964.40, 1638.76)
[0000][PE] low and high boundaries for proper pairs: (1, 12517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 322.902 CPU sec, 58.183 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515240, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 770, 3356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9570)
[0000][PE] mean and std.dev: (1783.38, 2068.87)
[0000][PE] low and high boundaries for proper pairs: (1, 12677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.36, 64.65)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 878, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6415)
[0000][PE] mean and std.dev: (1142.38, 1034.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 326.206 CPU sec, 57.422 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515134, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 694, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (734.19, 598.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.43, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 652, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (539.80, 368.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 323.186 CPU sec, 51.331 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515093, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.36, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1093, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (1069.36, 719.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 327.161 CPU sec, 58.557 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515278, 0, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.59, 64.76)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1108, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2179)
[0000][PE] mean and std.dev: (780.78, 477.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2690)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 328.361 CPU sec, 55.456 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515493, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 749, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (884.67, 669.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.45, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 938, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3125)
[0000][PE] mean and std.dev: (797.82, 480.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 329.262 CPU sec, 55.888 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514960, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 297, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2051)
[0000][PE] mean and std.dev: (457.92, 319.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 779, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (672.10, 333.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 323.463 CPU sec, 56.948 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515442, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 733, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (1147.33, 1170.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.50, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 3145, 5037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13443)
[0000][PE] mean and std.dev: (2619.58, 2030.62)
[0000][PE] low and high boundaries for proper pairs: (1, 17646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 326.030 CPU sec, 53.508 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515233, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 648, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7033)
[0000][PE] mean and std.dev: (1104.50, 1142.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.19, 64.45)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 1032, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4474)
[0000][PE] mean and std.dev: (1087.57, 864.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 340.634 CPU sec, 57.915 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515413, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 878, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (984.42, 734.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.47, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 918, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (898.77, 536.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 327.734 CPU sec, 59.118 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515333, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 767, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (697.74, 570.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.75, 64.70)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1315, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1392.52, 880.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 325.085 CPU sec, 56.378 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515222, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.65, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 623, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (633.07, 369.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 335.967 CPU sec, 61.090 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515678, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 848, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1069.14, 1046.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.70, 64.76)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 838, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1192.50, 1351.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 329.757 CPU sec, 54.186 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515486, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1155, 1628, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5568)
[0000][PE] mean and std.dev: (1723.82, 1088.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.72)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1067, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1352.55, 1184.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 319.224 CPU sec, 55.390 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515510, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1975, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6719)
[0000][PE] mean and std.dev: (1653.11, 1286.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.80, 64.75)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 1330, 3725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10697)
[0000][PE] mean and std.dev: (2226.74, 2241.87)
[0000][PE] low and high boundaries for proper pairs: (1, 14183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 324.170 CPU sec, 53.576 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515392, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 777, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (955.82, 695.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 896, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6041)
[0000][PE] mean and std.dev: (993.33, 739.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 326.959 CPU sec, 81.891 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515129, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 863, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1354.25, 1533.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.70, 64.78)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 324.346 CPU sec, 94.420 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514612, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1550, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7616)
[0000][PE] mean and std.dev: (1683.64, 1121.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.41, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 972, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (894.69, 548.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 326.775 CPU sec, 52.013 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515098, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 968, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (1111.31, 886.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.67, 64.67)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1254, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1691.88, 1235.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 329.160 CPU sec, 78.285 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515239, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 835, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (885.15, 938.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.97, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 1022, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (1028.59, 626.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 324.164 CPU sec, 57.258 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515041, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 1110, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (938.08, 1021.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.86, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 714, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1004.47, 853.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 317.385 CPU sec, 64.890 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515701, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 331, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (609.36, 658.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.85, 64.80)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 1403, 4319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12147)
[0000][PE] mean and std.dev: (2022.23, 1956.00)
[0000][PE] low and high boundaries for proper pairs: (1, 16061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 316.062 CPU sec, 49.290 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515271, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 774, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1028.08, 849.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.82, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 1356, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6060)
[0000][PE] mean and std.dev: (1152.19, 848.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 324.505 CPU sec, 54.269 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515247, 2, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.66, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 886, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1297.20, 1292.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7921)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 320.281 CPU sec, 82.762 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515102, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 307, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1566)
[0000][PE] mean and std.dev: (473.18, 288.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.79, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1328, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1355.00, 953.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 317.877 CPU sec, 79.503 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515428, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1157, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1068.50, 731.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 966, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (904.25, 469.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 323.509 CPU sec, 79.488 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514690, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 1161, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (759.89, 792.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 325.693 CPU sec, 65.687 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514896, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.00, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1847, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1663.31, 986.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 325.615 CPU sec, 66.386 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515606, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1382, 4633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11755)
[0000][PE] mean and std.dev: (2370.77, 2375.35)
[0000][PE] low and high boundaries for proper pairs: (1, 15316)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 320.991 CPU sec, 76.789 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515305, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.79, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (422, 1047, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (893.38, 608.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 323.571 CPU sec, 90.805 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515459, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 883, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1117.55, 892.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.93, 64.67)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1670, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (1276.67, 630.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 332.088 CPU sec, 56.524 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514919, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.97, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 326.146 CPU sec, 60.092 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515641, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 514, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1029.10, 999.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.08, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 322.593 CPU sec, 63.542 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515716, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (760, 1047, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6391)
[0000][PE] mean and std.dev: (1418.23, 1187.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.81, 64.56)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 1027, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (611.44, 553.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1330, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1295.92, 781.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 317.375 CPU sec, 63.444 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515120, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (760, 2353, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8014)
[0000][PE] mean and std.dev: (1700.80, 1090.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.89, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 867, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (1095.87, 908.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 319.814 CPU sec, 51.433 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514789, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (549, 1600, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1076.33, 634.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.93, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 1421, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6542)
[0000][PE] mean and std.dev: (1380.15, 1115.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 326.549 CPU sec, 93.364 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515423, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 359, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (836.50, 988.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 945, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (1003.60, 613.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 324.495 CPU sec, 87.618 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515278, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 666, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1075.19, 1097.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 931, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (871.00, 572.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 320.501 CPU sec, 47.168 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515239, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 772, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (974.81, 947.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.76, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 1325, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4986)
[0000][PE] mean and std.dev: (1301.73, 1052.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 318.575 CPU sec, 56.418 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515802, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 1464, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6611)
[0000][PE] mean and std.dev: (1672.88, 1641.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.93, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1301, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (1280.38, 641.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 320.853 CPU sec, 58.716 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204882
	[0000][ M::kt_pipeline] read 1204882 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515230, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (738, 901, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1217.79, 784.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 601, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (583.12, 404.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 324.093 CPU sec, 72.310 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515511, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 928, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (992.10, 943.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.79, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 1404, 4226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12276)
[0000][PE] mean and std.dev: (2347.19, 3005.32)
[0000][PE] low and high boundaries for proper pairs: (1, 16301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204882 reads in 321.238 CPU sec, 62.723 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514995, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1119, 1499, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7533)
[0000][PE] mean and std.dev: (1619.38, 1127.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.72, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1662, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1553.70, 1080.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 321.755 CPU sec, 68.436 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514993, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 284, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (379.20, 370.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.82, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 2295, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (1681.07, 811.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 336.100 CPU sec, 66.681 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515284, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1149, 1496, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (1400.75, 814.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.67, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 327.081 CPU sec, 52.945 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204920
	[0000][ M::kt_pipeline] read 1204920 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515485, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1006, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (1036.25, 886.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.85, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 941, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1206.46, 701.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 327.015 CPU sec, 71.906 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515287, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 1354, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1006.15, 910.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.75, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204920 reads in 320.933 CPU sec, 48.357 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515120, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 406, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (789.54, 806.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.63, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 330.271 CPU sec, 58.971 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515278, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 380, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (755.74, 590.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.46)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 465, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (655.31, 569.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 318.595 CPU sec, 67.195 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515197, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (579, 1276, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (956.70, 493.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.65, 64.47)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 657, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (825.87, 619.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 327.683 CPU sec, 71.818 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515408, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 952, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (872.12, 666.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1227, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1030.89, 664.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 323.092 CPU sec, 67.983 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515036, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 775, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6185)
[0000][PE] mean and std.dev: (1301.76, 1410.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.53, 64.45)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1345, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (1112.50, 551.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 325.472 CPU sec, 65.574 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515500, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 276, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (594.69, 607.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.81, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1347, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6008)
[0000][PE] mean and std.dev: (1538.07, 1243.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 325.706 CPU sec, 64.886 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515419, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.46, 64.47)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1582, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (1840.62, 1313.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 330.221 CPU sec, 63.540 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514932, 6, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.52, 64.51)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1449, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (1364.06, 687.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4112)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 321.325 CPU sec, 51.776 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515159, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 871, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1073.61, 834.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.49, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 901, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (910.88, 584.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 328.218 CPU sec, 47.475 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515229, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 945, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (882.86, 644.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.38, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1225, 4056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10964)
[0000][PE] mean and std.dev: (2125.81, 2073.88)
[0000][PE] low and high boundaries for proper pairs: (1, 14418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 322.562 CPU sec, 59.948 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515004, 6, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.50, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1486, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1529.14, 972.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 318.503 CPU sec, 53.245 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515369, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 445, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6040)
[0000][PE] mean and std.dev: (847.00, 986.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.53, 64.79)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1188, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (1113.07, 542.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 319.442 CPU sec, 72.390 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515164, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (645, 1728, 3063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7899)
[0000][PE] mean and std.dev: (2103.50, 1660.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.43, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 1008, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9165)
[0000][PE] mean and std.dev: (1771.53, 1769.36)
[0000][PE] low and high boundaries for proper pairs: (1, 12143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 320.295 CPU sec, 56.318 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515518, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 832, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1012.31, 891.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.45)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1123, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1041.42, 670.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 321.608 CPU sec, 83.352 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515060, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 281, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (608.18, 540.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.68, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 1142, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7088)
[0000][PE] mean and std.dev: (1481.95, 1321.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 323.914 CPU sec, 66.493 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515247, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 564, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (938.33, 938.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.70, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 2814, 4573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13017)
[0000][PE] mean and std.dev: (2576.19, 2071.65)
[0000][PE] low and high boundaries for proper pairs: (1, 17239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 330.371 CPU sec, 55.494 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515370, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 274, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4743)
[0000][PE] mean and std.dev: (963.09, 1239.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.65, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 319.322 CPU sec, 53.055 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514826, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 1719, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7580)
[0000][PE] mean and std.dev: (1874.71, 1927.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.20, 64.23)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1491, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1332.62, 860.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 353.409 CPU sec, 62.219 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 511066, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 544, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (784.21, 557.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 348, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 560)
[0000][PE] mean and std.dev: (351.31, 64.19)
[0000][PE] low and high boundaries for proper pairs: (56, 644)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 1574, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7014)
[0000][PE] mean and std.dev: (1721.30, 1645.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 399.386 CPU sec, 65.620 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514933, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (875, 1119, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1111.82, 503.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.68, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 1367, 4669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13621)
[0000][PE] mean and std.dev: (2376.17, 2716.37)
[0000][PE] low and high boundaries for proper pairs: (1, 18097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 328.502 CPU sec, 63.519 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515399, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 531, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (638.43, 418.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.68, 64.56)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 999, 2920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8224)
[0000][PE] mean and std.dev: (1877.67, 2303.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 328.944 CPU sec, 50.437 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515411, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 1216, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (773.17, 505.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.92, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1785, 4578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12526)
[0000][PE] mean and std.dev: (2223.08, 1906.91)
[0000][PE] low and high boundaries for proper pairs: (1, 16500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 326.494 CPU sec, 58.579 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204900
	[0000][ M::kt_pipeline] read 1204900 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 514924, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 386, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (510.56, 498.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 916, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4544)
[0000][PE] mean and std.dev: (1154.50, 1062.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 324.295 CPU sec, 49.634 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 514888, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 776, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (925.90, 957.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.63, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 1089, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (857.30, 392.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204900 reads in 330.446 CPU sec, 60.790 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515393, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 888, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7722)
[0000][PE] mean and std.dev: (1231.23, 1242.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.93, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1857, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1709.86, 990.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 326.859 CPU sec, 53.990 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515628, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 330, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2022)
[0000][PE] mean and std.dev: (515.00, 453.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.56, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1800, 1851, 3831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7893)
[0000][PE] mean and std.dev: (2462.55, 1662.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 327.901 CPU sec, 58.239 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515362, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 749, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6532)
[0000][PE] mean and std.dev: (1701.37, 2045.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (152, 1391, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7712)
[0000][PE] mean and std.dev: (1623.08, 1560.17)
[0000][PE] low and high boundaries for proper pairs: (1, 10232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 332.803 CPU sec, 54.844 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515324, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 1597, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1212.08, 721.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 644, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1070.83, 1085.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 337.259 CPU sec, 61.317 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515024, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 484, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (623.35, 469.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.76)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 1030, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (961.56, 780.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 331.127 CPU sec, 59.410 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515179, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 685, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1075.50, 1273.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 876, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1158.47, 962.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 327.316 CPU sec, 57.109 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515069, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 256, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (544.25, 538.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.72, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1466, 2639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6623)
[0000][PE] mean and std.dev: (1447.93, 1009.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 327.729 CPU sec, 66.976 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204820
	[0000][ M::kt_pipeline] read 1204820 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 514947, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (833, 1628, 3188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7898)
[0000][PE] mean and std.dev: (1944.19, 1698.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 339.485 CPU sec, 58.463 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515544, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 435, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (682.54, 697.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 561)
[0000][PE] mean and std.dev: (352.26, 64.33)
[0000][PE] low and high boundaries for proper pairs: (57, 645)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 871, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (720.00, 544.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204820 reads in 407.084 CPU sec, 63.301 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514606, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 547, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (904.62, 840.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.43, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 333.772 CPU sec, 69.100 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 514981, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1122, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7093)
[0000][PE] mean and std.dev: (1675.56, 1899.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.05, 64.53)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (542, 1776, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (1450.67, 887.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 336.752 CPU sec, 48.914 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515101, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 283, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (520.88, 397.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.13, 64.36)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1498, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1426.82, 1141.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 324.833 CPU sec, 60.318 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514980, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 328, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (719.00, 751.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.04, 64.42)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 680, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (882.47, 845.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 323.406 CPU sec, 56.056 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515306, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 876, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (727.20, 607.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.18, 64.46)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 674, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (946.08, 938.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 336.156 CPU sec, 59.746 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514895, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.16, 64.42)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 988, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (820.38, 416.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 330.545 CPU sec, 56.277 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514981, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 223, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (492.58, 413.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.14, 64.50)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (178, 950, 3753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10903)
[0000][PE] mean and std.dev: (1746.82, 1797.18)
[0000][PE] low and high boundaries for proper pairs: (1, 14478)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 334.041 CPU sec, 60.659 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514924, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 502, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (763.09, 618.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.23, 64.54)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1002, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (1114.82, 632.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 333.949 CPU sec, 62.523 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514879, 0, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.10, 64.33)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 326.538 CPU sec, 55.596 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515259, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 419, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (707.81, 699.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.23, 64.60)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 2268, 4335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10619)
[0000][PE] mean and std.dev: (2626.57, 1764.81)
[0000][PE] low and high boundaries for proper pairs: (1, 13761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 331.089 CPU sec, 54.156 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515287, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1118, 1870, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1867.23, 1157.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.32, 64.75)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 987, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7826)
[0000][PE] mean and std.dev: (1600.46, 1516.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 330.330 CPU sec, 63.956 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515120, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.08, 64.59)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1257, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1311.60, 654.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 326.668 CPU sec, 60.736 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514957, 0, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (351.87, 64.45)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 1041, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8176)
[0000][PE] mean and std.dev: (1393.25, 1350.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10820)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 332.211 CPU sec, 60.391 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515116, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.29, 64.45)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 328.249 CPU sec, 63.892 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515568, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 784, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (587.07, 651.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.37, 64.65)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 777, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (878.79, 790.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 331.448 CPU sec, 57.594 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514901, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 876, 4058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11684)
[0000][PE] mean and std.dev: (1615.55, 1619.45)
[0000][PE] low and high boundaries for proper pairs: (1, 15497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (351.89, 64.30)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 977, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (942.14, 607.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 326.948 CPU sec, 56.420 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515277, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 723, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (927.59, 1035.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.49, 64.51)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 943, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (1235.73, 1088.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 333.611 CPU sec, 59.409 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515086, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 368, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (562.31, 504.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.26, 64.63)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1279, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1466.30, 950.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 333.495 CPU sec, 59.727 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515212, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 756, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5043)
[0000][PE] mean and std.dev: (903.80, 812.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.15, 64.53)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 1125, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (869.69, 536.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 326.959 CPU sec, 54.803 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515230, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.16, 64.55)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1108, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1252.17, 817.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 322.331 CPU sec, 59.640 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515111, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 458, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1906)
[0000][PE] mean and std.dev: (381.36, 268.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.14, 64.56)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 1155, 4924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14286)
[0000][PE] mean and std.dev: (2136.41, 2097.58)
[0000][PE] low and high boundaries for proper pairs: (1, 18967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 329.844 CPU sec, 62.063 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515085, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 409, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1598)
[0000][PE] mean and std.dev: (389.30, 229.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.43, 64.67)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1100, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (1062.70, 492.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 326.337 CPU sec, 73.640 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515345, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 905, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (859.80, 534.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.15, 64.45)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1453, 3788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9708)
[0000][PE] mean and std.dev: (2386.43, 1942.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 330.449 CPU sec, 59.617 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204922
	[0000][ M::kt_pipeline] read 1204922 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515335, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 428, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2520)
[0000][PE] mean and std.dev: (578.20, 433.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 561)
[0000][PE] mean and std.dev: (352.30, 64.42)
[0000][PE] low and high boundaries for proper pairs: (57, 645)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 718, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (638.10, 496.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 320.740 CPU sec, 58.091 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515284, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.16, 64.48)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1286, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5417)
[0000][PE] mean and std.dev: (1498.10, 779.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6814)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204922 reads in 320.046 CPU sec, 55.893 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515037, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 435, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7809)
[0000][PE] mean and std.dev: (835.36, 958.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.08, 64.43)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 1048, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1100.89, 1285.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 323.276 CPU sec, 58.662 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515189, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.50, 64.79)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1320, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (952.11, 511.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 326.569 CPU sec, 55.775 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 514518, 1, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.49, 64.69)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 725, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7535)
[0000][PE] mean and std.dev: (1374.41, 1372.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9940)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 326.528 CPU sec, 60.798 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515047, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (531, 919, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (945.46, 767.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.58, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 214, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (474.78, 758.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3625)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1643, 3518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8556)
[0000][PE] mean and std.dev: (1970.27, 1469.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 323.231 CPU sec, 54.686 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514948, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1153, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (910.76, 679.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.45, 64.40)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (83, 888, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6770)
[0000][PE] mean and std.dev: (973.60, 981.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8999)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 903, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1037.21, 836.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 328.220 CPU sec, 56.934 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204818
	[0000][ M::kt_pipeline] read 1204818 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515400, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 866, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5480)
[0000][PE] mean and std.dev: (943.23, 1000.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.40, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 327.008 CPU sec, 90.939 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515680, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 1007, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (802.38, 671.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.23, 64.44)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204818 reads in 324.555 CPU sec, 71.293 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515019, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 398, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (768.45, 820.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.39, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1878, 3587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8535)
[0000][PE] mean and std.dev: (2259.88, 1787.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 320.541 CPU sec, 60.244 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204686
	[0000][ M::kt_pipeline] read 1204686 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514479, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 344, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1718)
[0000][PE] mean and std.dev: (366.33, 254.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.36, 64.67)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1123, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (807.17, 455.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 321.513 CPU sec, 51.218 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 514469, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 975, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (973.57, 643.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.45, 64.44)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 389, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (872.44, 829.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204686 reads in 326.273 CPU sec, 55.760 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515128, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1283, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1031.90, 824.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.46, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1273, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (1492.85, 1282.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 334.826 CPU sec, 60.239 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204704
	[0000][ M::kt_pipeline] read 1204704 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515491, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 297, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1388)
[0000][PE] mean and std.dev: (294.25, 191.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.63, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 755, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (930.18, 816.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 328.600 CPU sec, 57.482 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514955, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 741, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (633.33, 457.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.85, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 700, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1349.93, 1183.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204704 reads in 328.170 CPU sec, 63.107 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204820
	[0000][ M::kt_pipeline] read 1204820 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514899, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (923, 1563, 3306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8072)
[0000][PE] mean and std.dev: (2043.92, 2004.06)
[0000][PE] low and high boundaries for proper pairs: (1, 10455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.58)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 329.125 CPU sec, 48.608 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515354, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1297, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4743)
[0000][PE] mean and std.dev: (1206.53, 1095.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.25, 64.47)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 855, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (835.27, 644.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204820 reads in 327.492 CPU sec, 50.691 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514908, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (864, 1230, 3446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8610)
[0000][PE] mean and std.dev: (1758.62, 1334.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.46, 64.64)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1376, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1342.00, 934.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 327.916 CPU sec, 56.610 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514862, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 335, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1817)
[0000][PE] mean and std.dev: (501.46, 448.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.58, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1404, 4273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11035)
[0000][PE] mean and std.dev: (2298.38, 2081.00)
[0000][PE] low and high boundaries for proper pairs: (1, 14416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 328.306 CPU sec, 60.255 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515723, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1095, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (961.82, 599.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.35, 64.68)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1475, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1275.50, 715.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 330.687 CPU sec, 59.398 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514914, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 1098, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1163.70, 940.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.43, 64.69)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (134, 331, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (460.81, 452.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 332.460 CPU sec, 61.748 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515195, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 217, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (829.36, 1001.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.55, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 1112, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7349)
[0000][PE] mean and std.dev: (1696.26, 1687.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 330.582 CPU sec, 55.203 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515359, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1380, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7524)
[0000][PE] mean and std.dev: (1143.67, 988.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.51, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 842, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (1017.27, 821.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 331.624 CPU sec, 57.647 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515132, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.46, 64.81)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 973, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1091.40, 842.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 332.318 CPU sec, 64.852 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513868, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 304, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (475.58, 417.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.08, 64.50)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 467, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (629.67, 505.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 361.207 CPU sec, 62.559 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515109, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.45, 64.72)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (524, 1240, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (1123.42, 840.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 326.614 CPU sec, 56.828 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514859, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.02, 64.54)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1251, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1272.31, 778.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 327.601 CPU sec, 56.408 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515202, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 300, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (853.25, 1005.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.46, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1105, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1300.38, 889.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 331.095 CPU sec, 55.034 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515485, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.44, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 1187, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1021.00, 748.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 327.137 CPU sec, 58.022 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204704
	[0000][ M::kt_pipeline] read 1204704 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515331, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.84, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1162, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1136.93, 945.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 326.342 CPU sec, 54.338 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204774
	[0000][ M::kt_pipeline] read 1204774 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515053, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 808, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7158)
[0000][PE] mean and std.dev: (1682.36, 1875.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.88, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1406, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6566)
[0000][PE] mean and std.dev: (1597.30, 1107.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204704 reads in 325.088 CPU sec, 56.699 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515788, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 984, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1043.11, 855.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1213, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1331.64, 1219.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204774 reads in 325.940 CPU sec, 55.489 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515157, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 1069, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6924)
[0000][PE] mean and std.dev: (1227.77, 1171.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.44, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 1587, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6933)
[0000][PE] mean and std.dev: (1571.94, 1239.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 326.230 CPU sec, 54.146 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515587, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 1250, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (930.87, 506.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.52, 64.72)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1463, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7171)
[0000][PE] mean and std.dev: (1765.19, 1553.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 328.633 CPU sec, 65.205 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514724, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 814, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (993.33, 812.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.58, 64.75)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1841, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5935)
[0000][PE] mean and std.dev: (1631.92, 1171.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 327.597 CPU sec, 58.977 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515073, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1010, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4983)
[0000][PE] mean and std.dev: (1311.09, 1229.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.60, 64.76)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1415, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1701.27, 1210.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 336.044 CPU sec, 59.213 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515046, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.39, 64.76)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1865, 4198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11392)
[0000][PE] mean and std.dev: (2336.60, 2245.43)
[0000][PE] low and high boundaries for proper pairs: (1, 14989)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 327.106 CPU sec, 56.169 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515151, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 1109, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (866.44, 737.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.50, 64.75)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 2109, 3371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9167)
[0000][PE] mean and std.dev: (1887.00, 1354.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 319.923 CPU sec, 50.014 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515281, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 959, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1012.00, 907.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.55, 64.79)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 330.905 CPU sec, 59.096 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204908
	[0000][ M::kt_pipeline] read 1204908 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515069, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.07, 64.53)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 332.858 CPU sec, 51.208 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515464, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.37, 64.67)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1096, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (1165.47, 815.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204908 reads in 332.189 CPU sec, 66.261 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515104, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 617, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (829.33, 885.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (351.99, 64.58)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 328.433 CPU sec, 56.888 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515696, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (891, 1323, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5682)
[0000][PE] mean and std.dev: (1853.38, 1530.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.22, 64.83)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1286, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5235)
[0000][PE] mean and std.dev: (1199.55, 697.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 330.775 CPU sec, 74.690 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514774, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 843, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (925.36, 573.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.39, 64.73)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 325.086 CPU sec, 51.180 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515092, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 816, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1014.45, 764.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (351.94, 64.51)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 362, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6173)
[0000][PE] mean and std.dev: (1126.62, 1252.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 321.022 CPU sec, 52.513 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514835, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 534, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (638.69, 518.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.27, 64.76)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 322.702 CPU sec, 48.518 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515050, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1034, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (772.85, 581.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.47, 64.81)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 981, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4732)
[0000][PE] mean and std.dev: (959.43, 692.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 327.074 CPU sec, 61.845 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515495, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 254, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (311.92, 215.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.37, 64.73)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 986, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1408.75, 1505.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 322.800 CPU sec, 57.366 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515058, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (595, 1396, 4586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12568)
[0000][PE] mean and std.dev: (2379.31, 2543.45)
[0000][PE] low and high boundaries for proper pairs: (1, 16559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.22, 64.55)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 1075, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1239.42, 859.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 325.430 CPU sec, 56.181 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515273, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 1400, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5929)
[0000][PE] mean and std.dev: (1357.43, 1157.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.48, 64.77)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 935, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (883.25, 484.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 320.360 CPU sec, 49.680 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515363, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 729, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (741.67, 540.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.27, 64.68)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1111, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6417)
[0000][PE] mean and std.dev: (1344.83, 917.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 330.752 CPU sec, 54.522 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515243, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 398, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (895.14, 927.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.38, 64.70)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 939, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1089.65, 752.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 326.420 CPU sec, 56.235 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515411, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1262, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6692)
[0000][PE] mean and std.dev: (1894.83, 2190.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.11, 64.50)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (520, 1262, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6925)
[0000][PE] mean and std.dev: (1619.00, 1552.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 328.037 CPU sec, 59.985 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515868, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.13, 64.78)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 1030, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (922.87, 723.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 324.440 CPU sec, 54.445 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204592
	[0000][ M::kt_pipeline] read 1204592 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515337, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1006, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6097)
[0000][PE] mean and std.dev: (1291.00, 1523.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.48, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 1087, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1006.25, 663.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 324.999 CPU sec, 55.654 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515147, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 1275, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7315)
[0000][PE] mean and std.dev: (1403.10, 1230.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.78, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1648, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6714)
[0000][PE] mean and std.dev: (1790.00, 1058.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204592 reads in 332.555 CPU sec, 56.288 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515106, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 881, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (702.30, 483.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.02, 64.69)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1293, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (1109.79, 479.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 332.010 CPU sec, 60.154 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 514959, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.17, 64.85)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 1357, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (1301.27, 1134.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7456)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 334.979 CPU sec, 56.232 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515201, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 574, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (821.92, 853.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.90, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 329.918 CPU sec, 53.539 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515301, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 246, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (805.14, 869.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.27, 64.82)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 579, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (808.93, 677.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 328.551 CPU sec, 54.579 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515056, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 574, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (630.27, 525.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.23, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1259, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1538.88, 1287.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 331.120 CPU sec, 57.946 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514778, 0, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.22, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 1721, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7461)
[0000][PE] mean and std.dev: (1542.55, 1611.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9865)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 326.107 CPU sec, 54.246 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515566, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (633, 1038, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1067.73, 796.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.09, 64.73)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 790, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (722.31, 534.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 327.019 CPU sec, 58.390 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514849, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 1053, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1345.14, 1005.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.99, 64.70)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 1366, 2920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7964)
[0000][PE] mean and std.dev: (1591.00, 1289.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 324.274 CPU sec, 57.349 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515278, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 1053, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (977.85, 842.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.90, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 1873, 3937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11239)
[0000][PE] mean and std.dev: (2000.20, 1758.97)
[0000][PE] low and high boundaries for proper pairs: (1, 14890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 325.361 CPU sec, 51.710 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515166, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.02, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1103, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1136.53, 439.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 326.361 CPU sec, 60.220 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515198, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 779, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2081)
[0000][PE] mean and std.dev: (566.90, 328.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.95, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1674, 1794, 3965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8547)
[0000][PE] mean and std.dev: (2223.00, 1470.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 326.209 CPU sec, 56.277 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515140, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.71, 64.73)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 1277, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1349.80, 925.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 327.150 CPU sec, 60.814 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515351, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 818, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (897.92, 780.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.01, 64.70)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 936, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1669.00, 1613.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 337.778 CPU sec, 56.081 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204582
	[0000][ M::kt_pipeline] read 1204582 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514320, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (864, 1223, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (1264.86, 746.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.29, 64.88)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 954, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1244.77, 1329.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 331.459 CPU sec, 55.161 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515078, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.48, 64.84)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1122, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1178.82, 621.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204582 reads in 322.678 CPU sec, 56.208 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204588
	[0000][ M::kt_pipeline] read 1204588 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515111, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 668, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8538)
[0000][PE] mean and std.dev: (1111.69, 1114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.48, 65.00)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 916, 4093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11691)
[0000][PE] mean and std.dev: (2024.62, 2724.11)
[0000][PE] low and high boundaries for proper pairs: (1, 15490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 326.065 CPU sec, 56.758 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514864, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 236, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (600.00, 637.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.42, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (144, 1125, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (1161.70, 1004.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204588 reads in 325.282 CPU sec, 53.012 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515509, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 751, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (900.58, 830.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 64.93)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1099, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (1131.00, 772.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 328.404 CPU sec, 55.104 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515055, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1178, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (831.08, 566.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.04, 64.71)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 1193, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (798.82, 535.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 379.451 CPU sec, 81.599 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204688
	[0000][ M::kt_pipeline] read 1204688 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515387, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 812, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1213.58, 1220.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.58, 64.84)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (395, 768, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2009)
[0000][PE] mean and std.dev: (662.00, 369.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 332.026 CPU sec, 51.326 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515052, 7, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.08, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1113, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (970.27, 366.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204688 reads in 321.114 CPU sec, 54.606 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515268, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 675, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (822.82, 565.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.14, 64.83)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1390, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5556)
[0000][PE] mean and std.dev: (1260.21, 1003.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 326.467 CPU sec, 54.105 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515401, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (794, 1009, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (1113.93, 665.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.32, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1097, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5802)
[0000][PE] mean and std.dev: (1140.83, 730.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 327.961 CPU sec, 55.068 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515087, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.14, 64.94)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 1126, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1273.11, 991.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6000)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 319.568 CPU sec, 50.273 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515395, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 394, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (546.31, 384.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.25, 65.01)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 777, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (734.37, 375.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 351.951 CPU sec, 57.713 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 514892, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 854, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (884.84, 600.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 774, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (808.82, 679.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 338.065 CPU sec, 52.743 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515095, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 1209, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1185.94, 716.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.43, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 955, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1085.11, 490.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 322.488 CPU sec, 50.021 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515574, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1116, 4911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14173)
[0000][PE] mean and std.dev: (1728.08, 1894.36)
[0000][PE] low and high boundaries for proper pairs: (1, 18804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.43, 64.82)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1436, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5965)
[0000][PE] mean and std.dev: (1204.92, 934.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 321.144 CPU sec, 49.649 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514815, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 658, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6357)
[0000][PE] mean and std.dev: (1128.80, 994.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.38, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1452, 4011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9873)
[0000][PE] mean and std.dev: (2534.08, 2625.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 328.607 CPU sec, 51.489 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515062, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 938, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (883.88, 586.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.41, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 427, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6065)
[0000][PE] mean and std.dev: (1131.08, 1142.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 326.422 CPU sec, 52.910 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515462, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 254, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (715.77, 889.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.54, 64.78)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 337.500 CPU sec, 50.744 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514963, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 331, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (501.45, 364.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.27, 64.90)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 453, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (844.67, 788.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 360.536 CPU sec, 55.028 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515229, 0, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.93, 64.81)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 325.203 CPU sec, 46.338 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515390, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 460, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (697.08, 572.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.96, 64.77)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1239, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1334.82, 816.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 328.029 CPU sec, 47.682 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515672, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1294, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5710)
[0000][PE] mean and std.dev: (1161.83, 903.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.22, 64.82)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1029, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5885)
[0000][PE] mean and std.dev: (1440.23, 1183.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 322.982 CPU sec, 52.564 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515259, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 740, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (1014.00, 903.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.35, 64.75)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 486, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (377.10, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 325.464 CPU sec, 47.108 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515559, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 995, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8382)
[0000][PE] mean and std.dev: (1798.38, 1940.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.25, 64.84)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 641, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1799)
[0000][PE] mean and std.dev: (784.91, 419.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 340.807 CPU sec, 53.426 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204732
	[0000][ M::kt_pipeline] read 1204732 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515153, 1, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.86)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1668, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (1604.75, 1025.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 357.506 CPU sec, 62.135 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515254, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.38, 64.85)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 868, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6566)
[0000][PE] mean and std.dev: (1584.53, 1769.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8661)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204732 reads in 318.057 CPU sec, 34.160 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515298, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 772, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6524)
[0000][PE] mean and std.dev: (1219.92, 1127.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.21, 64.99)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 290, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7593)
[0000][PE] mean and std.dev: (1090.73, 1099.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 323.944 CPU sec, 38.199 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515380, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 713, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1017.36, 879.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.34, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1091, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5279)
[0000][PE] mean and std.dev: (1471.00, 1222.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 318.909 CPU sec, 40.417 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515177, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (774, 1530, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1595.30, 1328.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.21, 65.00)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 1210, 3108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8314)
[0000][PE] mean and std.dev: (1579.67, 1387.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 324.056 CPU sec, 34.830 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515029, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (865, 1943, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6484)
[0000][PE] mean and std.dev: (1976.27, 1423.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.97, 64.75)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1114, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8808)
[0000][PE] mean and std.dev: (1640.08, 1611.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 319.763 CPU sec, 36.795 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515367, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 564, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (738.90, 625.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.15, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 1159, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1432.08, 1492.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 326.018 CPU sec, 41.397 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515371, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 398, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (633.46, 598.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.97, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 359.823 CPU sec, 45.348 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515195, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 978, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (1064.85, 1024.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.83, 64.89)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1298, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1240.06, 638.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 336.928 CPU sec, 37.105 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514776, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1426, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1280.50, 946.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.95, 64.65)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 942, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6112)
[0000][PE] mean and std.dev: (1180.74, 917.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 325.777 CPU sec, 40.147 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515264, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (593, 1331, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7928)
[0000][PE] mean and std.dev: (1783.84, 1697.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.03, 64.73)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 767, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (657.62, 435.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 321.244 CPU sec, 35.354 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514911, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1403, 5758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16458)
[0000][PE] mean and std.dev: (2739.79, 2913.70)
[0000][PE] low and high boundaries for proper pairs: (1, 21808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.99, 64.72)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 331.393 CPU sec, 39.835 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204724
	[0000][ M::kt_pipeline] read 1204724 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 514814, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 746, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (1028.35, 823.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 829, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1136.59, 1059.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 325.233 CPU sec, 39.238 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515065, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.40, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1250, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6310)
[0000][PE] mean and std.dev: (1613.71, 1236.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8199)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204724 reads in 330.990 CPU sec, 39.048 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515044, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 1532, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1204.00, 1227.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.35, 64.78)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1501, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1655.60, 966.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 334.738 CPU sec, 42.699 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515106, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (957, 1671, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1561.36, 1147.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.29, 64.80)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1036, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2024)
[0000][PE] mean and std.dev: (912.08, 406.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 372.914 CPU sec, 56.276 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513917, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 769, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5883)
[0000][PE] mean and std.dev: (1085.92, 1109.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.35, 64.83)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 344.062 CPU sec, 40.296 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515768, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.90)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 954, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (945.67, 536.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4121)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 325.230 CPU sec, 38.007 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 514858, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.19, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 830, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1047.36, 1004.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 325.340 CPU sec, 41.900 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515540, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 580, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2956)
[0000][PE] mean and std.dev: (685.14, 455.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.34, 64.90)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 973, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (770.38, 426.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 324.171 CPU sec, 34.194 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516156, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 1043, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6678)
[0000][PE] mean and std.dev: (1387.07, 1690.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.95, 64.81)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 859, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (999.15, 1012.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 320.059 CPU sec, 34.578 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515549, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 348, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (1102.40, 1154.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.21, 64.83)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 780, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (874.07, 672.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 323.542 CPU sec, 32.643 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515426, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 1406, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1454.18, 1332.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.99, 64.76)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 957, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1038.83, 952.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 334.521 CPU sec, 38.730 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514935, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 308, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5317)
[0000][PE] mean and std.dev: (1083.21, 1355.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.70)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1634, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6421)
[0000][PE] mean and std.dev: (1528.79, 1028.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 335.349 CPU sec, 45.217 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204486
	[0000][ M::kt_pipeline] read 1204486 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515683, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.28, 64.87)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 332.669 CPU sec, 42.476 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515717, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.47, 65.09)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 1258, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6013)
[0000][PE] mean and std.dev: (1175.92, 838.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204486 reads in 315.381 CPU sec, 34.106 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515505, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 764, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5969)
[0000][PE] mean and std.dev: (892.08, 776.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.16, 64.86)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 947, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1199.47, 1149.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 320.949 CPU sec, 35.060 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515329, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1029, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (836.00, 547.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 875, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (897.38, 667.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 324.173 CPU sec, 36.799 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515440, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 205, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (363.25, 355.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.32, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1057, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5322)
[0000][PE] mean and std.dev: (1382.33, 1010.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 321.924 CPU sec, 31.981 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515510, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 378, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (593.47, 472.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.87, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (622, 689, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1057.67, 661.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 329.360 CPU sec, 38.003 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515087, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 558, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (572.89, 408.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.91, 64.74)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 933, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1012.30, 902.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 330.520 CPU sec, 40.169 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515342, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 710, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (659.23, 413.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.08, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1363, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (1418.50, 649.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 332.463 CPU sec, 40.527 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515326, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 1040, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6289)
[0000][PE] mean and std.dev: (1389.50, 1278.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.07, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 323.586 CPU sec, 40.073 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515273, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.86, 64.85)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 316.699 CPU sec, 34.590 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515642, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.09, 64.91)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1563, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (1299.92, 828.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 325.105 CPU sec, 37.949 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204666
	[0000][ M::kt_pipeline] read 1204666 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515176, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.82, 64.80)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 1212, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1266.57, 1088.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 322.733 CPU sec, 38.760 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204590
	[0000][ M::kt_pipeline] read 1204590 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515480, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.03, 64.79)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 1024, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1015.64, 799.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204666 reads in 325.138 CPU sec, 35.651 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515805, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.03, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204590 reads in 319.390 CPU sec, 37.600 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 514991, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 1016, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1057.94, 683.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.07, 64.99)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1226, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (1609.11, 1348.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 325.361 CPU sec, 35.655 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204768
	[0000][ M::kt_pipeline] read 1204768 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515228, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 671, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7154)
[0000][PE] mean and std.dev: (1235.29, 1385.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.22, 64.98)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (396, 1161, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (995.56, 627.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 322.304 CPU sec, 42.530 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515225, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1278, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (1200.36, 1133.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.93, 64.85)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204768 reads in 322.438 CPU sec, 41.196 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515070, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (639, 1098, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1291.06, 980.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.64, 65.18)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1843, 2842, 3628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7198)
[0000][PE] mean and std.dev: (2902.13, 1862.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 329.779 CPU sec, 42.153 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514822, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (693, 2464, 3447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8955)
[0000][PE] mean and std.dev: (2189.30, 1703.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.05, 65.20)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 824, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (842.17, 485.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 319.479 CPU sec, 38.480 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 515598, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.97, 65.17)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 890, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1181.70, 1267.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 321.795 CPU sec, 39.025 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515102, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 331, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1225.82, 1146.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1083, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2562)
[0000][PE] mean and std.dev: (1039.62, 637.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 321.422 CPU sec, 37.036 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514862, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 331, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1388)
[0000][PE] mean and std.dev: (372.18, 202.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.20, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 707, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1120.85, 1136.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 325.167 CPU sec, 36.348 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515447, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.14, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 497, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (892.70, 729.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 319.668 CPU sec, 32.349 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204594
	[0000][ M::kt_pipeline] read 1204594 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515344, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 502, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1325)
[0000][PE] mean and std.dev: (413.36, 251.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.25, 65.40)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 2201, 5162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13108)
[0000][PE] mean and std.dev: (2605.33, 1969.38)
[0000][PE] low and high boundaries for proper pairs: (1, 17081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 322.176 CPU sec, 42.863 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204602
	[0000][ M::kt_pipeline] read 1204602 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515240, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.26, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 1092, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1277.41, 997.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204594 reads in 321.449 CPU sec, 44.738 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515258, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 1420, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7957)
[0000][PE] mean and std.dev: (1397.43, 1212.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.26, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1493, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6016)
[0000][PE] mean and std.dev: (1411.32, 917.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204602 reads in 322.820 CPU sec, 38.018 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204564
	[0000][ M::kt_pipeline] read 1204564 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514772, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 903, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1265.25, 1014.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.07, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 992, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4790)
[0000][PE] mean and std.dev: (1061.06, 719.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 328.528 CPU sec, 37.839 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204618
	[0000][ M::kt_pipeline] read 1204618 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515342, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 1505, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6194)
[0000][PE] mean and std.dev: (1541.93, 1037.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.33)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 1013, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1157.17, 890.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204564 reads in 322.085 CPU sec, 33.207 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514948, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 470, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6020)
[0000][PE] mean and std.dev: (1165.18, 976.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.30, 65.40)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1316, 2699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5523)
[0000][PE] mean and std.dev: (1561.45, 1209.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204618 reads in 321.291 CPU sec, 36.317 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204752
	[0000][ M::kt_pipeline] read 1204752 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515331, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.14, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1218, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1566.88, 1141.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 319.327 CPU sec, 31.933 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515477, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (580, 1271, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (1341.52, 1094.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.34, 65.45)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1647, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6868)
[0000][PE] mean and std.dev: (1887.64, 1523.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204752 reads in 315.827 CPU sec, 36.558 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514926, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.27, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 647, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (595.53, 408.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 322.015 CPU sec, 38.948 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514893, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1003, 1288, 3221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7657)
[0000][PE] mean and std.dev: (2051.00, 1792.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.33, 65.50)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 331, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (697.67, 828.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 314.812 CPU sec, 31.626 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515331, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1099, 3410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9482)
[0000][PE] mean and std.dev: (1934.69, 2215.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.61, 65.69)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 835, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (836.60, 559.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 317.177 CPU sec, 40.924 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515263, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1033, 1256, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (1755.91, 1464.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.51, 65.36)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (520, 1100, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1166.76, 769.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 321.474 CPU sec, 35.827 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515426, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1177, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1120.45, 931.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.26, 65.41)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 488, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (453.38, 183.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 319.238 CPU sec, 39.182 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515399, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.54, 65.47)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1893, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1526.83, 898.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 318.871 CPU sec, 37.255 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515171, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 671, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (737.38, 820.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.20, 65.42)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 321.773 CPU sec, 35.703 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204586
	[0000][ M::kt_pipeline] read 1204586 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514931, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1857, 4071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11311)
[0000][PE] mean and std.dev: (2013.45, 1526.37)
[0000][PE] low and high boundaries for proper pairs: (1, 14931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.31, 65.48)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 710, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (972.78, 1005.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 315.933 CPU sec, 34.869 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515662, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1164, 1773, 3555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8337)
[0000][PE] mean and std.dev: (1942.40, 1173.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.27, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 421, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1099.07, 1246.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204586 reads in 320.958 CPU sec, 35.598 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515350, 9, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.29, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1380, 2994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8314)
[0000][PE] mean and std.dev: (1612.21, 1309.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10974)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 320.437 CPU sec, 34.198 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514904, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1482, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1095.71, 827.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.25, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 1140, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8030)
[0000][PE] mean and std.dev: (1423.35, 1217.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 316.202 CPU sec, 33.644 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515017, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 933, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5551)
[0000][PE] mean and std.dev: (1045.10, 900.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.30, 65.26)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 315.665 CPU sec, 34.592 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514896, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 1011, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4548)
[0000][PE] mean and std.dev: (688.79, 590.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.21, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 322.437 CPU sec, 36.921 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204620
	[0000][ M::kt_pipeline] read 1204620 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515521, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 710, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (886.00, 809.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.08, 65.27)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 316.338 CPU sec, 31.855 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204810
	[0000][ M::kt_pipeline] read 1204810 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515175, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 945, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (957.29, 539.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.95, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1263, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (1039.33, 443.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204620 reads in 320.764 CPU sec, 47.590 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514818, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1235, 1502, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (1492.31, 655.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.80, 64.91)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1117, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (845.62, 394.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204810 reads in 318.100 CPU sec, 41.396 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514706, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 499, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (574.54, 448.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.79, 65.19)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 1280, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5782)
[0000][PE] mean and std.dev: (1277.70, 1041.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 317.981 CPU sec, 36.289 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515068, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 996, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (904.86, 436.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.68, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 1228, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (1029.81, 687.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 318.880 CPU sec, 35.839 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204702
	[0000][ M::kt_pipeline] read 1204702 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515613, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 728, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (669.00, 613.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.95, 65.20)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 650, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5891)
[0000][PE] mean and std.dev: (1239.73, 1188.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 314.342 CPU sec, 37.306 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515419, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (734, 1014, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2669)
[0000][PE] mean and std.dev: (905.50, 512.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.70, 64.94)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1120, 3025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7469)
[0000][PE] mean and std.dev: (1884.31, 1574.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204702 reads in 320.091 CPU sec, 42.073 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 514675, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1043, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1217.45, 1208.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.68, 65.15)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 808, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (776.94, 680.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 322.678 CPU sec, 40.323 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514857, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 652, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (500.38, 392.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.67, 64.92)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1010, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (905.85, 309.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 318.014 CPU sec, 33.499 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515084, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 976, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (964.89, 809.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.80, 65.18)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1141, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7786)
[0000][PE] mean and std.dev: (1668.47, 1286.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 316.352 CPU sec, 35.128 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515278, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 854, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (884.81, 632.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.70, 65.12)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1511, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (1166.12, 450.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 315.545 CPU sec, 40.267 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515473, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 945, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (715.50, 525.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.57, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1184, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6571)
[0000][PE] mean and std.dev: (1152.60, 887.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 318.001 CPU sec, 39.769 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514922, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (765, 833, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (773.56, 549.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.68, 64.87)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 319.996 CPU sec, 35.883 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515628, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 470, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (568.93, 504.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.76, 64.93)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1230, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1299.00, 664.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 319.425 CPU sec, 35.251 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204800
	[0000][ M::kt_pipeline] read 1204800 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515636, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 948, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (738.80, 407.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.73, 65.02)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 837, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (917.00, 632.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 318.406 CPU sec, 37.411 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515036, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1595, 3575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9533)
[0000][PE] mean and std.dev: (1893.08, 1594.99)
[0000][PE] low and high boundaries for proper pairs: (1, 12512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.60, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (139, 931, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (732.38, 509.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204800 reads in 321.027 CPU sec, 34.919 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515799, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 288, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2262)
[0000][PE] mean and std.dev: (389.90, 372.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.66, 65.17)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 373, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (853.07, 894.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 316.814 CPU sec, 35.336 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515513, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.65, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 437, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (509.11, 411.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 320.457 CPU sec, 38.796 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515584, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.68, 65.13)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1219, 3126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7642)
[0000][PE] mean and std.dev: (2074.00, 1869.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9900)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 322.294 CPU sec, 40.805 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515220, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 807, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2969)
[0000][PE] mean and std.dev: (662.23, 510.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.71, 65.07)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1257, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5680)
[0000][PE] mean and std.dev: (1567.91, 883.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 320.020 CPU sec, 36.313 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204690
	[0000][ M::kt_pipeline] read 1204690 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 514788, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1471, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9113)
[0000][PE] mean and std.dev: (2101.86, 2308.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.66, 64.90)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1112, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (919.71, 413.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 326.278 CPU sec, 36.298 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516007, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.88, 65.15)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204690 reads in 316.105 CPU sec, 36.752 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514763, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1534, 4226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12070)
[0000][PE] mean and std.dev: (2209.81, 2250.70)
[0000][PE] low and high boundaries for proper pairs: (1, 15992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.16)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1208, 3553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9467)
[0000][PE] mean and std.dev: (1818.95, 1815.79)
[0000][PE] low and high boundaries for proper pairs: (1, 12424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 314.659 CPU sec, 36.337 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515016, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 814, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (707.23, 530.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.14)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1441, 1597, 4384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10270)
[0000][PE] mean and std.dev: (2650.55, 2559.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 327.787 CPU sec, 34.061 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514981, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 360, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (623.46, 547.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.47, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 743, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (726.33, 555.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 322.975 CPU sec, 38.808 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514776, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 413, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6901)
[0000][PE] mean and std.dev: (1117.06, 1116.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.93)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 322.918 CPU sec, 46.170 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204882
	[0000][ M::kt_pipeline] read 1204882 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514814, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 580, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (857.93, 1024.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.61, 65.17)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1186, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (863.73, 484.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 322.220 CPU sec, 34.745 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515524, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.15)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1152, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1136.08, 620.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204882 reads in 317.641 CPU sec, 40.810 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515372, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (852, 1079, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (856.43, 382.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.80, 64.90)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1127, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1246.91, 780.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 320.115 CPU sec, 38.824 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204626
	[0000][ M::kt_pipeline] read 1204626 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515421, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.87, 65.34)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 1058, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (761.31, 645.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 315.606 CPU sec, 44.597 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514561, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1401, 5353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15335)
[0000][PE] mean and std.dev: (2578.67, 2800.45)
[0000][PE] low and high boundaries for proper pairs: (1, 20326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.77, 64.99)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (85, 2199, 4293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12709)
[0000][PE] mean and std.dev: (2231.90, 2001.14)
[0000][PE] low and high boundaries for proper pairs: (1, 16917)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 959, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (1046.27, 874.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204626 reads in 323.771 CPU sec, 40.442 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515253, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 1841, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7888)
[0000][PE] mean and std.dev: (1749.21, 1246.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.89, 65.28)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 900, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (803.85, 541.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 324.912 CPU sec, 34.368 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204704
	[0000][ M::kt_pipeline] read 1204704 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515055, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 261, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (570.42, 493.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.79, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1513, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (1415.00, 688.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 333.255 CPU sec, 35.855 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515466, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1046, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (973.25, 834.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.62, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 943, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (924.42, 583.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204704 reads in 313.592 CPU sec, 38.459 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515094, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 450, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (556.94, 542.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.55, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1086, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7621)
[0000][PE] mean and std.dev: (1656.65, 1667.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 318.371 CPU sec, 38.971 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515696, 1, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1337, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (1184.06, 669.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 320.896 CPU sec, 38.881 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515792, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (562, 1238, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (1400.43, 944.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.65, 65.14)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1361, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (851.00, 510.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 311.998 CPU sec, 36.491 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515570, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (930, 994, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (1066.60, 535.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.56, 65.13)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 1013, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6530)
[0000][PE] mean and std.dev: (1178.93, 1018.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 320.405 CPU sec, 41.150 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515205, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (806, 1197, 3436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8696)
[0000][PE] mean and std.dev: (2277.31, 2783.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.61, 65.14)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 1349, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (1087.50, 893.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7269)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 2038, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7335)
[0000][PE] mean and std.dev: (1962.06, 1924.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 319.368 CPU sec, 33.506 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515510, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.46, 65.13)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1573, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5252)
[0000][PE] mean and std.dev: (1741.31, 988.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 317.058 CPU sec, 41.436 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515390, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 618, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8153)
[0000][PE] mean and std.dev: (1670.15, 1942.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.64, 65.15)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 928, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1087.20, 897.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 317.336 CPU sec, 40.031 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515090, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 2268, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7786)
[0000][PE] mean and std.dev: (1552.90, 1207.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.73, 64.96)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 589, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (787.00, 595.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 317.443 CPU sec, 41.372 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204790
	[0000][ M::kt_pipeline] read 1204790 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515237, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1174, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5696)
[0000][PE] mean and std.dev: (1494.47, 946.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7263)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 319.844 CPU sec, 37.525 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204692
	[0000][ M::kt_pipeline] read 1204692 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515475, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1250, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7336)
[0000][PE] mean and std.dev: (1436.40, 1234.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.62, 64.93)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1053, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2217)
[0000][PE] mean and std.dev: (771.44, 393.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204790 reads in 316.833 CPU sec, 30.179 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1204610
	[0000][ M::kt_pipeline] read 1204610 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515458, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 691, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (915.69, 1032.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.49, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 809, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (752.64, 534.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204692 reads in 317.371 CPU sec, 40.429 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515732, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 632, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (695.83, 505.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.38, 65.09)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 1239, 3051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8327)
[0000][PE] mean and std.dev: (1627.67, 1315.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204610 reads in 320.381 CPU sec, 35.588 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515255, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1171, 1500, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6091)
[0000][PE] mean and std.dev: (2051.09, 1246.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.57, 65.06)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 1346, 5824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16902)
[0000][PE] mean and std.dev: (2491.79, 2730.94)
[0000][PE] low and high boundaries for proper pairs: (1, 22441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 319.331 CPU sec, 33.064 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204662
	[0000][ M::kt_pipeline] read 1204662 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515642, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.45, 65.01)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 1352, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1477.60, 1030.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7821)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 318.140 CPU sec, 36.723 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515877, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (954, 1475, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6147)
[0000][PE] mean and std.dev: (1760.64, 973.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.53, 65.08)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1237, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1554.56, 1003.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204662 reads in 317.004 CPU sec, 35.298 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515728, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 298, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (555.36, 519.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.42, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1629, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6203)
[0000][PE] mean and std.dev: (1779.54, 1024.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 316.917 CPU sec, 39.406 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204488
	[0000][ M::kt_pipeline] read 1204488 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514808, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.78, 65.01)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1237, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1323.93, 636.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 318.574 CPU sec, 30.369 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515693, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1308, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (1679.67, 1579.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.81, 65.12)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1206, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (1116.14, 580.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204488 reads in 315.729 CPU sec, 39.229 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204736
	[0000][ M::kt_pipeline] read 1204736 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515797, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 825, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6763)
[0000][PE] mean and std.dev: (1444.95, 1450.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.76, 65.25)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 994, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2122)
[0000][PE] mean and std.dev: (947.85, 411.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 320.357 CPU sec, 36.207 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204604
	[0000][ M::kt_pipeline] read 1204604 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514957, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 932, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (873.53, 635.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.44, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 404, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (545.00, 474.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204736 reads in 317.483 CPU sec, 37.970 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204638
	[0000][ M::kt_pipeline] read 1204638 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515517, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 253, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5237)
[0000][PE] mean and std.dev: (675.92, 740.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.52, 65.09)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 821, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (820.42, 675.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204604 reads in 321.659 CPU sec, 37.065 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514913, 8, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.55, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 824, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (725.88, 520.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5847)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204638 reads in 326.586 CPU sec, 38.248 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515129, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1530, 4129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11807)
[0000][PE] mean and std.dev: (2558.70, 3067.47)
[0000][PE] low and high boundaries for proper pairs: (1, 15646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.16)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1589, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6980)
[0000][PE] mean and std.dev: (1408.17, 1100.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 322.893 CPU sec, 40.859 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204632
	[0000][ M::kt_pipeline] read 1204632 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515128, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 740, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (898.23, 655.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.81, 65.07)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1065, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1316.50, 1069.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 316.243 CPU sec, 36.154 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204694
	[0000][ M::kt_pipeline] read 1204694 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515024, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 976, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1160.15, 911.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.76, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1157, 4733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12365)
[0000][PE] mean and std.dev: (2235.50, 1966.15)
[0000][PE] low and high boundaries for proper pairs: (1, 16181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204632 reads in 321.830 CPU sec, 35.540 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515460, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 717, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (820.94, 677.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.72, 65.14)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 726, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (778.71, 617.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204694 reads in 320.016 CPU sec, 37.666 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515272, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 1364, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (876.50, 606.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.66, 65.16)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1384, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6478)
[0000][PE] mean and std.dev: (1700.42, 1379.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 321.753 CPU sec, 39.222 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204652
	[0000][ M::kt_pipeline] read 1204652 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515304, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 291, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1323)
[0000][PE] mean and std.dev: (323.58, 260.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.96, 65.40)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 322.628 CPU sec, 42.638 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515252, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 907, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1050.40, 877.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.19)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 897, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (894.85, 739.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204652 reads in 317.896 CPU sec, 41.824 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515378, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 235, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 725)
[0000][PE] mean and std.dev: (263.67, 75.76)
[0000][PE] low and high boundaries for proper pairs: (1, 897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.76, 65.19)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1522, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5619)
[0000][PE] mean and std.dev: (1666.67, 1299.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 322.023 CPU sec, 36.758 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515316, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (611, 995, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (999.56, 574.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.97, 65.36)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1123, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1168.36, 827.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 314.584 CPU sec, 38.324 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515372, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (565, 1039, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (935.36, 559.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.05, 65.29)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 1064, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1053.17, 849.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 318.128 CPU sec, 38.071 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204598
	[0000][ M::kt_pipeline] read 1204598 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515032, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.14, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1077, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7815)
[0000][PE] mean and std.dev: (1820.82, 1762.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10183)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 317.168 CPU sec, 37.139 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204840
	[0000][ M::kt_pipeline] read 1204840 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515672, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 891, 4768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13620)
[0000][PE] mean and std.dev: (2228.25, 2764.46)
[0000][PE] low and high boundaries for proper pairs: (1, 18046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.96, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 822, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (843.80, 403.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204598 reads in 316.580 CPU sec, 32.848 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 514611, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (616, 1291, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5812)
[0000][PE] mean and std.dev: (1268.68, 845.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.15, 65.37)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 1024, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6382)
[0000][PE] mean and std.dev: (1409.79, 1233.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204840 reads in 315.434 CPU sec, 34.009 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515280, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 902, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6552)
[0000][PE] mean and std.dev: (1251.86, 1123.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.97, 65.24)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 3074, 4948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12962)
[0000][PE] mean and std.dev: (2758.75, 2102.27)
[0000][PE] low and high boundaries for proper pairs: (1, 16969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 318.445 CPU sec, 38.614 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515174, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.36)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 961, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6400)
[0000][PE] mean and std.dev: (1598.89, 1690.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8401)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 323.299 CPU sec, 37.147 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204820
	[0000][ M::kt_pipeline] read 1204820 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515285, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 915, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (674.14, 374.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.03, 65.41)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1737, 3196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7474)
[0000][PE] mean and std.dev: (1992.75, 1164.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 316.122 CPU sec, 37.967 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514968, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 883, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6718)
[0000][PE] mean and std.dev: (1240.56, 1373.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.08, 65.39)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (468, 864, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (827.11, 447.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204820 reads in 320.933 CPU sec, 37.493 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515327, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 883, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6787)
[0000][PE] mean and std.dev: (1355.85, 1344.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1398, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7305)
[0000][PE] mean and std.dev: (1160.56, 884.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 312.982 CPU sec, 38.982 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515233, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1644, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8549)
[0000][PE] mean and std.dev: (1737.62, 1359.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.37, 65.48)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 768, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (740.81, 459.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 314.998 CPU sec, 31.022 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515315, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 587, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (518.50, 351.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.73, 65.58)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1166, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1243.29, 956.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 319.943 CPU sec, 39.584 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514672, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (657, 993, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (798.83, 413.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 571)
[0000][PE] mean and std.dev: (354.75, 65.61)
[0000][PE] low and high boundaries for proper pairs: (49, 658)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 326, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (801.93, 960.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 323.190 CPU sec, 42.389 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515080, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1177, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1176.94, 1020.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.44, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 887, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (758.64, 483.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 317.720 CPU sec, 37.804 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515489, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 512, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9575)
[0000][PE] mean and std.dev: (1476.87, 1541.22)
[0000][PE] low and high boundaries for proper pairs: (1, 12682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.57, 65.40)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1106, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1622.53, 1437.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 320.250 CPU sec, 33.459 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514741, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 453, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (690.17, 554.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 1248, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (878.18, 701.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 317.760 CPU sec, 35.832 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514778, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 747, 5351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15517)
[0000][PE] mean and std.dev: (2037.25, 2161.47)
[0000][PE] low and high boundaries for proper pairs: (1, 20600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.37, 65.42)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 1018, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (953.20, 542.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 325.429 CPU sec, 39.269 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515407, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 984, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1227.57, 1227.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.23, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 937, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8660)
[0000][PE] mean and std.dev: (1335.12, 1222.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 319.811 CPU sec, 38.028 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204712
	[0000][ M::kt_pipeline] read 1204712 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515416, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 695, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (708.53, 571.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.05, 65.49)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 2551, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (2170.00, 1390.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 322.824 CPU sec, 38.647 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515189, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 968, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (804.27, 623.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.39, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 944, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (654.09, 472.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204712 reads in 318.451 CPU sec, 40.870 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515225, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 450, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (456.77, 364.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.15, 65.42)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 318.047 CPU sec, 43.113 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515410, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1002, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8170)
[0000][PE] mean and std.dev: (1637.36, 1790.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.12, 65.39)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 387, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (759.76, 702.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 318.470 CPU sec, 33.606 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204882
	[0000][ M::kt_pipeline] read 1204882 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515080, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (752, 1313, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7412)
[0000][PE] mean and std.dev: (1626.00, 1113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.15, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 767, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (725.24, 646.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 314.432 CPU sec, 35.987 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514704, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.02, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204882 reads in 318.811 CPU sec, 43.042 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515629, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.17, 65.48)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1966, 2736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6666)
[0000][PE] mean and std.dev: (1530.83, 935.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8631)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 312.110 CPU sec, 40.057 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204710
	[0000][ M::kt_pipeline] read 1204710 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515085, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 340, 3406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9690)
[0000][PE] mean and std.dev: (1641.73, 2055.85)
[0000][PE] low and high boundaries for proper pairs: (1, 12832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.24, 65.26)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 315.643 CPU sec, 38.489 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515061, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1116, 3345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9437)
[0000][PE] mean and std.dev: (1789.42, 2027.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.20, 65.40)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 402, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (901.59, 936.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204710 reads in 320.834 CPU sec, 35.578 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204654
	[0000][ M::kt_pipeline] read 1204654 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514905, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1006, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7279)
[0000][PE] mean and std.dev: (1212.00, 1149.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.14, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 2204, 3392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8250)
[0000][PE] mean and std.dev: (2729.68, 2158.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 314.873 CPU sec, 37.902 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515127, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (725, 1397, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (1016.71, 632.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.35)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 591, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5906)
[0000][PE] mean and std.dev: (971.12, 878.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204654 reads in 320.964 CPU sec, 32.884 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515280, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 1155, 4481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13015)
[0000][PE] mean and std.dev: (2057.00, 2075.03)
[0000][PE] low and high boundaries for proper pairs: (1, 17282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.08, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1595, 3052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6686)
[0000][PE] mean and std.dev: (1905.94, 1536.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 317.002 CPU sec, 34.715 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515267, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (935, 1630, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (1304.33, 674.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.20, 65.33)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 1278, 4380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12346)
[0000][PE] mean and std.dev: (2123.28, 2376.40)
[0000][PE] low and high boundaries for proper pairs: (1, 16329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 318.388 CPU sec, 30.016 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204788
	[0000][ M::kt_pipeline] read 1204788 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515489, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 608, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (936.18, 670.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.15, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 1113, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (1161.14, 817.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 317.470 CPU sec, 29.158 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515066, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 891, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (914.46, 595.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 1005, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (1018.29, 696.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204788 reads in 317.952 CPU sec, 31.918 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515279, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 805, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (1366.85, 1422.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.21)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1116, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (1088.67, 430.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 316.119 CPU sec, 30.003 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 514963, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 1142, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1289.85, 1247.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 941, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (834.00, 743.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 316.807 CPU sec, 29.065 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515741, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 680, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (919.73, 903.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.94, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1259, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (221, 2471)
[0000][PE] mean and std.dev: (1345.50, 382.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 313.139 CPU sec, 29.439 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204852
	[0000][ M::kt_pipeline] read 1204852 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515394, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 557, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (669.50, 720.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1078, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (1039.75, 421.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 318.877 CPU sec, 29.613 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515635, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (707, 1198, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8471)
[0000][PE] mean and std.dev: (1513.69, 1189.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.93, 65.44)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204852 reads in 318.027 CPU sec, 32.055 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515353, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 420, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7379)
[0000][PE] mean and std.dev: (1293.27, 1427.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.72, 65.36)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1201, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (1177.56, 527.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 323.932 CPU sec, 34.086 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514849, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 420, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (660.38, 608.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.62, 65.20)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 984, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1318.00, 1246.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 316.077 CPU sec, 24.489 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204722
	[0000][ M::kt_pipeline] read 1204722 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515188, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 968, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7286)
[0000][PE] mean and std.dev: (1448.19, 1480.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.94, 65.43)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 1080, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (1091.70, 865.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 315.726 CPU sec, 26.145 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204922
	[0000][ M::kt_pipeline] read 1204922 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515562, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 952, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (982.15, 754.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.95, 65.44)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1081, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (1101.00, 660.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204722 reads in 313.625 CPU sec, 30.849 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515045, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 713, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (662.88, 479.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.59, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 815, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (1312.27, 1065.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204922 reads in 315.062 CPU sec, 27.141 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204802
	[0000][ M::kt_pipeline] read 1204802 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515470, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1429, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6355)
[0000][PE] mean and std.dev: (1418.50, 1207.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.60, 65.23)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1269, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7583)
[0000][PE] mean and std.dev: (1590.54, 1067.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 319.022 CPU sec, 31.244 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515297, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 876, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1233.29, 1014.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (354.03, 65.57)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 791, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (765.85, 583.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204802 reads in 323.290 CPU sec, 35.484 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515090, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 1088, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1178.22, 1065.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.98, 65.33)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 323.248 CPU sec, 31.153 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204896
	[0000][ M::kt_pipeline] read 1204896 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514978, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 553, 2989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8677)
[0000][PE] mean and std.dev: (1135.38, 1352.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.85, 65.21)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1143, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5883)
[0000][PE] mean and std.dev: (1259.56, 862.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 318.817 CPU sec, 33.580 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515326, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 736, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (852.27, 540.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.00, 65.38)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 945, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5700)
[0000][PE] mean and std.dev: (1402.36, 1302.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204896 reads in 320.975 CPU sec, 28.569 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515436, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 703, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (873.50, 911.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.93, 65.28)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 878, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (982.75, 929.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 314.513 CPU sec, 27.748 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515702, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (716, 1152, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1489.90, 1081.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.76, 64.99)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1324, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1343.13, 907.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 315.519 CPU sec, 30.899 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515255, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 285, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (823.22, 872.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.90, 65.14)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 267, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (712.88, 649.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 313.118 CPU sec, 30.612 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515113, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 1109, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (585.50, 420.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.11, 65.26)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 270, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (797.54, 1049.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 318.144 CPU sec, 26.383 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204922
	[0000][ M::kt_pipeline] read 1204922 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514864, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 392, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1657)
[0000][PE] mean and std.dev: (424.15, 241.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.73, 65.19)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 333.449 CPU sec, 31.529 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514317, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 786, 2928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8354)
[0000][PE] mean and std.dev: (1400.44, 1484.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.95, 65.42)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 1960, 3613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10327)
[0000][PE] mean and std.dev: (2446.75, 2571.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204922 reads in 331.410 CPU sec, 30.055 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515174, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 398, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (901.25, 1091.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.46, 65.18)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 320.450 CPU sec, 31.795 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204900
	[0000][ M::kt_pipeline] read 1204900 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515132, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 877, 4691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13567)
[0000][PE] mean and std.dev: (1722.25, 1979.87)
[0000][PE] low and high boundaries for proper pairs: (1, 18005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.94, 65.48)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 1093, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (1041.00, 931.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 316.432 CPU sec, 28.701 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515218, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.96, 65.50)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 943, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (956.90, 684.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204900 reads in 316.718 CPU sec, 28.018 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515277, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 266, 3862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11262)
[0000][PE] mean and std.dev: (1332.38, 1717.67)
[0000][PE] low and high boundaries for proper pairs: (1, 14962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.90, 65.44)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 317.598 CPU sec, 31.162 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204696
	[0000][ M::kt_pipeline] read 1204696 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514941, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 586, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1987)
[0000][PE] mean and std.dev: (548.06, 331.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.72, 65.35)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 1258, 3667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10291)
[0000][PE] mean and std.dev: (2426.88, 2707.31)
[0000][PE] low and high boundaries for proper pairs: (1, 13603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 320.368 CPU sec, 28.129 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515072, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1098, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5869)
[0000][PE] mean and std.dev: (1148.40, 867.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.92, 65.50)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 888, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (927.12, 640.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204696 reads in 318.694 CPU sec, 29.949 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204876
	[0000][ M::kt_pipeline] read 1204876 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515405, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 794, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (997.25, 900.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.92, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 898, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (894.13, 545.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 321.432 CPU sec, 31.357 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515890, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 1094, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (877.64, 541.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.81, 65.29)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 801, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (653.40, 414.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204876 reads in 313.241 CPU sec, 28.462 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204670
	[0000][ M::kt_pipeline] read 1204670 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514976, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 1103, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1096.80, 915.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.05, 65.44)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1042, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (1295.89, 801.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 321.104 CPU sec, 25.669 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515080, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (605, 1033, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (1085.86, 844.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.82, 65.52)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 1551, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10212)
[0000][PE] mean and std.dev: (2046.86, 2243.19)
[0000][PE] low and high boundaries for proper pairs: (1, 13535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204670 reads in 321.899 CPU sec, 30.058 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204658
	[0000][ M::kt_pipeline] read 1204658 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515723, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 1145, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (965.70, 604.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.68, 65.32)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1481, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1217.12, 661.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 314.477 CPU sec, 32.297 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515543, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 684, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (839.14, 564.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.81, 65.48)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (330, 1066, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (1102.58, 902.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204658 reads in 322.188 CPU sec, 32.941 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515350, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1099, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1003.55, 742.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 570)
[0000][PE] mean and std.dev: (353.89, 65.49)
[0000][PE] low and high boundaries for proper pairs: (48, 657)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 1901, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1128.07, 853.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 317.083 CPU sec, 33.195 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 514890, 0, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.92, 65.30)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 322.122 CPU sec, 29.196 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515174, 5, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.00, 65.37)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 852, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (844.16, 549.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 323.890 CPU sec, 37.634 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204518
	[0000][ M::kt_pipeline] read 1204518 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515477, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 755, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (591.07, 390.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.10, 65.36)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 1278, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5791)
[0000][PE] mean and std.dev: (1204.81, 867.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 319.705 CPU sec, 30.191 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204672
	[0000][ M::kt_pipeline] read 1204672 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515063, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 685, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5621)
[0000][PE] mean and std.dev: (1073.78, 1326.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.48, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 947, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1186.82, 796.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204518 reads in 325.222 CPU sec, 29.390 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204816
	[0000][ M::kt_pipeline] read 1204816 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515093, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 733, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (630.44, 338.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.35, 65.05)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1243, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1265.89, 692.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204672 reads in 326.937 CPU sec, 33.707 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204580
	[0000][ M::kt_pipeline] read 1204580 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515018, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 739, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5759)
[0000][PE] mean and std.dev: (1560.00, 1558.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.79, 64.98)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 1001, 3866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11224)
[0000][PE] mean and std.dev: (2031.00, 2450.48)
[0000][PE] low and high boundaries for proper pairs: (1, 14903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204816 reads in 325.150 CPU sec, 33.804 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515299, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1287, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6104)
[0000][PE] mean and std.dev: (1128.60, 853.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.16)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1426, 3025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8243)
[0000][PE] mean and std.dev: (1589.93, 1290.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204580 reads in 323.117 CPU sec, 33.948 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204730
	[0000][ M::kt_pipeline] read 1204730 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515182, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.57, 64.77)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1359, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6090)
[0000][PE] mean and std.dev: (1557.47, 1282.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7874)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 321.096 CPU sec, 27.444 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515350, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (766, 2004, 3107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7789)
[0000][PE] mean and std.dev: (2059.00, 1794.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.64, 65.03)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1536, 3931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10063)
[0000][PE] mean and std.dev: (2626.27, 2883.96)
[0000][PE] low and high boundaries for proper pairs: (1, 14162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204730 reads in 321.159 CPU sec, 35.194 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515109, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1222, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7915)
[0000][PE] mean and std.dev: (1827.33, 1782.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.47, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 335, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6986)
[0000][PE] mean and std.dev: (1195.00, 1320.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 334.134 CPU sec, 29.891 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515283, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 737, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (955.93, 726.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.38, 64.88)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 321.180 CPU sec, 28.768 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204706
	[0000][ M::kt_pipeline] read 1204706 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515149, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 1037, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (912.15, 819.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.60, 64.98)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 1546, 4287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12257)
[0000][PE] mean and std.dev: (2270.69, 2066.11)
[0000][PE] low and high boundaries for proper pairs: (1, 16242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 325.701 CPU sec, 27.334 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515303, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.76, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 968, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (631.89, 500.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204706 reads in 319.616 CPU sec, 28.853 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515242, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 916, 3298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9194)
[0000][PE] mean and std.dev: (1678.20, 1773.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.69, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 1090, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1131.07, 855.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 324.226 CPU sec, 31.151 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515581, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1050, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6274)
[0000][PE] mean and std.dev: (1280.70, 1155.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.85, 65.10)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 986, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8664)
[0000][PE] mean and std.dev: (1701.61, 1643.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 324.660 CPU sec, 32.288 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515471, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 731, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (979.40, 951.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 64.98)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 322.950 CPU sec, 28.177 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204708
	[0000][ M::kt_pipeline] read 1204708 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515200, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 785, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (826.55, 679.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.52, 65.12)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 1124, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (1072.81, 776.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 323.621 CPU sec, 32.630 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515407, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (765, 1284, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6702)
[0000][PE] mean and std.dev: (1760.82, 1454.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.52, 65.10)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 693, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (874.14, 492.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204708 reads in 320.861 CPU sec, 31.001 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515597, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 694, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5033)
[0000][PE] mean and std.dev: (927.89, 797.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.63, 65.28)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 970, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6549)
[0000][PE] mean and std.dev: (1338.65, 1135.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 328.677 CPU sec, 33.346 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204640
	[0000][ M::kt_pipeline] read 1204640 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515006, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 412, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (573.88, 591.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.52, 65.22)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 768, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (767.50, 556.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 332.752 CPU sec, 32.174 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515010, 11, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1225, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1114.00, 764.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.53, 65.27)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (246, 590, 5488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15972)
[0000][PE] mean and std.dev: (2591.64, 3001.79)
[0000][PE] low and high boundaries for proper pairs: (1, 21214)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 905, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1055.91, 766.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204640 reads in 343.327 CPU sec, 34.878 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204576
	[0000][ M::kt_pipeline] read 1204576 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514881, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 558, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1020.00, 912.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.14)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 1010, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (1009.61, 814.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 321.060 CPU sec, 31.880 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204728
	[0000][ M::kt_pipeline] read 1204728 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 514933, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 957, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (901.77, 625.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.82, 64.89)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204576 reads in 323.841 CPU sec, 32.638 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204646
	[0000][ M::kt_pipeline] read 1204646 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514842, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 458, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (765.71, 833.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.05, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1133, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4902)
[0000][PE] mean and std.dev: (959.87, 663.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204728 reads in 327.120 CPU sec, 33.492 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515288, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 804, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (813.25, 618.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.01, 65.13)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1576, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1312.14, 660.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204646 reads in 320.808 CPU sec, 31.144 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515528, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 367, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (754.71, 672.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.93, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1045, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1309.67, 823.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 324.384 CPU sec, 31.043 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204860
	[0000][ M::kt_pipeline] read 1204860 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515720, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1185, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1631.33, 1566.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.04, 65.15)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1670, 2801, 4937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11471)
[0000][PE] mean and std.dev: (3321.36, 2326.18)
[0000][PE] low and high boundaries for proper pairs: (1, 14738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 328.253 CPU sec, 32.965 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514880, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 698, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (945.00, 868.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.73, 64.89)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 787, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1057.62, 933.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204860 reads in 322.730 CPU sec, 36.115 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204740
	[0000][ M::kt_pipeline] read 1204740 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515746, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (728, 1233, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1648.40, 1209.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.99, 65.32)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 911, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1036.15, 959.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 325.318 CPU sec, 29.898 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204768
	[0000][ M::kt_pipeline] read 1204768 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515197, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 610, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (947.50, 1192.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1452, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7924)
[0000][PE] mean and std.dev: (1969.47, 1700.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204740 reads in 328.017 CPU sec, 32.934 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515030, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 258, 3829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11067)
[0000][PE] mean and std.dev: (1684.09, 2415.96)
[0000][PE] low and high boundaries for proper pairs: (1, 14686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.89, 65.24)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204768 reads in 318.460 CPU sec, 26.763 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515425, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 1048, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1489.09, 1381.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.66, 65.18)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1350, 1383, 4003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9309)
[0000][PE] mean and std.dev: (2257.18, 1636.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 320.685 CPU sec, 37.413 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204812
	[0000][ M::kt_pipeline] read 1204812 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515456, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.78, 65.13)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 973, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2331)
[0000][PE] mean and std.dev: (940.09, 427.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2824)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 315.392 CPU sec, 30.530 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515265, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.79, 65.25)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 1371, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6955)
[0000][PE] mean and std.dev: (1528.71, 1337.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9202)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204812 reads in 321.512 CPU sec, 34.520 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204616
	[0000][ M::kt_pipeline] read 1204616 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515370, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 743, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (744.00, 624.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.99, 65.31)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1414, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7262)
[0000][PE] mean and std.dev: (1573.83, 1223.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 319.661 CPU sec, 28.848 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204660
	[0000][ M::kt_pipeline] read 1204660 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515314, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 847, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (819.30, 648.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.14, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 961, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (892.00, 620.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204616 reads in 329.347 CPU sec, 33.496 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204868
	[0000][ M::kt_pipeline] read 1204868 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515055, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.12, 65.16)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1102, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (1112.23, 695.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204660 reads in 328.483 CPU sec, 35.486 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514832, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 483, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (573.00, 409.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.18, 65.17)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 895, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (1039.44, 1007.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204868 reads in 322.396 CPU sec, 33.184 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515177, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 1495, 5141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15099)
[0000][PE] mean and std.dev: (2357.50, 2545.22)
[0000][PE] low and high boundaries for proper pairs: (1, 20078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.11)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1621, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9473)
[0000][PE] mean and std.dev: (1744.40, 1580.37)
[0000][PE] low and high boundaries for proper pairs: (1, 12358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 318.738 CPU sec, 34.240 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 514928, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1655, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (993.25, 672.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.05, 65.22)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1644, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1845.07, 1171.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 324.554 CPU sec, 33.701 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204796
	[0000][ M::kt_pipeline] read 1204796 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515092, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.98, 65.18)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1463, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (1153.09, 375.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3594)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 330.285 CPU sec, 36.701 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204856
	[0000][ M::kt_pipeline] read 1204856 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515059, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 881, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6761)
[0000][PE] mean and std.dev: (1295.60, 1115.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.32, 65.17)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1396, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1497.92, 961.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204796 reads in 325.029 CPU sec, 31.401 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515523, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 428, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1019.58, 1322.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.02, 65.09)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 803, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (660.36, 383.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204856 reads in 318.615 CPU sec, 30.653 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204748
	[0000][ M::kt_pipeline] read 1204748 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515350, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (996, 1663, 2831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6501)
[0000][PE] mean and std.dev: (1998.45, 1746.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (354.03, 65.20)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1053, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6589)
[0000][PE] mean and std.dev: (1434.07, 1162.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 329.694 CPU sec, 31.085 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204820
	[0000][ M::kt_pipeline] read 1204820 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515127, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 821, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1396.64, 1557.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.80, 65.06)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 286, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2568)
[0000][PE] mean and std.dev: (604.09, 477.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204748 reads in 324.526 CPU sec, 28.651 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 514845, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.80, 64.81)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 1008, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1314.29, 1138.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6630)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204820 reads in 320.838 CPU sec, 29.237 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514992, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 382, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1110.80, 1219.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.77, 65.01)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1687, 3377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8549)
[0000][PE] mean and std.dev: (2126.83, 1987.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 320.429 CPU sec, 31.045 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514887, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 388, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (810.00, 929.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.88, 65.03)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1011, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1213.11, 737.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 324.491 CPU sec, 33.697 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204684
	[0000][ M::kt_pipeline] read 1204684 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515157, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 938, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1135.50, 1147.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.66, 64.79)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1469, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6055)
[0000][PE] mean and std.dev: (1772.69, 1456.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 325.060 CPU sec, 34.391 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204894
	[0000][ M::kt_pipeline] read 1204894 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515178, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 336, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (789.31, 834.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.82, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204684 reads in 315.003 CPU sec, 29.052 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515141, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 544, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1129.60, 1194.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 568)
[0000][PE] mean and std.dev: (353.96, 65.03)
[0000][PE] low and high boundaries for proper pairs: (52, 654)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1171, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8524)
[0000][PE] mean and std.dev: (1917.33, 2316.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204894 reads in 317.729 CPU sec, 29.476 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515532, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 383, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (459.12, 373.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 351, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.88, 64.87)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 1030, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6860)
[0000][PE] mean and std.dev: (1379.56, 1122.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 321.071 CPU sec, 28.586 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514779, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 556, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (591.27, 550.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.81, 64.86)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 715, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (841.92, 612.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 327.023 CPU sec, 34.259 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514838, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (776, 1244, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1234.40, 844.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.65, 65.09)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1071, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (1217.21, 778.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 316.114 CPU sec, 29.022 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204608
	[0000][ M::kt_pipeline] read 1204608 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515391, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (859, 1134, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1183.42, 716.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.62, 65.10)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 1056, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (965.71, 932.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 319.522 CPU sec, 31.732 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515526, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1258, 4564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12880)
[0000][PE] mean and std.dev: (1914.08, 1790.37)
[0000][PE] low and high boundaries for proper pairs: (1, 17038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (310, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 565)
[0000][PE] mean and std.dev: (353.55, 64.83)
[0000][PE] low and high boundaries for proper pairs: (55, 650)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1229, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5885)
[0000][PE] mean and std.dev: (1525.76, 1154.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204608 reads in 320.444 CPU sec, 30.821 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514725, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 684, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (621.43, 445.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.55, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1525, 3203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7145)
[0000][PE] mean and std.dev: (2082.60, 1269.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 322.721 CPU sec, 32.518 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204718
	[0000][ M::kt_pipeline] read 1204718 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515343, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 1284, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6636)
[0000][PE] mean and std.dev: (1410.75, 1049.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.44, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1260, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1191.08, 819.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 318.456 CPU sec, 35.512 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204630
	[0000][ M::kt_pipeline] read 1204630 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515054, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.33, 64.96)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204718 reads in 321.189 CPU sec, 33.572 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515201, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 408, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (565.28, 466.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.58, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204630 reads in 329.595 CPU sec, 33.980 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204772
	[0000][ M::kt_pipeline] read 1204772 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515229, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (887, 1173, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1327.08, 862.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.56, 64.79)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 330.166 CPU sec, 33.227 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516036, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.53, 64.89)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1348, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (1181.85, 814.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204772 reads in 317.331 CPU sec, 30.326 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204808
	[0000][ M::kt_pipeline] read 1204808 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515552, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (648, 1226, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7368)
[0000][PE] mean and std.dev: (1674.81, 1297.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.29, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 879, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (721.27, 442.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 319.022 CPU sec, 30.801 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204600
	[0000][ M::kt_pipeline] read 1204600 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515169, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.48, 64.85)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (545, 1030, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (995.25, 711.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204808 reads in 320.203 CPU sec, 33.602 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515310, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 849, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1160.33, 813.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 64.85)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 889, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (925.20, 821.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204600 reads in 319.568 CPU sec, 31.791 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204680
	[0000][ M::kt_pipeline] read 1204680 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515301, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 808, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (872.75, 685.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.72, 65.07)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 819, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5694)
[0000][PE] mean and std.dev: (1270.41, 1004.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 326.241 CPU sec, 28.119 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204676
	[0000][ M::kt_pipeline] read 1204676 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515681, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (798, 1170, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (936.77, 526.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.26, 64.92)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1739, 3403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7841)
[0000][PE] mean and std.dev: (1895.07, 1222.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204680 reads in 323.482 CPU sec, 29.873 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515642, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (661, 1445, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (1288.82, 968.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 64.81)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (129, 742, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (415.50, 341.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3721)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1887, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5683)
[0000][PE] mean and std.dev: (1780.71, 1142.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204676 reads in 317.659 CPU sec, 34.677 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515013, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1283, 6537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19013)
[0000][PE] mean and std.dev: (2880.81, 3375.00)
[0000][PE] low and high boundaries for proper pairs: (1, 25251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.56, 65.02)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 939, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (950.00, 564.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 327.068 CPU sec, 30.944 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 514963, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.89, 64.73)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 337.157 CPU sec, 31.682 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204700
	[0000][ M::kt_pipeline] read 1204700 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515042, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 783, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (868.27, 620.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.04, 64.76)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1283, 2886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (1769.44, 1624.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 316.565 CPU sec, 27.543 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204824
	[0000][ M::kt_pipeline] read 1204824 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515073, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (650, 1295, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1605.50, 1306.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.95, 64.76)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204700 reads in 322.286 CPU sec, 33.826 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515519, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 382, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (626.89, 629.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.24, 64.86)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204824 reads in 317.487 CPU sec, 29.961 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515335, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 732, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5938)
[0000][PE] mean and std.dev: (1534.74, 1735.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.50, 65.04)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 314.975 CPU sec, 26.816 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515904, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (712, 1399, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5920)
[0000][PE] mean and std.dev: (1587.16, 1208.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.46, 64.94)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1079, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7877)
[0000][PE] mean and std.dev: (1658.65, 1433.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 320.569 CPU sec, 32.592 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204584
	[0000][ M::kt_pipeline] read 1204584 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 514985, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1309, 1548, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1655.08, 910.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.47, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1381, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5982)
[0000][PE] mean and std.dev: (1337.65, 886.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 324.088 CPU sec, 31.531 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515146, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1353, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6213)
[0000][PE] mean and std.dev: (1570.21, 1494.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.32, 64.93)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 788, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7310)
[0000][PE] mean and std.dev: (1397.92, 1819.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204584 reads in 330.109 CPU sec, 31.920 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515404, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1296, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1583.50, 1421.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.90, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (404, 537, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (905.38, 737.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 318.538 CPU sec, 31.384 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204624
	[0000][ M::kt_pipeline] read 1204624 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515263, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 697, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (776.18, 638.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.31, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 983, 3984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11466)
[0000][PE] mean and std.dev: (2181.85, 2641.56)
[0000][PE] low and high boundaries for proper pairs: (1, 15207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 320.550 CPU sec, 35.013 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204806
	[0000][ M::kt_pipeline] read 1204806 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515141, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1654, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7379)
[0000][PE] mean and std.dev: (1636.76, 1806.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.31, 64.95)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204624 reads in 317.927 CPU sec, 36.728 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204644
	[0000][ M::kt_pipeline] read 1204644 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515532, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 1160, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (829.25, 735.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.30, 64.96)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 1480, 3316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9226)
[0000][PE] mean and std.dev: (1787.46, 1420.52)
[0000][PE] low and high boundaries for proper pairs: (1, 12181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204806 reads in 323.328 CPU sec, 32.323 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204898
	[0000][ M::kt_pipeline] read 1204898 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515293, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 346, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (868.35, 892.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (353.08, 64.79)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1502, 2857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7029)
[0000][PE] mean and std.dev: (1747.15, 1349.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204644 reads in 326.214 CPU sec, 30.103 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204734
	[0000][ M::kt_pipeline] read 1204734 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515396, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 1249, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1332.46, 1027.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 567)
[0000][PE] mean and std.dev: (353.36, 64.97)
[0000][PE] low and high boundaries for proper pairs: (51, 653)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1184, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (1455.91, 819.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204898 reads in 323.877 CPU sec, 31.273 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204498
	[0000][ M::kt_pipeline] read 1204498 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 514872, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 693, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (1142.68, 1213.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.74, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 944, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (828.67, 603.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204734 reads in 334.191 CPU sec, 33.690 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204562
	[0000][ M::kt_pipeline] read 1204562 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515080, 6, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.21, 64.48)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204498 reads in 328.468 CPU sec, 31.051 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 514526, 1, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.44, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204562 reads in 326.593 CPU sec, 33.249 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204846
	[0000][ M::kt_pipeline] read 1204846 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515173, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 331, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7468)
[0000][PE] mean and std.dev: (1372.58, 1763.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.41, 64.43)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 1096, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (1079.60, 1048.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 328.998 CPU sec, 29.464 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204742
	[0000][ M::kt_pipeline] read 1204742 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515383, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (614, 646, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1166.64, 1087.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.33, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 574, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8548)
[0000][PE] mean and std.dev: (1415.73, 1423.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204846 reads in 329.702 CPU sec, 30.380 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1204634
	[0000][ M::kt_pipeline] read 1204634 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515485, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1115, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (1099.24, 910.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.46, 64.51)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 407, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (934.94, 928.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204742 reads in 320.942 CPU sec, 28.165 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204738
	[0000][ M::kt_pipeline] read 1204738 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 514979, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 738, 3762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10788)
[0000][PE] mean and std.dev: (1618.53, 1783.75)
[0000][PE] low and high boundaries for proper pairs: (1, 14301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.54, 64.56)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1265, 4684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12190)
[0000][PE] mean and std.dev: (2248.83, 2120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 15943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204634 reads in 323.946 CPU sec, 31.164 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515101, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 829, 3627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10423)
[0000][PE] mean and std.dev: (2030.36, 2302.65)
[0000][PE] low and high boundaries for proper pairs: (1, 13821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 561)
[0000][PE] mean and std.dev: (352.19, 64.27)
[0000][PE] low and high boundaries for proper pairs: (57, 645)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 874, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (827.53, 600.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204738 reads in 326.619 CPU sec, 33.651 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204826
	[0000][ M::kt_pipeline] read 1204826 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515090, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 297, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (642.31, 577.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.76, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (358, 2264, 5488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15748)
[0000][PE] mean and std.dev: (2824.29, 2672.52)
[0000][PE] low and high boundaries for proper pairs: (1, 20878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 326.649 CPU sec, 31.118 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515446, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 734, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (867.87, 809.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.54, 64.51)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 824, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (809.69, 610.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204826 reads in 324.201 CPU sec, 35.623 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515499, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1190, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5856)
[0000][PE] mean and std.dev: (1289.82, 1100.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.54, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1111, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (1101.59, 609.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 324.706 CPU sec, 31.403 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204754
	[0000][ M::kt_pipeline] read 1204754 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515610, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.51, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 900, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6273)
[0000][PE] mean and std.dev: (1315.33, 1407.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8251)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 327.249 CPU sec, 34.416 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515430, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.35, 64.82)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 1251, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (980.67, 789.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204754 reads in 319.346 CPU sec, 32.362 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515144, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1140, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (1159.07, 988.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.53, 64.71)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1645, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4801)
[0000][PE] mean and std.dev: (1389.69, 807.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 320.179 CPU sec, 30.587 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515618, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 561)
[0000][PE] mean and std.dev: (352.27, 64.38)
[0000][PE] low and high boundaries for proper pairs: (57, 645)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 655, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1774)
[0000][PE] mean and std.dev: (647.29, 475.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2549)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 326.934 CPU sec, 34.134 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 515255, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.45, 64.64)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 352.395 CPU sec, 35.054 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515264, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 895, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (962.60, 872.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (351.91, 64.73)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1333, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1476.31, 1142.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 338.072 CPU sec, 35.333 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204682
	[0000][ M::kt_pipeline] read 1204682 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515123, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1260, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5849)
[0000][PE] mean and std.dev: (1418.13, 1251.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.47, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (422, 711, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1066.29, 901.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 325.645 CPU sec, 30.543 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204750
	[0000][ M::kt_pipeline] read 1204750 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515335, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 738, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (737.89, 504.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.68, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1192, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1172.06, 1005.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204682 reads in 318.353 CPU sec, 31.638 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204794
	[0000][ M::kt_pipeline] read 1204794 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 515553, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.79, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 1107, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6483)
[0000][PE] mean and std.dev: (1493.79, 1481.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8545)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204750 reads in 326.645 CPU sec, 34.858 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515642, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 673, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (880.15, 794.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.56, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 925, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (923.92, 506.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204794 reads in 318.478 CPU sec, 33.080 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515425, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 382, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (704.60, 554.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.48, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 385, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (727.59, 744.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 322.511 CPU sec, 35.801 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515067, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 1464, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7387)
[0000][PE] mean and std.dev: (1400.38, 951.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.51, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 987, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (847.61, 715.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 321.711 CPU sec, 33.871 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204648
	[0000][ M::kt_pipeline] read 1204648 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515359, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 745, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (820.67, 697.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.19, 64.45)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 722, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (882.08, 770.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 320.430 CPU sec, 32.524 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515416, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 301, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (906.40, 1326.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.14, 64.35)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1111, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1192.90, 853.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204648 reads in 325.686 CPU sec, 33.109 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204674
	[0000][ M::kt_pipeline] read 1204674 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 514834, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 699, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (678.64, 574.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.50, 64.47)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 825, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1103.17, 1030.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 317.061 CPU sec, 30.973 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204930
	[0000][ M::kt_pipeline] read 1204930 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514921, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 939, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (857.76, 551.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 352, 3620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10296)
[0000][PE] mean and std.dev: (1461.64, 1493.69)
[0000][PE] low and high boundaries for proper pairs: (1, 13634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204674 reads in 323.914 CPU sec, 32.558 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 515233, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.53, 64.71)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 980, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (984.00, 757.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204930 reads in 316.378 CPU sec, 33.127 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204770
	[0000][ M::kt_pipeline] read 1204770 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515543, 5, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 317.995 CPU sec, 32.043 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204714
	[0000][ M::kt_pipeline] read 1204714 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515514, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1010, 1727, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1440.72, 708.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.53, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1110, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1163.07, 803.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204770 reads in 318.932 CPU sec, 33.418 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204866
	[0000][ M::kt_pipeline] read 1204866 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514945, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (712, 1104, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5194)
[0000][PE] mean and std.dev: (976.77, 551.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.85, 64.60)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1603, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1511.73, 1043.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204714 reads in 324.269 CPU sec, 35.003 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204836
	[0000][ M::kt_pipeline] read 1204836 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 515425, 3, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 963, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (928.38, 672.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204866 reads in 321.313 CPU sec, 30.773 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515024, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (858, 1130, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1314.81, 864.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.64, 64.50)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 351, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (715.64, 621.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204836 reads in 324.747 CPU sec, 29.033 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204798
	[0000][ M::kt_pipeline] read 1204798 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515140, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (861, 1945, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8079)
[0000][PE] mean and std.dev: (2379.36, 1781.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.60, 64.59)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 1254, 3619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10347)
[0000][PE] mean and std.dev: (1602.55, 1518.68)
[0000][PE] low and high boundaries for proper pairs: (1, 13711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 321.462 CPU sec, 28.572 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515057, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 1407, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1035.00, 814.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.59, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 722, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (1183.53, 1193.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204798 reads in 318.763 CPU sec, 32.821 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204612
	[0000][ M::kt_pipeline] read 1204612 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515119, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 402, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2301)
[0000][PE] mean and std.dev: (501.83, 390.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.41)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 327.162 CPU sec, 32.742 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515550, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 777, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (926.17, 845.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.70, 64.51)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 847, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1407.08, 1171.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204612 reads in 329.468 CPU sec, 32.710 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515624, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1835, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1136.22, 869.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.55)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 323.085 CPU sec, 31.964 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204856
	[0000][ M::kt_pipeline] read 1204856 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515038, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 826, 5500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15776)
[0000][PE] mean and std.dev: (2216.08, 2312.00)
[0000][PE] low and high boundaries for proper pairs: (1, 20914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 1172, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (937.11, 754.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 327.434 CPU sec, 29.066 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515217, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 767, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (919.58, 772.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.41, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1336, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7049)
[0000][PE] mean and std.dev: (1742.57, 1064.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204856 reads in 320.450 CPU sec, 27.308 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514798, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 2130, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8333)
[0000][PE] mean and std.dev: (2085.06, 1865.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.53, 64.47)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 726, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1793)
[0000][PE] mean and std.dev: (581.56, 320.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 322.204 CPU sec, 40.414 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204784
	[0000][ M::kt_pipeline] read 1204784 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515074, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 997, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (774.00, 418.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1323, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5698)
[0000][PE] mean and std.dev: (1679.16, 1434.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 322.604 CPU sec, 30.433 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204758
	[0000][ M::kt_pipeline] read 1204758 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515472, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1221, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5113)
[0000][PE] mean and std.dev: (1097.88, 735.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.66, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 455, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (549.33, 398.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204784 reads in 325.797 CPU sec, 36.782 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204642
	[0000][ M::kt_pipeline] read 1204642 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515257, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 926, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (835.65, 706.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.66)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 825, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1919)
[0000][PE] mean and std.dev: (827.27, 388.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204758 reads in 325.944 CPU sec, 30.102 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204820
	[0000][ M::kt_pipeline] read 1204820 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515393, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (806, 1155, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7523)
[0000][PE] mean and std.dev: (1828.88, 1779.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.62, 64.48)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204642 reads in 321.353 CPU sec, 34.718 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204834
	[0000][ M::kt_pipeline] read 1204834 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515046, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1474, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1168.11, 688.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.46, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1113, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7174)
[0000][PE] mean and std.dev: (1651.95, 1087.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204820 reads in 327.790 CPU sec, 36.889 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204558
	[0000][ M::kt_pipeline] read 1204558 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515285, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 1271, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6653)
[0000][PE] mean and std.dev: (1376.41, 1420.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.54, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204834 reads in 324.043 CPU sec, 33.376 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204844
	[0000][ M::kt_pipeline] read 1204844 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515531, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (684, 819, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6720)
[0000][PE] mean and std.dev: (1446.75, 1374.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.58, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1188, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (1035.00, 433.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204558 reads in 323.997 CPU sec, 33.603 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204746
	[0000][ M::kt_pipeline] read 1204746 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515379, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (627, 1035, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7230)
[0000][PE] mean and std.dev: (1609.38, 1431.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.45, 64.57)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204844 reads in 324.478 CPU sec, 29.646 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204792
	[0000][ M::kt_pipeline] read 1204792 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 514987, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 602, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6377)
[0000][PE] mean and std.dev: (1153.88, 994.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 350, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.73, 64.54)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1161, 5233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14125)
[0000][PE] mean and std.dev: (2356.79, 2097.19)
[0000][PE] low and high boundaries for proper pairs: (1, 18571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204746 reads in 327.929 CPU sec, 31.858 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204822
	[0000][ M::kt_pipeline] read 1204822 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515044, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1310, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1121.31, 929.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.45, 64.62)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1021, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (900.91, 653.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204792 reads in 316.165 CPU sec, 32.573 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1204764
	[0000][ M::kt_pipeline] read 1204764 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515381, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 393, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (799.71, 737.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.61, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1730, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1901.55, 1315.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204822 reads in 327.078 CPU sec, 33.430 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204892
	[0000][ M::kt_pipeline] read 1204892 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514384, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.56, 64.45)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 915, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (933.20, 566.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204764 reads in 317.341 CPU sec, 28.430 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204678
	[0000][ M::kt_pipeline] read 1204678 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 514625, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.33, 64.49)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1336, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7157)
[0000][PE] mean and std.dev: (1600.20, 1280.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9214)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204892 reads in 319.599 CPU sec, 35.775 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204776
	[0000][ M::kt_pipeline] read 1204776 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515734, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 1199, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7205)
[0000][PE] mean and std.dev: (1291.50, 1207.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.46, 64.53)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 1027, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8369)
[0000][PE] mean and std.dev: (2036.59, 2400.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204678 reads in 319.198 CPU sec, 31.199 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204766
	[0000][ M::kt_pipeline] read 1204766 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515398, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 382, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (748.50, 754.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.69, 64.72)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204776 reads in 319.129 CPU sec, 30.868 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204698
	[0000][ M::kt_pipeline] read 1204698 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515575, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1022, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (769.62, 465.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.63, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 918, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7150)
[0000][PE] mean and std.dev: (1787.47, 1696.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204766 reads in 320.670 CPU sec, 33.466 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516180, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1416, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6603)
[0000][PE] mean and std.dev: (1577.43, 1406.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.45, 64.61)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 792, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6725)
[0000][PE] mean and std.dev: (1251.42, 1138.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204698 reads in 317.077 CPU sec, 28.617 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204726
	[0000][ M::kt_pipeline] read 1204726 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515705, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 282, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1080.54, 1399.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.38, 64.57)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 1152, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (882.17, 508.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 326.038 CPU sec, 32.454 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1204786
	[0000][ M::kt_pipeline] read 1204786 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515224, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 383, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2450)
[0000][PE] mean and std.dev: (513.85, 467.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.48, 64.64)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204726 reads in 325.742 CPU sec, 35.799 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204838
	[0000][ M::kt_pipeline] read 1204838 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515294, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 556, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1094.18, 1094.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.37, 64.72)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204786 reads in 318.640 CPU sec, 32.281 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204622
	[0000][ M::kt_pipeline] read 1204622 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 515633, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.43, 64.56)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 916, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (904.14, 691.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5913)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204838 reads in 316.529 CPU sec, 30.311 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515165, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 429, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (461.55, 314.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.51, 64.70)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1364, 3174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7948)
[0000][PE] mean and std.dev: (1645.59, 1223.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204622 reads in 315.665 CPU sec, 35.866 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204762
	[0000][ M::kt_pipeline] read 1204762 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515278, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 801, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1030.68, 846.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.49, 64.70)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1028, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1149.08, 747.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 318.082 CPU sec, 31.205 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204830
	[0000][ M::kt_pipeline] read 1204830 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515241, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (829, 1086, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8353)
[0000][PE] mean and std.dev: (1745.91, 1557.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.15, 64.43)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1912, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1534.83, 766.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204762 reads in 326.818 CPU sec, 23.984 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204628
	[0000][ M::kt_pipeline] read 1204628 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515126, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1283, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (893.30, 614.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (138, 563)
[0000][PE] mean and std.dev: (352.07, 64.50)
[0000][PE] low and high boundaries for proper pairs: (53, 648)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 978, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5816)
[0000][PE] mean and std.dev: (1525.41, 1431.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204830 reads in 335.447 CPU sec, 25.715 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204668
	[0000][ M::kt_pipeline] read 1204668 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515166, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1329, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1284.00, 992.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.52, 64.82)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 975, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1108.81, 817.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204628 reads in 319.378 CPU sec, 22.413 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204744
	[0000][ M::kt_pipeline] read 1204744 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516035, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1030, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1121.44, 814.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.30, 64.56)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 1022, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1021.69, 701.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204668 reads in 320.856 CPU sec, 25.160 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1204782
	[0000][ M::kt_pipeline] read 1204782 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 515107, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 582, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (703.10, 576.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.36, 64.81)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1435, 2535, 4026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9208)
[0000][PE] mean and std.dev: (2581.00, 1614.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204744 reads in 326.861 CPU sec, 24.662 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204780
	[0000][ M::kt_pipeline] read 1204780 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 514981, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1046, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (866.50, 603.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.33, 64.52)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 1085, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1192.73, 1126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204782 reads in 337.037 CPU sec, 25.688 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204656
	[0000][ M::kt_pipeline] read 1204656 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515631, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 342, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (644.41, 520.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.57, 64.63)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 498, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1305.93, 1530.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204780 reads in 317.858 CPU sec, 25.287 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204814
	[0000][ M::kt_pipeline] read 1204814 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515195, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 1210, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6015)
[0000][PE] mean and std.dev: (1157.88, 1153.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.50, 64.76)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (422, 1351, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1333.64, 1110.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204656 reads in 328.349 CPU sec, 24.463 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204720
	[0000][ M::kt_pipeline] read 1204720 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515461, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 749, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (689.92, 632.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.50, 64.81)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (452, 1393, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5987)
[0000][PE] mean and std.dev: (1399.00, 1136.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204814 reads in 325.845 CPU sec, 24.355 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204578
	[0000][ M::kt_pipeline] read 1204578 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515061, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 320, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (583.30, 586.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.76, 64.68)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 469, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (547.80, 309.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204720 reads in 329.502 CPU sec, 25.789 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204760
	[0000][ M::kt_pipeline] read 1204760 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 514997, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 261, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (509.36, 449.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.27, 64.84)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1374, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7137)
[0000][PE] mean and std.dev: (1539.65, 1290.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204578 reads in 330.144 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1204716
	[0000][ M::kt_pipeline] read 1204716 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515410, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 922, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5857)
[0000][PE] mean and std.dev: (1267.45, 1208.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.49, 64.77)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 1810, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5975)
[0000][PE] mean and std.dev: (1558.94, 1379.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204760 reads in 320.655 CPU sec, 24.626 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204756
	[0000][ M::kt_pipeline] read 1204756 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 514881, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 641, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1130.27, 1280.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.55, 64.84)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1026, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1275.65, 689.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204716 reads in 327.030 CPU sec, 27.416 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204848
	[0000][ M::kt_pipeline] read 1204848 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515491, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 717, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5274)
[0000][PE] mean and std.dev: (900.00, 747.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (309, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 564)
[0000][PE] mean and std.dev: (352.76, 64.78)
[0000][PE] low and high boundaries for proper pairs: (54, 649)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 2136, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1201.44, 1140.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9080)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1208, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (993.55, 628.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204756 reads in 328.610 CPU sec, 26.415 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 127378203, nseq: 852604
	[0000][ M::kt_pipeline] read 852604 sequences (127378203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515240, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 656, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (981.00, 1049.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.60, 64.88)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 892, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (1134.08, 888.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204848 reads in 330.309 CPU sec, 24.115 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 852604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 364503, 0, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (308, 349, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 566)
[0000][PE] mean and std.dev: (352.45, 64.77)
[0000][PE] low and high boundaries for proper pairs: (50, 652)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 852604 reads in 226.719 CPU sec, 15.272 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.430936 MHz
Runtime profile:

	Time taken for main_mem function: 48599.85 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2742.84, (2742.84, 2742.84)
	Writing IO time (SAM) avg: 4436.60, (4436.60, 4436.60)
	Reading IO time (Reference Genome) avg: 1.97, (1.97, 1.97)
	Index read time avg: 20.64, (20.64, 20.64)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 48577.20
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 48562.21, (48562.21, 48562.21)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 17924.09, (17924.09, 17924.09)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 30395.11, (30395.11, 30395.11)
		SMEM compute avg: 9977.08, (10004.25, 9942.12)
		SAL compute avg: 4444.78, (4478.04, 4402.25)
				MEM_SA avg: 1855.43, (1866.56, 1842.83)

		BSW time, avg: 10129.79, (10150.75, 10109.70)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
