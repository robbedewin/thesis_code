Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000238 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520445, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 430, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (960.63, 1013.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1677, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1375.64, 606.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 452.071 CPU sec, 27.390 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520445, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 376, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1984)
[0000][PE] mean and std.dev: (528.03, 482.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1064, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1424.04, 783.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 454.056 CPU sec, 26.239 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520456, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 348, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (557.18, 551.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.55, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 979, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6259)
[0000][PE] mean and std.dev: (1318.73, 921.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 437.123 CPU sec, 24.825 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 521001, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 388, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (548.24, 439.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1120, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (1487.86, 1030.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 437.413 CPU sec, 24.817 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520460, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 469, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (858.66, 751.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.51, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1312, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (1432.00, 778.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 428.968 CPU sec, 24.044 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520712, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 770, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2150)
[0000][PE] mean and std.dev: (665.20, 467.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1290, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4778)
[0000][PE] mean and std.dev: (1513.25, 803.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 419.290 CPU sec, 23.578 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520421, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 362, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2537)
[0000][PE] mean and std.dev: (558.69, 463.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.00, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1880, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1573.60, 797.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 419.996 CPU sec, 23.570 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520243, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 951, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1022.22, 781.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1315, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4473)
[0000][PE] mean and std.dev: (1539.13, 774.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 423.161 CPU sec, 23.772 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520711, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 349, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (599.74, 614.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.95, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1192, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (1019.44, 381.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 421.638 CPU sec, 23.613 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520270, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 594, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (706.12, 565.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1104, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1349.47, 883.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 423.481 CPU sec, 23.950 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520407, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 456, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (788.92, 843.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1311, 1462, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (1486.62, 647.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 423.464 CPU sec, 23.817 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520184, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 530, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (795.53, 863.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.65, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1344, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (367, 2362)
[0000][PE] mean and std.dev: (1289.42, 236.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 431.444 CPU sec, 24.431 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520924, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 411, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (832.84, 887.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1113, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1372.14, 684.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 428.297 CPU sec, 23.993 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 521006, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 369, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (657.10, 650.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.68, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1633, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1561.79, 810.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 433.901 CPU sec, 24.450 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520358, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 407, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2403)
[0000][PE] mean and std.dev: (591.54, 528.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.06, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1395, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (1301.23, 483.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 432.640 CPU sec, 24.349 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520493, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 532, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1066.50, 1048.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.67, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1198, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1636.50, 893.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 435.906 CPU sec, 24.539 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520520, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 503, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (604.14, 478.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.55, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1651, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5000)
[0000][PE] mean and std.dev: (1630.70, 828.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 433.863 CPU sec, 24.392 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520899, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 360, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (619.03, 565.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1364, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (1559.52, 1115.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 426.925 CPU sec, 23.928 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520723, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 358, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (722.91, 721.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.95, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1804, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (1588.87, 702.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 428.557 CPU sec, 24.027 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520281, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 364, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2537)
[0000][PE] mean and std.dev: (638.59, 574.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.06, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1625, 3324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7426)
[0000][PE] mean and std.dev: (2047.43, 1177.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 427.018 CPU sec, 23.966 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520636, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 448, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (714.92, 619.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.06, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1658, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (1634.80, 786.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 430.996 CPU sec, 24.173 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520520, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 311, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (784.53, 935.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1320, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1592.41, 1088.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 435.028 CPU sec, 24.460 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520527, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 391, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2086)
[0000][PE] mean and std.dev: (477.45, 403.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1260, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (1243.05, 589.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 427.260 CPU sec, 23.962 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520934, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 952, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (888.59, 790.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.40, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1307, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1513.89, 1088.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 425.821 CPU sec, 23.905 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 521152, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 466, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (766.35, 679.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1227, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (1308.77, 606.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 422.325 CPU sec, 23.704 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520247, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1047, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1099.95, 998.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.39, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1263, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (1117.87, 446.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 426.963 CPU sec, 23.903 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520906, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 382, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (678.30, 621.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.46, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1299, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1474.06, 851.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 429.056 CPU sec, 24.099 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520743, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 379, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1453)
[0000][PE] mean and std.dev: (449.67, 315.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1451, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (1350.47, 545.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 427.524 CPU sec, 24.010 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520433, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 610, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (636.35, 588.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1180, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (1195.94, 588.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 434.199 CPU sec, 24.475 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520234, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 343, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (674.91, 645.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1364, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (1399.58, 794.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 420.894 CPU sec, 23.650 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520513, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 806, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (872.24, 712.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1233, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1437.76, 849.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 414.150 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520075, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 461, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (816.48, 773.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1392, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1342.67, 468.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 425.057 CPU sec, 23.882 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520482, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 489, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (746.59, 763.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1536, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (1647.71, 933.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 422.326 CPU sec, 23.696 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520489, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 341, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (687.88, 707.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1608, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (2014.67, 1229.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 425.782 CPU sec, 23.880 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520659, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 464, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2108)
[0000][PE] mean and std.dev: (589.79, 498.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.70, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1367, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2757)
[0000][PE] mean and std.dev: (1112.25, 501.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 432.702 CPU sec, 24.478 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520652, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 363, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1853)
[0000][PE] mean and std.dev: (431.29, 313.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1608, 3058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6754)
[0000][PE] mean and std.dev: (1824.50, 1177.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 423.046 CPU sec, 23.759 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519928, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 311, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (550.54, 543.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1435, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1475.74, 704.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 426.907 CPU sec, 23.948 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520517, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 442, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (823.80, 772.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.73, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1571, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1331.79, 457.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 430.355 CPU sec, 24.256 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520967, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 381, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (656.56, 711.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1339, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (1323.31, 526.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 423.743 CPU sec, 23.817 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520466, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 338, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (643.32, 647.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 2135, 4394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10994)
[0000][PE] mean and std.dev: (2618.10, 2104.84)
[0000][PE] low and high boundaries for proper pairs: (1, 14294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 429.068 CPU sec, 24.182 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520571, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 639, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (928.56, 806.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1422, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1349.26, 642.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 427.152 CPU sec, 23.989 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520248, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 387, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (587.78, 596.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.74, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1560, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (1679.33, 1388.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 425.471 CPU sec, 23.851 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520706, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 339, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (679.03, 753.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1230, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (1357.40, 636.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 434.696 CPU sec, 24.505 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520773, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 556, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (823.61, 784.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1718, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1778.54, 864.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 421.068 CPU sec, 23.665 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520742, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 680, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (832.39, 769.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1605, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1769.39, 886.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 426.451 CPU sec, 23.942 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520327, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 420, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (616.61, 598.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.36, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1403, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5645)
[0000][PE] mean and std.dev: (1461.61, 1292.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 422.954 CPU sec, 23.675 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520133, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 337, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (464.29, 432.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.03, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1453, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1497.05, 740.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 423.183 CPU sec, 23.795 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520864, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 398, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (583.42, 533.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.39, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1560, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1425.05, 782.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 420.844 CPU sec, 23.757 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520370, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 415, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1552)
[0000][PE] mean and std.dev: (448.83, 315.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1453, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7487)
[0000][PE] mean and std.dev: (1683.90, 1210.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 421.580 CPU sec, 23.697 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520535, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 322, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (509.61, 507.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.12, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1261, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (67, 2412)
[0000][PE] mean and std.dev: (1130.69, 453.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 422.286 CPU sec, 23.650 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520793, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 322, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1289)
[0000][PE] mean and std.dev: (350.73, 262.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.81, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1249, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1366.21, 823.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 429.764 CPU sec, 24.102 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520404, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 360, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (794.78, 905.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1179, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5278)
[0000][PE] mean and std.dev: (1534.18, 1034.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 426.568 CPU sec, 24.064 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520434, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 533, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (764.39, 556.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.48, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1280, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1482.74, 595.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 432.349 CPU sec, 24.324 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520581, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 447, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (616.50, 539.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1470, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1425.94, 757.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 426.085 CPU sec, 24.076 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 521115, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 566, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1904)
[0000][PE] mean and std.dev: (524.47, 346.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1102, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (1247.28, 623.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 420.754 CPU sec, 24.041 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520738, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 433, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (692.51, 644.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1124, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2254)
[0000][PE] mean and std.dev: (1087.94, 386.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 419.513 CPU sec, 24.526 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520283, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 399, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (658.00, 634.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.66, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1402, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (1354.30, 710.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 414.096 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520746, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 431, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (636.56, 592.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.35, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1596, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1904.48, 1280.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 415.623 CPU sec, 23.316 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520370, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 365, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (633.28, 616.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1835, 3249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7727)
[0000][PE] mean and std.dev: (2200.29, 1766.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 412.767 CPU sec, 23.109 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520583, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 481, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (812.03, 830.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1776, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6279)
[0000][PE] mean and std.dev: (1973.20, 949.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 407.912 CPU sec, 23.327 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520590, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 257, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (616.35, 654.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1237, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1120.40, 629.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 416.737 CPU sec, 23.468 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520787, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 374, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1701)
[0000][PE] mean and std.dev: (423.63, 343.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1316, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (1474.94, 789.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 410.748 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520622, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 819, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (930.90, 726.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (394, 1144, 3628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10096)
[0000][PE] mean and std.dev: (1979.90, 2142.79)
[0000][PE] low and high boundaries for proper pairs: (1, 13330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1261, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1720.47, 1139.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 415.075 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520401, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 373, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (716.55, 705.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1274, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1664.21, 1261.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 412.072 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520612, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 412, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (497.42, 477.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1193, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1346.42, 719.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 414.927 CPU sec, 23.355 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520529, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 403, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (560.97, 534.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.83, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1717, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (1630.72, 608.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 412.222 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520763, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 476, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1033.73, 940.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 954, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (894.05, 564.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 411.387 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520467, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 406, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (669.24, 596.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.45, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1301, 1841, 4430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10688)
[0000][PE] mean and std.dev: (2615.91, 1775.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 410.676 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520594, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 489, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (983.27, 1000.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1423, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (1320.40, 578.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 417.679 CPU sec, 23.449 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520688, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 671, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (790.67, 707.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.88, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1704, 3569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8493)
[0000][PE] mean and std.dev: (2254.83, 1823.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 411.847 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520718, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 366, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (456.61, 422.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.13, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1343, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1487.59, 842.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 414.711 CPU sec, 23.321 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520543, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 392, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (687.66, 643.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1221, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1295.76, 746.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 412.946 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520508, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 419, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1959)
[0000][PE] mean and std.dev: (488.23, 354.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.93, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1365, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1536.62, 870.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 418.627 CPU sec, 23.460 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520857, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 463, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (700.42, 592.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1308, 1538, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (1707.21, 736.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 414.646 CPU sec, 23.298 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520282, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 491, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (715.53, 600.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1129, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (1316.44, 525.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 420.072 CPU sec, 23.575 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520137, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 267, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 876)
[0000][PE] mean and std.dev: (247.03, 128.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.46, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1301, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1580.50, 975.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 425.845 CPU sec, 23.919 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520822, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 782, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (1087.03, 1094.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.87, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1124, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (1094.15, 412.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 418.234 CPU sec, 23.478 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520459, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 517, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (721.71, 595.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.04, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1487, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1586.65, 807.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 417.787 CPU sec, 23.450 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520680, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 477, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (609.47, 510.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1131, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (1157.35, 533.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 412.188 CPU sec, 23.109 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520261, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 876, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (825.31, 638.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1295, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (1100.40, 429.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 416.168 CPU sec, 23.404 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520405, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 396, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (823.97, 782.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1348, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1653.43, 1148.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 420.666 CPU sec, 23.582 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520101, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 368, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2395)
[0000][PE] mean and std.dev: (590.03, 490.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.85, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1462, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5837)
[0000][PE] mean and std.dev: (1763.52, 1137.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 416.247 CPU sec, 23.315 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520466, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 961, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5097)
[0000][PE] mean and std.dev: (1194.53, 1178.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.59, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (119, 2126, 7670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 22772)
[0000][PE] mean and std.dev: (3604.00, 3577.88)
[0000][PE] low and high boundaries for proper pairs: (1, 30323)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 2200, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7077)
[0000][PE] mean and std.dev: (2063.62, 1254.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 415.793 CPU sec, 23.313 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520581, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 790, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (996.40, 1012.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1230, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (1143.47, 625.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 415.739 CPU sec, 23.243 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520735, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 381, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (676.21, 585.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1701, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1607.94, 816.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 424.229 CPU sec, 23.885 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520468, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 680, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (916.59, 798.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1369, 1710, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (249, 3049)
[0000][PE] mean and std.dev: (1618.28, 571.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 420.501 CPU sec, 23.681 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520523, 4, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 436, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1977)
[0000][PE] mean and std.dev: (499.64, 344.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.66, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1548, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (1581.17, 871.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 413.360 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520855, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 351, 621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1315)
[0000][PE] mean and std.dev: (371.17, 249.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1113, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1264.31, 777.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 416.792 CPU sec, 23.428 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520718, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 421, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (672.60, 692.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1288, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1666.32, 1041.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 413.033 CPU sec, 23.142 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520734, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 372, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (722.81, 705.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1257, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (1133.60, 546.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 416.073 CPU sec, 23.304 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520935, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 419, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (650.90, 591.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.54, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1903, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1731.21, 1039.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 411.472 CPU sec, 23.042 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520366, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 382, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (600.55, 572.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.70, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1652, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1716.25, 882.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 416.527 CPU sec, 23.760 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520512, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 466, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (752.46, 662.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1248, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (1186.85, 511.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 408.202 CPU sec, 23.087 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520499, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 377, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1856)
[0000][PE] mean and std.dev: (518.24, 452.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.22, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1476, 2797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6453)
[0000][PE] mean and std.dev: (1877.00, 1187.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 414.770 CPU sec, 23.236 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520532, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 297, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1424)
[0000][PE] mean and std.dev: (379.17, 334.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1335, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (1168.31, 448.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 413.041 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520368, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 634, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (908.97, 873.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1378, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (1411.14, 476.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 414.047 CPU sec, 23.196 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520160, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 408, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (558.64, 424.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.07, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1163, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1178.69, 698.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 415.044 CPU sec, 23.330 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520295, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 622, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (801.54, 681.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.62, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1238, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (1516.12, 813.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 414.260 CPU sec, 23.722 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520449, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 366, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2738)
[0000][PE] mean and std.dev: (573.73, 553.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.73, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1586, 4209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10227)
[0000][PE] mean and std.dev: (2363.73, 2005.23)
[0000][PE] low and high boundaries for proper pairs: (1, 13236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 408.476 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520386, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 449, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (644.65, 636.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1408, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (1196.75, 672.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 418.241 CPU sec, 23.517 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520347, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 377, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (847.91, 910.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1331, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1366.46, 742.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 418.396 CPU sec, 23.469 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520757, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 373, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (701.21, 717.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1507, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1577.38, 735.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 410.053 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520948, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 379, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (506.56, 363.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1237, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1545.07, 940.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 425.536 CPU sec, 23.909 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520118, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 486, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (760.82, 764.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1724, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (1903.62, 1193.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 409.632 CPU sec, 23.397 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520630, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 627, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (787.62, 608.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.96, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1442, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2879)
[0000][PE] mean and std.dev: (1414.38, 494.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 420.647 CPU sec, 23.699 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520530, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 385, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (547.21, 614.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.92, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1298, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (1161.65, 541.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 412.891 CPU sec, 23.818 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520214, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 325, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (573.80, 645.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.20, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1568, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (2018.25, 1222.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 417.404 CPU sec, 23.402 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520788, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 493, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (780.19, 792.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1132, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (1146.06, 423.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 420.438 CPU sec, 23.772 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520337, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 292, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (673.45, 729.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.60, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1432, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1765.62, 943.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 411.938 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520760, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 756, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (781.15, 718.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1226, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (1259.63, 588.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 410.426 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520712, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 454, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (609.10, 355.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.77, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1532, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (1424.50, 721.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 414.939 CPU sec, 23.289 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520802, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 435, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (788.53, 793.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1483, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1722.41, 873.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 415.838 CPU sec, 23.369 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520133, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 490, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (806.93, 720.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.83, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1370, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1454.80, 681.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 417.156 CPU sec, 23.432 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520124, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 521, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (641.43, 574.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.60, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1278, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (1314.52, 564.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 421.214 CPU sec, 23.615 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520324, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 409, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (488.73, 460.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1635, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1499.56, 837.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 416.247 CPU sec, 23.349 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520707, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 417, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (646.41, 682.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1391, 1955, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (2253.91, 1482.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 418.244 CPU sec, 23.413 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520731, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 388, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4473)
[0000][PE] mean and std.dev: (697.81, 696.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1890, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5189)
[0000][PE] mean and std.dev: (1866.79, 991.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 412.078 CPU sec, 23.142 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520729, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 701, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (778.60, 580.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1081, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (1178.85, 527.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 412.360 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520907, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 424, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2606)
[0000][PE] mean and std.dev: (549.58, 420.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1513, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1457.32, 654.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 414.404 CPU sec, 23.226 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520661, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 402, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (651.52, 557.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1434, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1590.21, 760.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 419.825 CPU sec, 23.569 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521026, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 364, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (502.17, 526.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1525, 2958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7196)
[0000][PE] mean and std.dev: (1795.47, 1515.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 410.734 CPU sec, 23.007 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520526, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 406, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (608.61, 571.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.79, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1318, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (1401.47, 684.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 414.805 CPU sec, 23.347 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 520808, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 655, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (1111.43, 1130.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.13, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 2451, 4636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11396)
[0000][PE] mean and std.dev: (3107.53, 2402.59)
[0000][PE] low and high boundaries for proper pairs: (1, 14776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 412.068 CPU sec, 23.071 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520758, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 929, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (783.97, 579.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1248, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1523.76, 990.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 414.914 CPU sec, 23.243 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520260, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 339, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (690.85, 700.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1557, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1318.00, 547.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 412.772 CPU sec, 23.185 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520548, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 308, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2125)
[0000][PE] mean and std.dev: (388.19, 369.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1487, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1589.62, 927.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 413.806 CPU sec, 23.157 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520381, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 560, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (666.62, 405.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1237, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2910)
[0000][PE] mean and std.dev: (1200.52, 495.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 420.282 CPU sec, 23.531 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520494, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 397, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1920)
[0000][PE] mean and std.dev: (492.80, 343.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.86, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1559, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1738.50, 881.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 410.651 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520736, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 402, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (493.97, 388.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.53, 121.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1627, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1418.65, 699.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 417.158 CPU sec, 23.537 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520406, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 354, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2352)
[0000][PE] mean and std.dev: (528.95, 514.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1558, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6030)
[0000][PE] mean and std.dev: (1938.71, 1111.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 414.065 CPU sec, 23.208 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520043, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 288, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2023)
[0000][PE] mean and std.dev: (403.20, 327.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.97, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1427, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7587)
[0000][PE] mean and std.dev: (1847.23, 1298.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 416.571 CPU sec, 23.400 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520963, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1017, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (852.30, 614.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1286, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (1824.88, 1230.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 412.787 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520464, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 375, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (702.76, 811.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.12, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1333, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (1563.95, 732.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 413.891 CPU sec, 23.252 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520789, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 420, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2536)
[0000][PE] mean and std.dev: (669.62, 619.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.81, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1443, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5919)
[0000][PE] mean and std.dev: (1741.82, 917.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 410.929 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520899, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 376, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (560.24, 469.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1459, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1352.95, 694.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 411.055 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520282, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 675, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (965.35, 926.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.69, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1280, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (1126.43, 505.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 411.734 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520762, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 395, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (687.79, 698.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1531, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7684)
[0000][PE] mean and std.dev: (2248.54, 1778.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 418.080 CPU sec, 23.507 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520561, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 423, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (778.03, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.93, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1234, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1474.64, 786.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 411.608 CPU sec, 23.147 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520343, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 335, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (311.73, 160.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.56, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1128, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (25, 2440)
[0000][PE] mean and std.dev: (1225.38, 370.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 420.949 CPU sec, 23.839 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520983, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 781, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1062.16, 1117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.37, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1214, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (1235.74, 780.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 416.154 CPU sec, 23.376 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520853, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 365, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (784.97, 733.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1540, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1541.69, 795.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 412.971 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 519994, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 688, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (808.44, 689.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1796, 3543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8077)
[0000][PE] mean and std.dev: (2222.00, 1463.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 414.431 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520579, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 400, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (767.22, 779.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1223, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1281.69, 1013.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 419.083 CPU sec, 23.503 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520586, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 432, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (766.59, 788.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.41, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1058, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (1379.47, 865.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 414.233 CPU sec, 23.359 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520259, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 413, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (731.05, 751.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.74, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1345, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (330, 2355)
[0000][PE] mean and std.dev: (1272.35, 339.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 422.946 CPU sec, 23.762 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520142, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 406, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (859.39, 970.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1429, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (1346.12, 488.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 421.420 CPU sec, 23.653 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520846, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 457, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (640.64, 524.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1510, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1659.00, 1040.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 421.563 CPU sec, 23.612 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520486, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 757, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1057.85, 1093.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1440, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1454.70, 592.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 419.471 CPU sec, 23.571 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520124, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 388, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2123)
[0000][PE] mean and std.dev: (519.32, 389.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1683, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (1608.35, 649.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 412.962 CPU sec, 23.370 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520365, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 367, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (921.83, 994.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1589, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5788)
[0000][PE] mean and std.dev: (1712.50, 917.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 415.112 CPU sec, 23.305 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520251, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 409, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (625.35, 608.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1081, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1218.62, 833.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 419.572 CPU sec, 23.973 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520321, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 341, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (730.35, 827.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1620, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (1740.48, 953.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 420.638 CPU sec, 23.692 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520523, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 352, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (568.46, 477.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1530, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3130)
[0000][PE] mean and std.dev: (1249.64, 521.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 417.345 CPU sec, 23.904 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520707, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 434, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2079)
[0000][PE] mean and std.dev: (501.89, 326.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1408, 4836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12184)
[0000][PE] mean and std.dev: (2619.47, 2304.75)
[0000][PE] low and high boundaries for proper pairs: (1, 15858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 416.158 CPU sec, 24.073 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520073, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 390, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (615.95, 624.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1253, 3948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9744)
[0000][PE] mean and std.dev: (2437.58, 2401.95)
[0000][PE] low and high boundaries for proper pairs: (1, 12642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 420.662 CPU sec, 23.986 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519988, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 389, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (512.61, 399.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1529, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1282.50, 590.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 416.619 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520275, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 785, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (808.58, 603.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.89, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1494, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1613.09, 968.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 409.458 CPU sec, 23.320 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520540, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 400, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (637.59, 633.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1616, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1903.15, 1071.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 415.473 CPU sec, 23.310 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520619, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 414, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (851.39, 854.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.43, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 2116, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1767.57, 1030.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 416.378 CPU sec, 23.395 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520603, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 492, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (860.07, 894.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1451, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1554.58, 848.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 416.531 CPU sec, 23.468 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520591, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 399, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2018)
[0000][PE] mean and std.dev: (507.07, 348.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1369, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1771.28, 1173.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 416.641 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520784, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 680, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (894.79, 774.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1619, 3928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9284)
[0000][PE] mean and std.dev: (2398.95, 1705.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 419.052 CPU sec, 24.106 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520643, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 388, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (566.87, 587.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1583, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1649.79, 706.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 410.712 CPU sec, 23.160 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520550, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 374, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (601.84, 518.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1219, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (1402.27, 629.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 421.656 CPU sec, 23.765 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520136, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 504, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (705.92, 673.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.13, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1276, 2823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6491)
[0000][PE] mean and std.dev: (1731.00, 1336.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 418.137 CPU sec, 23.480 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520321, 9, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 361, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2351)
[0000][PE] mean and std.dev: (580.25, 521.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.37, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1859, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5987)
[0000][PE] mean and std.dev: (1863.90, 1126.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 416.111 CPU sec, 23.852 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520416, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 379, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (675.84, 630.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1038, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (1122.17, 606.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 416.755 CPU sec, 23.378 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520533, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 389, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (624.62, 582.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.42, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1430, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (1432.44, 809.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 415.867 CPU sec, 23.597 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520664, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 820, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (966.73, 904.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1687, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1580.88, 871.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 415.405 CPU sec, 23.388 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520629, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 579, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1131.45, 1278.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1328, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (213, 2713)
[0000][PE] mean and std.dev: (1356.35, 436.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 418.129 CPU sec, 23.452 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520070, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 531, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (662.34, 652.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1529, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1617.31, 946.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 415.417 CPU sec, 23.283 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 521201, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 353, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (898.50, 1005.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.84, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1663, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6467)
[0000][PE] mean and std.dev: (1992.42, 1480.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 415.107 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520766, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 410, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (564.78, 431.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1709, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1527.00, 610.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 414.982 CPU sec, 23.254 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520330, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 354, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (692.83, 667.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.34, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1257, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (38, 2753)
[0000][PE] mean and std.dev: (1371.67, 426.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 416.172 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520483, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 478, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (659.30, 638.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.05, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1569, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7034)
[0000][PE] mean and std.dev: (1559.38, 1083.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 413.770 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520384, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 361, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1730)
[0000][PE] mean and std.dev: (436.00, 301.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1488, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1480.45, 801.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 412.706 CPU sec, 23.146 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520357, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 439, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (620.06, 483.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1423, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (1262.47, 510.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 412.994 CPU sec, 23.157 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520429, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 347, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1035)
[0000][PE] mean and std.dev: (330.09, 235.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.79, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1959, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1882.00, 903.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 412.005 CPU sec, 23.079 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520476, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 422, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1979)
[0000][PE] mean and std.dev: (432.24, 258.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1428, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (1270.82, 546.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 417.033 CPU sec, 23.842 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520646, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 451, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (716.56, 533.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1590, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1602.04, 957.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 416.117 CPU sec, 23.491 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520036, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 341, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1409)
[0000][PE] mean and std.dev: (395.95, 267.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1339, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1186.42, 647.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 417.320 CPU sec, 23.405 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520068, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 477, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (728.94, 715.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.30, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1617, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (1627.70, 1019.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 416.486 CPU sec, 23.474 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520291, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 373, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1892)
[0000][PE] mean and std.dev: (422.26, 328.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1694, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6996)
[0000][PE] mean and std.dev: (1790.95, 1251.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 416.599 CPU sec, 23.392 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520671, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 831, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6339)
[0000][PE] mean and std.dev: (1342.25, 1428.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.02, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1776, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1740.59, 659.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 411.045 CPU sec, 23.214 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520017, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 689, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1066.06, 1017.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.63, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1363, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (1500.29, 628.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 416.760 CPU sec, 23.335 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520402, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 447, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (841.53, 926.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1642, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1434.36, 624.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 417.753 CPU sec, 23.855 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520481, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 331, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (504.83, 438.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1374, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1442.05, 892.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 414.304 CPU sec, 23.730 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520517, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 357, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (807.36, 914.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1165, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (1056.82, 452.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 410.590 CPU sec, 23.572 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520485, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 424, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (800.82, 750.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (294, 1700, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5970)
[0000][PE] mean and std.dev: (1931.70, 1884.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9469)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1979, 3270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7256)
[0000][PE] mean and std.dev: (1979.42, 1297.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 418.925 CPU sec, 23.518 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520433, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 410, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (720.41, 671.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1266, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6890)
[0000][PE] mean and std.dev: (1931.26, 1681.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 417.783 CPU sec, 23.549 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520260, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 340, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1242)
[0000][PE] mean and std.dev: (398.29, 256.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1383, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6706)
[0000][PE] mean and std.dev: (1844.95, 1604.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 414.983 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520506, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 347, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (516.51, 480.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1649, 3592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8744)
[0000][PE] mean and std.dev: (2201.29, 1860.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 416.710 CPU sec, 23.354 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520605, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 439, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (688.59, 605.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1433, 1790, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1677.41, 705.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 413.886 CPU sec, 23.521 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 520715, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 437, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (603.34, 474.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (484, 1059, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1117.86, 849.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 414.364 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520219, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 451, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (676.18, 584.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.75, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1340, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1548.94, 888.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 423.347 CPU sec, 23.752 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520337, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 598, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (976.35, 873.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1702, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5999)
[0000][PE] mean and std.dev: (1716.48, 979.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 418.881 CPU sec, 23.514 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520405, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 349, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2315)
[0000][PE] mean and std.dev: (513.25, 528.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1322, 3731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8865)
[0000][PE] mean and std.dev: (2438.80, 2205.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 415.780 CPU sec, 23.281 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520808, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 334, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (651.66, 710.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.05, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1128, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (1098.25, 646.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 411.872 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520525, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 413, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2170)
[0000][PE] mean and std.dev: (514.17, 411.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1167, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1368.15, 678.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 413.764 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520163, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 415, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2188)
[0000][PE] mean and std.dev: (553.52, 545.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1414, 1773, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (144, 3319)
[0000][PE] mean and std.dev: (1612.83, 649.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 416.719 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519886, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 421, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2305)
[0000][PE] mean and std.dev: (585.21, 408.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.71, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1121, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1181.19, 515.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 415.228 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520430, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 507, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (772.59, 660.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.40, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1312, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1330.58, 651.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 416.031 CPU sec, 23.344 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520362, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 560, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4992)
[0000][PE] mean and std.dev: (1010.74, 961.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1306, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1367.92, 721.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 413.009 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520712, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 302, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (594.22, 572.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1502, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1822.05, 1394.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 412.487 CPU sec, 23.519 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 519865, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 406, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (860.43, 894.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.27, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1199, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1129.17, 607.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 411.975 CPU sec, 23.535 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521242, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 543, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (793.32, 697.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.97, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1592, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1398.53, 768.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 409.669 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520706, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 351, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (514.24, 510.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1378, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (1346.92, 436.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 419.494 CPU sec, 23.679 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520272, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 476, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (926.38, 865.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1562, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5704)
[0000][PE] mean and std.dev: (1566.12, 839.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 419.351 CPU sec, 23.645 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520409, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 383, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2110)
[0000][PE] mean and std.dev: (506.45, 440.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.97, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1457, 3405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8413)
[0000][PE] mean and std.dev: (2060.00, 1758.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 419.261 CPU sec, 23.489 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520799, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 384, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (649.06, 590.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1308, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1464.47, 704.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 418.344 CPU sec, 24.036 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520422, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 401, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (505.36, 457.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.83, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1264, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1314.50, 533.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 417.219 CPU sec, 23.383 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520942, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 588, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (793.97, 699.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1155, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (1205.57, 536.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 411.183 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520583, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 511, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (835.09, 851.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.06, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1453, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1580.64, 769.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 420.262 CPU sec, 23.609 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520516, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 585, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (764.02, 612.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1750, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1603.85, 751.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 420.727 CPU sec, 23.674 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520524, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 364, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2007)
[0000][PE] mean and std.dev: (473.68, 384.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.80, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1410, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1516.35, 950.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 420.228 CPU sec, 23.587 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520959, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 426, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2771)
[0000][PE] mean and std.dev: (635.94, 574.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 1885, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1991.64, 950.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 424.282 CPU sec, 23.750 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520543, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 615, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (729.85, 604.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1936, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7255)
[0000][PE] mean and std.dev: (1832.94, 916.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 417.754 CPU sec, 23.472 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520294, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 481, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (847.59, 844.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.51, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1308, 1877, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1993.65, 1106.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 415.936 CPU sec, 23.302 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520539, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 298, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1651)
[0000][PE] mean and std.dev: (430.85, 365.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1571, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6682)
[0000][PE] mean and std.dev: (1911.10, 1240.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 412.608 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520465, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 392, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (546.32, 453.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1307, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (1548.00, 812.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 415.372 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520367, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 483, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (902.03, 859.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1335, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (1229.42, 528.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 417.630 CPU sec, 23.399 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520505, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 380, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (463.58, 353.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (97, 1547, 4358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12880)
[0000][PE] mean and std.dev: (2532.00, 2737.56)
[0000][PE] low and high boundaries for proper pairs: (1, 17141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1470, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1515.39, 881.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 419.662 CPU sec, 23.515 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520487, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 509, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7302)
[0000][PE] mean and std.dev: (1350.00, 1540.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1301, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (1376.94, 874.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 416.229 CPU sec, 23.357 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520586, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 377, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (562.47, 526.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1502, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1681.81, 1070.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 414.127 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520499, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 731, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (900.59, 740.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.93, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 1812, 3985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9347)
[0000][PE] mean and std.dev: (2568.61, 1912.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 413.323 CPU sec, 23.175 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 521434, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 383, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (585.88, 544.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1213, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1379.00, 933.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 413.053 CPU sec, 23.124 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520281, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 380, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (589.77, 602.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.76, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1375, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1744.86, 1003.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 414.569 CPU sec, 23.292 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520390, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 584, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (708.00, 588.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.76, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1877, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4732)
[0000][PE] mean and std.dev: (1675.24, 871.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 412.791 CPU sec, 23.124 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520963, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 623, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (993.77, 1039.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.61, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1552, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7058)
[0000][PE] mean and std.dev: (2154.07, 1636.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 411.336 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520285, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 386, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (546.25, 528.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.73, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1393, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6822)
[0000][PE] mean and std.dev: (1889.36, 1232.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 416.710 CPU sec, 23.381 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520440, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 459, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (625.26, 460.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1195, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1495.37, 881.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 413.836 CPU sec, 23.190 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520791, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 437, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (589.32, 484.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (708, 1561, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1670.50, 1365.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7132)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1321, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5244)
[0000][PE] mean and std.dev: (1659.33, 1160.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 416.000 CPU sec, 23.338 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520155, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 897, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (831.50, 629.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.59, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1618, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1641.74, 837.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 422.980 CPU sec, 23.715 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520646, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 438, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (518.26, 421.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.89, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1119, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1409.65, 851.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 413.112 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520620, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 411, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (590.77, 531.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1716, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6198)
[0000][PE] mean and std.dev: (1832.05, 1411.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 411.971 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520403, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 573, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (830.42, 679.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1542, 2630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1929.80, 1157.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 413.257 CPU sec, 23.191 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520914, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 542, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (532.91, 373.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1201, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1307.38, 558.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 419.331 CPU sec, 23.528 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520643, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 884, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (981.27, 965.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1153, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1462.03, 879.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 415.184 CPU sec, 23.281 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520666, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 424, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2173)
[0000][PE] mean and std.dev: (507.23, 366.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1189, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (1171.67, 578.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 420.126 CPU sec, 23.588 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520240, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 465, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2812)
[0000][PE] mean and std.dev: (639.00, 575.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1468, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1339.32, 571.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 415.779 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520300, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 364, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (576.72, 528.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1040, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1266.05, 835.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 415.864 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520891, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 414, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (648.77, 601.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.06, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1506, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7574)
[0000][PE] mean and std.dev: (1990.20, 1394.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 415.805 CPU sec, 23.334 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520576, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 356, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (728.59, 804.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1476, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1494.94, 651.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 413.708 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 519880, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 556, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (634.05, 477.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.49, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1719, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5674)
[0000][PE] mean and std.dev: (1705.54, 849.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 416.845 CPU sec, 23.451 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520717, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 398, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (823.05, 906.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1645, 3353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7799)
[0000][PE] mean and std.dev: (1931.55, 1105.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 413.421 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520502, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 441, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (711.50, 560.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1585, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (1642.43, 886.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 413.413 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520735, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 386, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (565.03, 509.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.78, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1320, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1516.78, 929.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 414.987 CPU sec, 23.339 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520599, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 547, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (762.39, 702.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 2036, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1907.00, 775.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 416.176 CPU sec, 23.328 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520082, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 425, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (692.03, 629.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1164, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (1200.67, 366.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 419.264 CPU sec, 23.510 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520578, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 430, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1685)
[0000][PE] mean and std.dev: (417.34, 261.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1732, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1706.29, 734.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 415.859 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520585, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 358, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (620.79, 693.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.77, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1493, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1517.12, 697.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 418.698 CPU sec, 23.484 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520422, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 405, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (683.33, 803.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.62, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1364, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1522.73, 900.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 416.977 CPU sec, 23.348 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520412, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 386, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2032)
[0000][PE] mean and std.dev: (517.16, 410.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1433, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1364.12, 637.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 418.509 CPU sec, 23.483 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520901, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 382, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1720)
[0000][PE] mean and std.dev: (484.67, 355.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1686, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1655.00, 759.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 416.584 CPU sec, 23.375 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520389, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 345, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (619.62, 582.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.01, 121.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1668, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1478.89, 577.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 417.571 CPU sec, 23.423 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520605, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 363, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (683.29, 715.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1325, 2693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6523)
[0000][PE] mean and std.dev: (1463.27, 1036.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 417.595 CPU sec, 23.418 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520926, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 376, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (635.00, 587.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1419, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1733.47, 1167.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 418.252 CPU sec, 23.392 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520393, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 409, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (768.90, 777.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1229, 3265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8057)
[0000][PE] mean and std.dev: (1700.57, 1211.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 417.311 CPU sec, 23.449 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520293, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 327, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1713)
[0000][PE] mean and std.dev: (409.76, 340.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1297, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4921)
[0000][PE] mean and std.dev: (1434.95, 847.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 417.647 CPU sec, 23.436 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520810, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 325, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1132)
[0000][PE] mean and std.dev: (298.74, 190.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.45, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1431, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1719.33, 1118.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 418.524 CPU sec, 23.459 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520106, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 527, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (693.17, 467.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1610, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1462.73, 635.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 413.792 CPU sec, 23.181 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521043, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 505, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (686.81, 578.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.01, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1314, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1261.54, 662.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 416.280 CPU sec, 23.343 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520519, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 426, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (629.28, 483.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.89, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1492, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5514)
[0000][PE] mean and std.dev: (1593.11, 1043.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 415.099 CPU sec, 23.361 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 520279, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 441, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (693.49, 665.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1630, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1312.86, 702.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 414.605 CPU sec, 23.616 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520649, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 370, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (756.62, 797.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 2269, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6859)
[0000][PE] mean and std.dev: (2060.43, 1266.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 413.096 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520450, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 416, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4939)
[0000][PE] mean and std.dev: (881.17, 888.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1287, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (1267.71, 767.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 412.123 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520324, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1052, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1218.80, 1228.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1879, 4134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10554)
[0000][PE] mean and std.dev: (2612.04, 2217.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 413.531 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520535, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 446, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (932.54, 928.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.57, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1709, 3763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9355)
[0000][PE] mean and std.dev: (2183.95, 1966.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 413.580 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520219, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 660, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1088.95, 1107.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1565, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4551)
[0000][PE] mean and std.dev: (1445.93, 514.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 415.872 CPU sec, 23.328 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520785, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 407, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (690.05, 604.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1524, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (1471.67, 591.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 412.556 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520863, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 390, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (648.46, 522.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1154, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (1217.58, 525.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 415.461 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520116, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 395, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (743.34, 711.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1487, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1578.29, 814.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 414.139 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520862, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 414, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6737)
[0000][PE] mean and std.dev: (1222.38, 1695.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.02, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 414.097 CPU sec, 23.196 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520486, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 421, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2969)
[0000][PE] mean and std.dev: (730.44, 661.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1848, 3132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7296)
[0000][PE] mean and std.dev: (2053.00, 1344.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 419.446 CPU sec, 23.523 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520464, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 666, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (784.15, 626.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1136, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (1086.16, 579.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 412.687 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519850, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 362, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (727.31, 796.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.99, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1316, 3571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8821)
[0000][PE] mean and std.dev: (1897.69, 1428.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 415.828 CPU sec, 23.344 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520704, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 441, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (490.06, 353.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1171, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (1084.50, 358.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 415.170 CPU sec, 23.321 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520278, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 609, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (860.48, 841.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.20, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1879, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1739.75, 1073.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 415.119 CPU sec, 23.351 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520440, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 406, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (711.25, 622.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 1681, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (1794.31, 841.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 418.780 CPU sec, 23.478 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520012, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 351, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2223)
[0000][PE] mean and std.dev: (505.06, 456.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1172, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1054.27, 635.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 415.823 CPU sec, 23.310 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520365, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 448, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2010)
[0000][PE] mean and std.dev: (582.84, 463.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.56, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1220, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (1278.92, 568.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 421.472 CPU sec, 23.615 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520690, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 426, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (705.00, 656.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1606, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (1497.94, 667.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 416.631 CPU sec, 23.417 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520429, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 430, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (709.43, 637.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.80, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1478, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (1513.89, 577.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 415.455 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520677, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 798, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1062.82, 968.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.67, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1485, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1620.50, 651.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 413.370 CPU sec, 23.209 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520857, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 418, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (693.11, 578.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1702, 3373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8253)
[0000][PE] mean and std.dev: (2340.61, 1995.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 414.775 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520506, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 448, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (654.26, 636.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1714, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (1460.80, 620.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 416.695 CPU sec, 23.354 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520595, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 662, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (730.35, 511.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 2054, 3320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7444)
[0000][PE] mean and std.dev: (2090.21, 1192.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 414.895 CPU sec, 23.401 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520514, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 555, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (787.93, 654.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (959, 2868, 3658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9056)
[0000][PE] mean and std.dev: (3137.20, 2915.83)
[0000][PE] low and high boundaries for proper pairs: (1, 14801)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1194, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (1128.95, 495.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 415.326 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520855, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 436, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (571.47, 469.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.74, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1054, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1167.67, 672.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 416.262 CPU sec, 23.437 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520415, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 376, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (689.00, 629.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1771, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1602.44, 920.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 415.961 CPU sec, 23.491 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520447, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 436, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (976.27, 1047.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1346, 3120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7520)
[0000][PE] mean and std.dev: (2019.73, 1662.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 414.397 CPU sec, 23.417 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520484, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 473, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (780.54, 781.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1364, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1577.70, 926.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 416.103 CPU sec, 23.362 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520354, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 430, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1000.74, 1197.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1166, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (1171.56, 460.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 413.135 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520485, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 369, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (633.97, 710.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.83, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1451, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1812.91, 1185.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 414.343 CPU sec, 23.218 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520309, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 360, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2720)
[0000][PE] mean and std.dev: (530.69, 574.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.45, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1269, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (1356.82, 643.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 416.371 CPU sec, 23.342 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520592, 7, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 700, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (958.81, 816.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1545, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1471.36, 825.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 411.231 CPU sec, 23.042 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520793, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 364, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2716)
[0000][PE] mean and std.dev: (637.29, 644.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1805, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1911.04, 936.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 412.856 CPU sec, 23.137 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520588, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 411, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (941.33, 1046.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1434, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1722.58, 926.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 417.519 CPU sec, 23.451 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520502, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 461, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (793.85, 654.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1411, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (1574.83, 589.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 414.472 CPU sec, 23.240 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520438, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 452, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (897.44, 823.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1535, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1536.73, 650.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 418.231 CPU sec, 23.432 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520781, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 343, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1716)
[0000][PE] mean and std.dev: (442.73, 334.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1806, 4939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12591)
[0000][PE] mean and std.dev: (2560.25, 1966.75)
[0000][PE] low and high boundaries for proper pairs: (1, 16417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 418.525 CPU sec, 23.485 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520633, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 480, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1075.81, 1328.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1245, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (1228.00, 395.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 421.404 CPU sec, 23.598 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520390, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 452, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2068)
[0000][PE] mean and std.dev: (573.96, 370.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1898, 3203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7259)
[0000][PE] mean and std.dev: (1899.86, 1082.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 421.918 CPU sec, 23.720 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520787, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 484, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (985.47, 1095.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1342, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (1395.08, 613.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 412.991 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520611, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 357, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1454)
[0000][PE] mean and std.dev: (424.78, 274.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 1223, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1503.48, 1246.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 412.731 CPU sec, 23.150 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520768, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 386, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (874.63, 1000.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1386, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1411.67, 475.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 419.876 CPU sec, 23.563 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520531, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 351, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (731.97, 780.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.87, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1579, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1557.64, 791.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 419.465 CPU sec, 23.495 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520574, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 379, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (755.21, 722.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1212, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1566.12, 1086.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 417.162 CPU sec, 23.440 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520264, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 395, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (632.42, 596.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 2276, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6914)
[0000][PE] mean and std.dev: (2050.88, 975.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 418.463 CPU sec, 23.428 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520458, 0, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 668, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (766.32, 656.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1315, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1305.75, 655.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 416.789 CPU sec, 23.428 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520189, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 326, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (297.47, 167.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1540, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1505.07, 925.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 415.771 CPU sec, 23.293 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520587, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 394, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2170)
[0000][PE] mean and std.dev: (561.12, 429.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.70, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1089, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (1110.53, 320.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 418.745 CPU sec, 23.539 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520648, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 375, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (609.58, 515.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.01, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1199, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1379.40, 885.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 409.540 CPU sec, 22.960 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520902, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 440, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (687.71, 702.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1629, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1807.71, 1189.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 415.827 CPU sec, 23.423 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520690, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 409, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2293)
[0000][PE] mean and std.dev: (588.82, 506.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.53, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1140, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 2237)
[0000][PE] mean and std.dev: (1086.50, 335.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 416.013 CPU sec, 23.303 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520568, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 375, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1655)
[0000][PE] mean and std.dev: (490.68, 382.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1438, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7257)
[0000][PE] mean and std.dev: (1915.33, 1411.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 413.387 CPU sec, 23.195 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520918, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 320, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (585.50, 515.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1670, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1790.06, 1019.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 416.174 CPU sec, 23.455 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520600, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 350, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1838)
[0000][PE] mean and std.dev: (446.86, 438.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1635, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (1758.00, 1007.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 415.026 CPU sec, 23.276 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520879, 12, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 403, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (725.39, 843.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (484, 1730, 4355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12097)
[0000][PE] mean and std.dev: (2762.00, 2799.50)
[0000][PE] low and high boundaries for proper pairs: (1, 15968)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1392, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6454)
[0000][PE] mean and std.dev: (1692.46, 1024.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 412.118 CPU sec, 23.098 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520871, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 388, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (628.36, 669.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1110, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6138)
[0000][PE] mean and std.dev: (1385.57, 894.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 416.873 CPU sec, 23.435 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520337, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 319, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (641.51, 684.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1541, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6350)
[0000][PE] mean and std.dev: (1777.73, 1263.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 424.257 CPU sec, 23.841 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520553, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 388, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (702.09, 713.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1456, 4553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11611)
[0000][PE] mean and std.dev: (2533.53, 2258.26)
[0000][PE] low and high boundaries for proper pairs: (1, 15140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 415.665 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520474, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 419, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (865.85, 912.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.68, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1185, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1332.67, 713.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 415.228 CPU sec, 23.441 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520531, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 934, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (929.48, 716.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.21, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 420.820 CPU sec, 23.657 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520941, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 463, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (612.45, 467.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1622, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4355)
[0000][PE] mean and std.dev: (1402.20, 675.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 415.498 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520944, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 436, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (724.60, 557.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1572, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (1633.43, 683.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 414.083 CPU sec, 23.327 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000298 bp)...
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520907, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 965, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1025.70, 818.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.72, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1460, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6501)
[0000][PE] mean and std.dev: (1985.05, 1424.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 410.029 CPU sec, 23.968 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520495, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 609, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (947.97, 912.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1341, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1330.71, 511.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 417.817 CPU sec, 23.497 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520451, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 384, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (1079.76, 1210.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1236, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1426.35, 859.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 418.648 CPU sec, 23.517 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 521106, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 472, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (811.54, 766.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1688, 2702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1773.25, 1145.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 422.413 CPU sec, 23.741 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520129, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 796, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (739.74, 567.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1682, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6390)
[0000][PE] mean and std.dev: (1750.60, 930.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 422.597 CPU sec, 23.732 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520395, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 447, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (859.37, 882.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1333, 1482, 4109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9661)
[0000][PE] mean and std.dev: (2893.24, 2799.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 419.374 CPU sec, 23.535 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 519934, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 382, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (590.77, 541.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1372, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1272.11, 497.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 425.103 CPU sec, 23.826 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 520509, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 434, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (813.69, 733.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1145, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (1050.14, 463.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 421.557 CPU sec, 23.744 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520714, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 363, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (521.40, 425.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.81, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1451, 2500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (1742.29, 928.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 417.665 CPU sec, 23.467 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520683, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 356, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1887)
[0000][PE] mean and std.dev: (515.57, 492.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 865, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (626.75, 489.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1406, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6609)
[0000][PE] mean and std.dev: (1907.48, 1543.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 420.073 CPU sec, 23.587 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520379, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 360, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (562.65, 504.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.38, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1410, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1211.71, 512.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 419.922 CPU sec, 23.646 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520173, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 496, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (706.15, 583.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1556, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (1758.76, 929.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 422.264 CPU sec, 23.771 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520277, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 431, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (624.19, 470.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1428, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1455.19, 603.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 425.014 CPU sec, 23.904 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520467, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 343, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (532.93, 520.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1610, 4261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10593)
[0000][PE] mean and std.dev: (2423.00, 2210.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 415.209 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520359, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 453, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (660.41, 576.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.47, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1369, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7431)
[0000][PE] mean and std.dev: (2096.11, 1748.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 417.111 CPU sec, 23.401 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520232, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 774, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (739.16, 589.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.62, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1531, 1784, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (321, 3346)
[0000][PE] mean and std.dev: (1737.67, 392.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 415.965 CPU sec, 23.384 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520642, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 726, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6651)
[0000][PE] mean and std.dev: (1512.55, 1669.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.74, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1173, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (1213.59, 655.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 414.782 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520626, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 339, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (495.11, 440.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.49, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1409, 1759, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1834.89, 683.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 416.284 CPU sec, 23.388 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520864, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 346, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (546.10, 529.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1094, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (1306.25, 592.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 414.908 CPU sec, 23.279 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520482, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 711, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1104.62, 1062.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1379, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1289.88, 631.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 418.255 CPU sec, 23.482 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520363, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 444, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (758.82, 822.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.86, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1385, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6061)
[0000][PE] mean and std.dev: (1650.95, 1056.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 414.039 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520670, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 442, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (715.47, 607.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.76, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1376, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1464.91, 701.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 414.135 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520592, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 391, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (577.22, 587.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1450, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1591.92, 720.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 419.902 CPU sec, 23.556 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519981, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 377, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1848)
[0000][PE] mean and std.dev: (543.94, 435.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1650, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5802)
[0000][PE] mean and std.dev: (1884.47, 1172.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 418.444 CPU sec, 23.488 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520530, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 820, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (782.32, 531.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 1700, 2944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6180)
[0000][PE] mean and std.dev: (2137.64, 1313.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 416.305 CPU sec, 23.316 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520514, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 702, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1070.77, 1141.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1203, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (1250.79, 578.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 417.706 CPU sec, 23.440 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520826, 12, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 448, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (750.80, 561.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (356, 2520, 4292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12164)
[0000][PE] mean and std.dev: (2291.83, 2344.09)
[0000][PE] low and high boundaries for proper pairs: (1, 16100)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1648, 3338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7662)
[0000][PE] mean and std.dev: (2303.07, 1786.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 415.222 CPU sec, 23.373 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520221, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 301, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (641.90, 702.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1770, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6519)
[0000][PE] mean and std.dev: (2112.65, 1320.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 416.805 CPU sec, 23.450 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520856, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 649, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (818.67, 727.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1410, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (1479.56, 821.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 413.175 CPU sec, 23.216 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520621, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 387, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2083)
[0000][PE] mean and std.dev: (555.19, 461.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1349, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5174)
[0000][PE] mean and std.dev: (1648.90, 1048.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 422.461 CPU sec, 23.713 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520424, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 741, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (766.14, 571.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1516, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1771.17, 1166.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 416.291 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520576, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 407, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (854.46, 815.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1293, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1687.30, 1165.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 420.814 CPU sec, 23.586 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520560, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 476, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (799.58, 711.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1206, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (1192.65, 590.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 418.806 CPU sec, 23.502 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520637, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 417, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (728.82, 661.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1246, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1436.16, 852.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 415.284 CPU sec, 23.304 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 521380, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 388, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (727.62, 769.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1266, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1804.75, 1288.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 414.882 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520681, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 356, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (657.79, 655.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1234, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (1217.78, 572.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 415.405 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520447, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 431, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (955.91, 966.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1180, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1270.47, 600.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 415.969 CPU sec, 23.368 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520548, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 381, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (838.14, 848.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1235, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1429.42, 820.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 417.444 CPU sec, 23.414 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520643, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 495, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (733.79, 672.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1505, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1210.08, 644.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 417.410 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520487, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 522, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (598.42, 413.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1164, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1394.12, 913.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 415.327 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520973, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 405, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (893.33, 936.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1376, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (1283.83, 624.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 413.989 CPU sec, 23.253 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520944, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 352, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (392.76, 275.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1087, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (1179.68, 686.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 416.226 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 519992, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 391, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (597.00, 488.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1558, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1587.33, 1085.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 415.511 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520534, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 419, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (711.44, 719.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1660, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (2034.33, 1256.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 416.949 CPU sec, 23.479 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520658, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 613, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (846.00, 759.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1185, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (1207.39, 520.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 419.739 CPU sec, 23.527 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520157, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 358, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (479.83, 411.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1226, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1352.88, 756.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 414.485 CPU sec, 23.244 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520799, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 420, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (646.32, 518.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1298, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (1340.64, 492.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 413.787 CPU sec, 23.222 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520316, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 499, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1108.58, 1032.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.35, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1627, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1570.26, 546.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 414.635 CPU sec, 23.260 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520259, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 618, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (687.81, 528.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1493, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1471.58, 835.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 414.878 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520801, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 394, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (648.00, 552.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 1358, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5734)
[0000][PE] mean and std.dev: (1257.79, 868.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 414.119 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520521, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 404, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (690.31, 630.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1569, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (1541.05, 736.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 414.036 CPU sec, 23.209 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520470, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 330, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (476.39, 426.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1534, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1359.33, 544.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 417.077 CPU sec, 23.752 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520384, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 365, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (356.28, 184.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1262, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (1350.94, 683.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 413.989 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520381, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 438, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (590.20, 621.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.75, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (202, 862, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6079)
[0000][PE] mean and std.dev: (1432.23, 1552.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8038)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1172, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6431)
[0000][PE] mean and std.dev: (1504.20, 1261.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 419.232 CPU sec, 23.542 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520465, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 533, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2771)
[0000][PE] mean and std.dev: (639.08, 524.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.00, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1219, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1162.11, 640.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 417.494 CPU sec, 23.428 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520362, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 491, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (889.76, 861.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.60, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1421, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1395.91, 723.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 424.006 CPU sec, 23.842 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520604, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 344, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (485.86, 491.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1587, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1484.88, 615.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 414.708 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520366, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 522, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (548.60, 466.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1477, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1434.20, 648.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 416.805 CPU sec, 23.448 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520245, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 442, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (603.62, 523.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.84, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1573, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (1693.67, 1058.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 421.825 CPU sec, 23.685 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520454, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 354, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (552.48, 545.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.97, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1324, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (1450.54, 764.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 412.300 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520555, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 455, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (632.66, 566.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.98, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1862, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1810.60, 915.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 413.223 CPU sec, 23.140 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520950, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 500, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (864.44, 743.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1942, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1627.78, 637.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 416.611 CPU sec, 23.402 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520303, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 347, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (451.06, 422.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1945, 4021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10025)
[0000][PE] mean and std.dev: (2659.21, 2367.47)
[0000][PE] low and high boundaries for proper pairs: (1, 13027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 416.638 CPU sec, 23.444 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520628, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 541, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (806.65, 624.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.54, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1215, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1326.39, 803.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 412.303 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519983, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 471, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (717.45, 655.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1400, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1569.63, 718.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 419.748 CPU sec, 23.659 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520737, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 317, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1997)
[0000][PE] mean and std.dev: (415.93, 374.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1366, 2008, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5353)
[0000][PE] mean and std.dev: (1641.06, 755.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 419.969 CPU sec, 23.537 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520320, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 376, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (625.08, 626.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1396, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (1307.15, 634.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 414.691 CPU sec, 23.264 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520007, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 500, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (787.11, 749.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 996, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1461.38, 1178.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 417.161 CPU sec, 23.394 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520929, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 402, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1929)
[0000][PE] mean and std.dev: (532.51, 382.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1050, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (1066.39, 492.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 413.838 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520249, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 372, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (567.92, 619.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1589, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1422.52, 700.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 413.530 CPU sec, 23.214 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 521047, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 300, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (443.86, 358.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.97, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1236, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1341.18, 845.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 413.387 CPU sec, 23.235 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520176, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 386, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (469.07, 381.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1375, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1596.36, 930.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 411.951 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520350, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 613, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5842)
[0000][PE] mean and std.dev: (1370.58, 1384.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1382, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6117)
[0000][PE] mean and std.dev: (1654.24, 1093.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 418.032 CPU sec, 23.566 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520470, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 836, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (827.12, 685.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1567, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (1351.24, 549.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 414.741 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520483, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 401, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (727.65, 714.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 2180, 3177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6777)
[0000][PE] mean and std.dev: (2356.32, 1301.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 416.641 CPU sec, 23.369 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520394, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 410, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (557.45, 574.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.19, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1395, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (1385.88, 679.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 415.719 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 519959, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 412, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (721.41, 693.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1402, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1555.19, 833.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 418.854 CPU sec, 23.509 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520773, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 336, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1760)
[0000][PE] mean and std.dev: (409.22, 307.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1733, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5293)
[0000][PE] mean and std.dev: (1638.53, 907.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 414.860 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520420, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 369, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (537.31, 425.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.06, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1745, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6264)
[0000][PE] mean and std.dev: (1718.76, 975.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 420.150 CPU sec, 23.558 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520143, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 354, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2179)
[0000][PE] mean and std.dev: (508.62, 480.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.59, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1188, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1377.50, 729.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 420.905 CPU sec, 23.602 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520741, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 344, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (612.40, 619.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.92, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1760, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1733.14, 652.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 414.051 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520618, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 570, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (643.03, 618.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.56, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 2076, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (2055.04, 1218.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 419.668 CPU sec, 23.712 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520477, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 379, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (717.49, 771.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1048, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (1182.55, 492.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 415.022 CPU sec, 23.270 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520635, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 425, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (872.00, 1046.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.15, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1844, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1782.90, 998.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 416.312 CPU sec, 23.361 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520415, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 428, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (613.10, 512.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1001, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (1052.90, 422.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 418.561 CPU sec, 23.472 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520883, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 462, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (741.06, 672.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1582, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6583)
[0000][PE] mean and std.dev: (1833.30, 1184.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 424.910 CPU sec, 23.940 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520761, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 493, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (788.00, 837.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.45, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1941, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (2032.80, 1411.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 415.705 CPU sec, 23.315 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520463, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 339, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (453.31, 418.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.62, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1605, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (1468.50, 659.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 418.042 CPU sec, 23.483 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520907, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 488, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (904.56, 901.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.89, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1479, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1340.12, 915.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 416.648 CPU sec, 23.369 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520543, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 431, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2750)
[0000][PE] mean and std.dev: (500.18, 454.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1132, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1175.76, 630.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 415.576 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520280, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 460, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (850.59, 790.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1449, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (1341.36, 673.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 417.786 CPU sec, 23.409 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520434, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 444, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2337)
[0000][PE] mean and std.dev: (665.91, 563.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1286, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (1072.64, 372.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 420.298 CPU sec, 23.551 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520615, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 383, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2152)
[0000][PE] mean and std.dev: (559.61, 475.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1395, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5513)
[0000][PE] mean and std.dev: (1548.65, 966.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 418.627 CPU sec, 23.555 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520421, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 428, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (708.24, 666.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1441, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (778, 1998)
[0000][PE] mean and std.dev: (1369.93, 215.38)
[0000][PE] low and high boundaries for proper pairs: (508, 2242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 417.156 CPU sec, 23.422 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520277, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 485, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (962.70, 1080.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1481, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (172, 2977)
[0000][PE] mean and std.dev: (1553.08, 570.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 418.266 CPU sec, 23.498 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520485, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 375, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (671.30, 612.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.35, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1058, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6366)
[0000][PE] mean and std.dev: (1788.23, 1565.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 413.270 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520561, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 324, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1611)
[0000][PE] mean and std.dev: (411.10, 367.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.67, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1087, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1391.88, 724.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 414.684 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520628, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 357, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (578.98, 568.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.18, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1291, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1348.42, 690.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 412.107 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520595, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 605, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (851.79, 760.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.98, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1332, 1817, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1892.94, 968.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 416.990 CPU sec, 23.404 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520803, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 552, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (950.31, 875.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1146, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (1161.48, 617.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 413.456 CPU sec, 23.214 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 521023, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 460, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (724.41, 672.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.50, 121.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1749, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4926)
[0000][PE] mean and std.dev: (1569.28, 932.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 414.079 CPU sec, 23.259 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520643, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 312, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (471.69, 407.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.70, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1385, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1325.63, 734.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 414.773 CPU sec, 23.245 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520241, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 600, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (772.70, 691.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.75, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1875, 3382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7646)
[0000][PE] mean and std.dev: (2276.29, 1437.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 418.274 CPU sec, 23.506 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520679, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 577, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1003.98, 1080.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1406, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7603)
[0000][PE] mean and std.dev: (1783.75, 1442.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 416.646 CPU sec, 23.344 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520612, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 430, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (537.89, 417.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.72, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1670, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1448.57, 730.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 418.623 CPU sec, 23.496 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520498, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 605, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1066.59, 967.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1286, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1484.70, 887.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 420.216 CPU sec, 23.576 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520877, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 808, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (983.22, 906.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1569, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (1550.17, 637.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 413.863 CPU sec, 23.617 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520567, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 461, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (561.44, 552.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.66, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1923, 3390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8044)
[0000][PE] mean and std.dev: (2463.47, 1885.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 414.791 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520737, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 440, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (576.03, 434.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.95, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1193, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1373.96, 820.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 416.024 CPU sec, 23.403 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520228, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 366, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2076)
[0000][PE] mean and std.dev: (578.89, 503.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1292, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (1073.36, 423.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 418.514 CPU sec, 23.435 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 519713, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 370, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (553.77, 498.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1683, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1638.57, 675.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 420.858 CPU sec, 23.578 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520228, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 538, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (834.77, 812.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1567, 2786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1960.56, 1446.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 416.933 CPU sec, 23.406 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520838, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 392, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (845.88, 760.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1199, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (1236.07, 541.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 415.483 CPU sec, 23.339 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520689, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 372, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (748.21, 761.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1504, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7057)
[0000][PE] mean and std.dev: (1698.27, 931.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 416.987 CPU sec, 23.397 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520264, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 405, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (604.45, 502.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.14, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1779, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6077)
[0000][PE] mean and std.dev: (1934.00, 1105.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 421.652 CPU sec, 23.688 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520458, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 453, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (803.58, 841.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1447, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1535.00, 844.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 414.266 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520557, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 941, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1016.50, 868.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1638, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1590.38, 699.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 419.399 CPU sec, 23.553 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520798, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 279, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1385)
[0000][PE] mean and std.dev: (386.52, 311.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1679, 3545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8345)
[0000][PE] mean and std.dev: (1829.30, 1143.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 416.759 CPU sec, 23.370 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520336, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 398, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (637.32, 647.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1354, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5736)
[0000][PE] mean and std.dev: (1479.58, 909.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 423.665 CPU sec, 23.728 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520631, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 456, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (896.94, 1032.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1338, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1396.12, 679.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 415.841 CPU sec, 23.341 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520293, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 370, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1938)
[0000][PE] mean and std.dev: (527.29, 386.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.30, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1295, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (1524.37, 809.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 416.869 CPU sec, 23.429 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520413, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 331, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (601.78, 546.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1326, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (1272.13, 676.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 415.716 CPU sec, 23.318 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520592, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 510, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (665.46, 570.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1247, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1256.07, 586.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 415.745 CPU sec, 23.312 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520411, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 358, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (618.67, 604.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1483, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6491)
[0000][PE] mean and std.dev: (1781.52, 1070.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 416.641 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 520367, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 345, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (672.84, 669.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1695, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1608.30, 1207.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 419.739 CPU sec, 24.083 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520537, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 442, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (913.41, 955.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1715, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6991)
[0000][PE] mean and std.dev: (1935.75, 1248.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 416.757 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520519, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 404, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (753.59, 641.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1067, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (1159.85, 529.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 415.390 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 521077, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 279, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1961)
[0000][PE] mean and std.dev: (373.88, 361.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1280, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1242.12, 806.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 413.092 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520540, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 461, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (777.38, 682.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1396, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1436.05, 812.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 420.038 CPU sec, 23.555 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520483, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 377, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (893.65, 1050.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1441, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1528.30, 824.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 412.068 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520456, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 488, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (761.13, 872.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1468, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1857.96, 1259.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 419.118 CPU sec, 23.515 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520819, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 402, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (715.50, 701.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1292, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1541.27, 737.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 417.147 CPU sec, 23.404 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520853, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 407, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (673.24, 702.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1072, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1525.06, 1167.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 421.748 CPU sec, 23.714 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520575, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 442, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (705.77, 750.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.67, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 1501, 5645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16169)
[0000][PE] mean and std.dev: (2952.50, 2938.62)
[0000][PE] low and high boundaries for proper pairs: (1, 21431)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1330, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (1305.45, 488.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 415.627 CPU sec, 23.307 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520560, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 374, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (477.86, 378.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1309, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6989)
[0000][PE] mean and std.dev: (1806.24, 1506.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 421.505 CPU sec, 23.652 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520890, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 364, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2012)
[0000][PE] mean and std.dev: (564.91, 533.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.67, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1337, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1336.79, 574.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 419.065 CPU sec, 23.504 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520585, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 442, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (764.93, 712.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 1256, 3916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11074)
[0000][PE] mean and std.dev: (2278.83, 2330.16)
[0000][PE] low and high boundaries for proper pairs: (1, 14653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 416.222 CPU sec, 23.376 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520399, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 370, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (444.39, 382.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1475, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1417.36, 679.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 422.352 CPU sec, 23.720 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520663, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 399, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (737.71, 729.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.60, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1358, 1697, 3941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9107)
[0000][PE] mean and std.dev: (2779.85, 2593.69)
[0000][PE] low and high boundaries for proper pairs: (1, 13155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 419.570 CPU sec, 23.565 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520348, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 392, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1473)
[0000][PE] mean and std.dev: (411.58, 283.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 2119, 3685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8757)
[0000][PE] mean and std.dev: (2702.27, 2193.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 419.954 CPU sec, 23.585 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520712, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 375, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1598)
[0000][PE] mean and std.dev: (431.79, 335.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1300, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1249.38, 731.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 415.796 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520893, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 353, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (724.96, 809.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1341, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (1160.25, 367.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 417.517 CPU sec, 23.403 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520854, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 370, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (754.21, 692.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.96, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1422, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1509.12, 606.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 418.258 CPU sec, 23.535 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520818, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 356, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (595.11, 524.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.71, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1636, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1773.60, 858.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 414.372 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520677, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 401, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (698.14, 629.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1330, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1422.00, 870.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 412.096 CPU sec, 23.120 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520609, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 491, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (876.71, 834.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.05, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1291, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1583.05, 867.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 415.511 CPU sec, 23.264 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520802, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 383, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (771.66, 756.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.33, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1145, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1276.61, 784.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 415.019 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520588, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 339, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (558.66, 671.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1332, 3475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8635)
[0000][PE] mean and std.dev: (1655.13, 1155.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 416.642 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520873, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 461, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (721.10, 633.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.85, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1552, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1643.89, 1003.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 412.892 CPU sec, 23.121 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520168, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 480, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (796.22, 685.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.67, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1601, 4232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10170)
[0000][PE] mean and std.dev: (2266.00, 1675.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 417.718 CPU sec, 23.394 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520518, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 637, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (787.50, 618.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.55, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1495, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1728.11, 924.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 415.784 CPU sec, 23.276 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520531, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 521, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (718.66, 658.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1324, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5883)
[0000][PE] mean and std.dev: (1362.84, 814.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 417.436 CPU sec, 23.391 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520287, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 390, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2369)
[0000][PE] mean and std.dev: (533.27, 483.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1498, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1677.81, 1032.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 411.520 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520714, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 479, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (847.50, 914.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 748, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8061)
[0000][PE] mean and std.dev: (1524.11, 1781.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10664)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1247, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1637.38, 1044.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 416.838 CPU sec, 23.364 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520365, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 390, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (416.54, 267.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1242, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1434.73, 914.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 421.351 CPU sec, 23.712 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520368, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 450, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (611.73, 510.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1147, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1128.14, 652.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 417.983 CPU sec, 23.454 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 521034, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 419, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (816.59, 935.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.04, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1250, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1467.93, 737.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 421.132 CPU sec, 23.682 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 521045, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 549, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (736.86, 649.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1567, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1639.05, 1048.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 444.462 CPU sec, 24.948 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520309, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 601, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (890.91, 833.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1608, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7826)
[0000][PE] mean and std.dev: (2294.80, 1908.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 441.799 CPU sec, 24.843 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520510, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 491, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (681.70, 521.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.60, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1488, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1435.39, 832.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 443.464 CPU sec, 24.918 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520131, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 364, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (971.74, 1084.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.70, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1265, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1262.17, 695.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 442.459 CPU sec, 24.886 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520441, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 422, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (908.16, 1065.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1696, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5093)
[0000][PE] mean and std.dev: (1684.96, 820.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 440.908 CPU sec, 25.101 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520761, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 376, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (529.03, 438.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1773, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6696)
[0000][PE] mean and std.dev: (2077.96, 1535.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 442.173 CPU sec, 25.077 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520913, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 443, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (606.90, 484.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 438.513 CPU sec, 24.957 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520301, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 335, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2642)
[0000][PE] mean and std.dev: (594.81, 536.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.67, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1236, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1710.39, 1203.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 444.373 CPU sec, 25.308 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520115, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 406, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (564.33, 464.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.43, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1286, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (244, 2389)
[0000][PE] mean and std.dev: (1224.68, 332.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 442.430 CPU sec, 25.273 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520681, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 383, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2217)
[0000][PE] mean and std.dev: (527.79, 498.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.07, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1258, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (1173.52, 495.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 439.356 CPU sec, 25.054 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520498, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 518, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (850.76, 790.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1451, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1800.95, 928.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 444.046 CPU sec, 24.978 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 519990, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 378, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (580.07, 472.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.00, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1381, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1709.65, 1127.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 445.388 CPU sec, 25.038 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520160, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 521, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (707.06, 562.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1420, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1372.46, 543.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 441.488 CPU sec, 24.786 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520206, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 338, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2124)
[0000][PE] mean and std.dev: (560.17, 551.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1654, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5716)
[0000][PE] mean and std.dev: (1597.07, 853.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 439.952 CPU sec, 24.727 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521248, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 276, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (531.58, 561.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.12, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1446, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1329.32, 758.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 435.621 CPU sec, 24.488 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520577, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 566, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (794.50, 646.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1148, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (1505.24, 894.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 440.327 CPU sec, 24.720 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520782, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 678, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (960.15, 988.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1702, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6736)
[0000][PE] mean and std.dev: (2012.73, 1293.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 442.792 CPU sec, 25.092 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520936, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 392, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (589.85, 526.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.63, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1288, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (1444.94, 661.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 442.224 CPU sec, 24.950 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520653, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 375, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (556.08, 469.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1795, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1629.12, 837.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 442.995 CPU sec, 24.873 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520191, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 383, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2227)
[0000][PE] mean and std.dev: (524.82, 437.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1433, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5677)
[0000][PE] mean and std.dev: (1812.08, 1195.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 440.049 CPU sec, 24.727 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520754, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 393, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (824.05, 862.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 2032, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (2159.42, 1326.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 441.297 CPU sec, 24.760 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520330, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 386, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (638.00, 559.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.88, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1613, 3065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7121)
[0000][PE] mean and std.dev: (2082.64, 1418.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 440.252 CPU sec, 24.751 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520640, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 560, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (1116.57, 1250.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1227, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1272.41, 672.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 433.433 CPU sec, 24.334 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520695, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 507, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (624.20, 469.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 1155, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6330)
[0000][PE] mean and std.dev: (1354.00, 979.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 423.906 CPU sec, 23.861 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520357, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 344, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1128)
[0000][PE] mean and std.dev: (337.03, 246.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 417.025 CPU sec, 23.388 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520915, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 318, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (723.50, 883.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1212, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1028.00, 423.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 416.362 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520404, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 477, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (788.03, 735.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1356, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1458.34, 709.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 426.692 CPU sec, 23.987 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520559, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 442, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (836.29, 777.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.06, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1401, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1377.58, 437.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 424.170 CPU sec, 23.844 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520226, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 442, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (833.47, 776.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1029, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1327.47, 879.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 428.046 CPU sec, 24.020 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520883, 5, 39)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 358, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (691.67, 685.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1526, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1331.36, 611.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 433.356 CPU sec, 24.346 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520193, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 440, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (701.16, 598.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1328, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1272.36, 787.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 435.706 CPU sec, 24.476 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520043, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 440, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (641.83, 598.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.43, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1190, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6701)
[0000][PE] mean and std.dev: (1868.80, 1776.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 433.451 CPU sec, 24.334 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520683, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 368, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (619.57, 623.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 2017, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6668)
[0000][PE] mean and std.dev: (1779.00, 902.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 426.573 CPU sec, 23.944 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520462, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 368, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (643.60, 682.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.79, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1394, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (1588.79, 1204.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 437.576 CPU sec, 24.658 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520835, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 487, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (863.31, 935.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1428, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6986)
[0000][PE] mean and std.dev: (2006.10, 1626.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 433.850 CPU sec, 24.346 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520751, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 840, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (889.86, 768.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1419, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (1258.53, 426.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 429.926 CPU sec, 24.405 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520426, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 341, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (712.42, 842.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1401, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1566.20, 906.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 433.123 CPU sec, 25.548 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520569, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 432, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (680.17, 606.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.04, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1092, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (1267.53, 513.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 429.378 CPU sec, 24.203 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520587, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 471, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1840)
[0000][PE] mean and std.dev: (553.04, 367.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1714, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6399)
[0000][PE] mean and std.dev: (1959.48, 1156.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 430.597 CPU sec, 24.352 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520766, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 375, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (608.92, 515.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1119, 5544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14810)
[0000][PE] mean and std.dev: (2418.57, 2171.55)
[0000][PE] low and high boundaries for proper pairs: (1, 19443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 432.103 CPU sec, 24.821 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520301, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 320, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (615.79, 662.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1420, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (1266.88, 443.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 431.109 CPU sec, 24.824 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520761, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 431, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (813.68, 928.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1368, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (1460.57, 797.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 440.095 CPU sec, 25.074 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520206, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 419, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (666.40, 569.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1764, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5789)
[0000][PE] mean and std.dev: (1683.21, 1060.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 436.003 CPU sec, 24.535 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520524, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 495, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (702.66, 603.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.67, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1504, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5631)
[0000][PE] mean and std.dev: (1693.27, 932.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 437.583 CPU sec, 25.192 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520544, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 390, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (694.86, 768.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1665, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1538.75, 691.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 436.334 CPU sec, 24.819 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520783, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 456, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (826.18, 890.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1426, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (1359.39, 700.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 433.617 CPU sec, 24.362 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520992, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 443, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (921.83, 896.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 2397, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5907)
[0000][PE] mean and std.dev: (2005.50, 901.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 435.837 CPU sec, 24.508 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520441, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 429, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (811.86, 790.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.97, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1633, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1729.67, 923.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 429.869 CPU sec, 24.169 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 520872, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 335, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (566.36, 606.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1316, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (1345.76, 576.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 436.594 CPU sec, 25.472 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520777, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 341, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (538.50, 514.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 2600, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7151)
[0000][PE] mean and std.dev: (2236.33, 1469.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 429.792 CPU sec, 24.164 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520916, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 440, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (925.73, 961.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1393, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1421.00, 566.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 424.754 CPU sec, 24.356 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520678, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 369, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (614.69, 531.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1481, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1705.79, 1177.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 426.435 CPU sec, 24.093 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520229, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 414, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (686.69, 588.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1858, 4576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11340)
[0000][PE] mean and std.dev: (2662.05, 1916.55)
[0000][PE] low and high boundaries for proper pairs: (1, 14722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 424.547 CPU sec, 23.835 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520554, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 350, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2308)
[0000][PE] mean and std.dev: (520.97, 502.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.08, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1535, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6495)
[0000][PE] mean and std.dev: (1811.57, 1242.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 412.940 CPU sec, 23.177 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520903, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 402, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (703.20, 632.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.13, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1815, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1693.00, 686.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 410.379 CPU sec, 23.030 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520704, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 771, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (987.76, 932.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1455, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1662.39, 1112.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 415.439 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520364, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 422, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (886.35, 942.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1251, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7842)
[0000][PE] mean and std.dev: (1892.92, 1519.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 415.920 CPU sec, 23.290 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520425, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 412, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (860.70, 837.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.96, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1300, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (1298.27, 833.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 414.906 CPU sec, 24.228 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520851, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 384, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (497.47, 432.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1441, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (1198.92, 487.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 416.251 CPU sec, 24.612 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520736, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 337, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (426.19, 378.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.90, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1577, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (1788.19, 1188.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 415.998 CPU sec, 23.351 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520572, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 342, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1820)
[0000][PE] mean and std.dev: (443.56, 357.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1334, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1185.30, 614.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 421.302 CPU sec, 23.605 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520835, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 358, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (581.61, 594.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1583, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6784)
[0000][PE] mean and std.dev: (1858.30, 1266.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 425.933 CPU sec, 23.921 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520265, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 388, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (709.38, 761.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1749, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1525.71, 669.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 416.784 CPU sec, 23.384 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520050, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 467, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (738.32, 617.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (495, 2172, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6012)
[0000][PE] mean and std.dev: (1904.50, 1350.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7851)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1394, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (166, 2856)
[0000][PE] mean and std.dev: (1443.27, 675.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 418.231 CPU sec, 23.429 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520249, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 367, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (547.58, 492.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1414, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5590)
[0000][PE] mean and std.dev: (1766.86, 925.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 420.844 CPU sec, 23.592 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520541, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 422, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (678.67, 584.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1920, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (2008.14, 1311.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 413.832 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520350, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 606, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7321)
[0000][PE] mean and std.dev: (1304.64, 1412.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1659, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (1524.17, 676.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 418.537 CPU sec, 23.469 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520686, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 643, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (720.05, 562.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1401, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1414.83, 740.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 418.250 CPU sec, 23.609 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520420, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 358, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1942)
[0000][PE] mean and std.dev: (477.23, 422.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.93, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1451, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (1610.35, 965.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 411.084 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520683, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 489, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (678.44, 561.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1602, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1869.31, 1332.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 411.744 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520777, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 381, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (522.15, 485.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.68, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1189, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (1248.95, 451.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 417.382 CPU sec, 23.396 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520350, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 557, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (634.91, 513.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1272, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1371.09, 715.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 420.475 CPU sec, 23.621 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520635, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 381, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (580.44, 510.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1560, 3107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6835)
[0000][PE] mean and std.dev: (2078.95, 1376.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 415.724 CPU sec, 23.337 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520777, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 429, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (576.35, 546.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1490, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (1664.35, 1133.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 415.041 CPU sec, 23.311 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520438, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 354, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1713)
[0000][PE] mean and std.dev: (457.79, 362.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1541, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1629.53, 936.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 413.534 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520497, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 485, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (704.39, 587.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.99, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1386, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1446.25, 762.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 412.136 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520471, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 713, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1096.88, 1060.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1019, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (934.95, 458.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 414.889 CPU sec, 23.291 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520469, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 401, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (895.79, 771.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1705, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1606.43, 784.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 416.300 CPU sec, 23.338 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520484, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 414, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (602.10, 528.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.06, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2510, 3011, 3161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1208, 4463)
[0000][PE] mean and std.dev: (2706.71, 466.18)
[0000][PE] low and high boundaries for proper pairs: (557, 5114)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1394, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1411.65, 800.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 412.996 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520371, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 493, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (897.12, 1014.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.38, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1357, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1820.24, 1355.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 413.334 CPU sec, 23.191 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520590, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 446, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (788.07, 792.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1315, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 2795)
[0000][PE] mean and std.dev: (1311.80, 555.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 418.161 CPU sec, 23.479 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520698, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 366, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (837.02, 992.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1495, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1627.83, 863.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 410.459 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520635, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 434, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (549.68, 393.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1355, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1792.42, 1232.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 420.343 CPU sec, 23.572 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520359, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 512, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (678.65, 680.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1341, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (1425.26, 757.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 421.606 CPU sec, 23.650 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521037, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 344, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (595.42, 581.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 1810, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1844.56, 687.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 411.790 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520407, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 455, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (985.62, 1052.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1613, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1729.65, 897.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 422.061 CPU sec, 23.759 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520414, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 348, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (479.76, 403.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1475, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1564.50, 703.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 413.688 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520502, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 467, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (657.00, 682.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1156, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (1188.10, 622.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 419.614 CPU sec, 23.587 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520779, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 428, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1062.59, 1200.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 930, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1001.83, 452.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 414.256 CPU sec, 23.240 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520305, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 627, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (618.09, 482.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1741, 2024, 4310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9448)
[0000][PE] mean and std.dev: (2859.29, 1987.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 421.762 CPU sec, 23.670 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520715, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 367, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (797.61, 806.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1230, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1291.24, 638.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 413.456 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520497, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 399, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (906.47, 911.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1395, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1477.82, 651.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 415.351 CPU sec, 23.254 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520673, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 477, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (795.06, 753.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.01, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 2176, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7126)
[0000][PE] mean and std.dev: (2337.32, 1330.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 416.535 CPU sec, 23.339 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520447, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 488, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4358)
[0000][PE] mean and std.dev: (828.14, 813.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.85, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1518, 2579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5839)
[0000][PE] mean and std.dev: (1729.88, 1051.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 420.537 CPU sec, 23.617 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520859, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 537, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1087.52, 1181.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1335, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (1565.00, 646.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 417.047 CPU sec, 23.338 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 521006, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 523, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (882.83, 1003.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.96, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1422, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1387.37, 587.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 415.785 CPU sec, 23.432 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520472, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 463, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (655.31, 552.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1123, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1364.11, 766.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 413.813 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520215, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 414, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2019)
[0000][PE] mean and std.dev: (512.59, 468.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1916, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1885.37, 937.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 416.001 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520724, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 400, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (640.90, 688.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1237, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (1251.05, 650.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 417.394 CPU sec, 23.712 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520356, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 412, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (733.59, 804.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1555, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1525.35, 774.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 418.966 CPU sec, 23.718 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519939, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 463, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (932.21, 869.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.99, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1795, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1717.71, 812.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 418.218 CPU sec, 23.589 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520610, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 328, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (521.68, 497.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1362, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1484.38, 813.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 415.662 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520695, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 346, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (437.37, 376.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1296, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1232.68, 499.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 417.406 CPU sec, 23.479 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520492, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 552, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (772.36, 708.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.54, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1502, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1739.21, 1004.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 408.767 CPU sec, 22.886 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520725, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 316, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1272)
[0000][PE] mean and std.dev: (379.42, 303.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1728, 2834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1702.13, 801.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 412.788 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520142, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 383, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (524.94, 408.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1830, 4308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10366)
[0000][PE] mean and std.dev: (3062.64, 2623.62)
[0000][PE] low and high boundaries for proper pairs: (1, 13557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 414.862 CPU sec, 23.328 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520715, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 269, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1159)
[0000][PE] mean and std.dev: (338.38, 277.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1363, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5882)
[0000][PE] mean and std.dev: (1559.59, 950.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 419.456 CPU sec, 23.511 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520533, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 331, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (885.46, 1251.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.72, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1777, 3059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6987)
[0000][PE] mean and std.dev: (2156.69, 1465.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 422.692 CPU sec, 23.743 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520906, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 333, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (547.00, 486.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.60, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1995, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1625.86, 959.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 411.876 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520986, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 298, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (697.48, 738.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.67, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1483, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (1665.82, 1098.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 415.463 CPU sec, 23.266 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520742, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 477, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (720.14, 671.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1322, 1732, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1979.30, 911.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 419.502 CPU sec, 23.515 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520829, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 386, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (566.10, 445.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.65, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1302, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1288.11, 842.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 422.281 CPU sec, 23.673 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520370, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 693, 2942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8246)
[0000][PE] mean and std.dev: (1725.94, 2079.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 2115, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6070)
[0000][PE] mean and std.dev: (1972.61, 939.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 424.746 CPU sec, 23.808 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520363, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 406, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (780.78, 809.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1562, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5945)
[0000][PE] mean and std.dev: (2005.23, 1460.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 420.217 CPU sec, 23.555 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520965, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 425, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2616)
[0000][PE] mean and std.dev: (666.36, 543.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1495, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1369.89, 539.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 412.997 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520469, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 419, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (957.89, 998.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1701, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6077)
[0000][PE] mean and std.dev: (1849.59, 1002.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 416.154 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520506, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 418, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (774.83, 803.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.87, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1216, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (40, 2460)
[0000][PE] mean and std.dev: (1119.33, 277.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 415.642 CPU sec, 23.329 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520512, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 474, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (764.56, 611.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.81, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1899, 3579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8981)
[0000][PE] mean and std.dev: (2517.24, 1972.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 414.867 CPU sec, 23.242 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 521146, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 458, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (922.02, 979.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.03, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1371, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1456.39, 669.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 415.678 CPU sec, 23.706 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520835, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 399, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2041)
[0000][PE] mean and std.dev: (555.93, 463.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.57, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1321, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1714.27, 978.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 414.418 CPU sec, 23.350 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520325, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 442, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (625.22, 557.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1432, 1763, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (1877.79, 847.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 417.305 CPU sec, 23.494 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520695, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 367, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1378)
[0000][PE] mean and std.dev: (351.90, 271.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.95, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (680, 858, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7775)
[0000][PE] mean and std.dev: (2078.80, 2418.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11754)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1396, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (1307.00, 486.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 412.483 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520247, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 384, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (603.93, 565.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (181, 353, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (395.12, 435.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1267, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (1289.15, 718.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 416.722 CPU sec, 23.372 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520350, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 383, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1851)
[0000][PE] mean and std.dev: (447.97, 382.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1437, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1789.00, 1006.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 416.330 CPU sec, 23.360 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520549, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 380, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (530.02, 528.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1442, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1589.33, 703.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 415.930 CPU sec, 23.420 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520619, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 529, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (719.45, 576.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1544, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1393.96, 528.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 417.542 CPU sec, 23.411 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520334, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 376, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (400.32, 268.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1200, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (1317.09, 527.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 417.761 CPU sec, 23.440 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520180, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 363, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (736.34, 756.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1491, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1647.05, 709.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 414.261 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520837, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 429, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (575.12, 570.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1351, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1669.44, 1386.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 418.379 CPU sec, 23.525 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520245, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 360, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (475.84, 434.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1112, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1152.65, 726.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 418.212 CPU sec, 23.420 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520621, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 496, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (697.45, 572.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.72, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1210, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1449.62, 861.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 424.282 CPU sec, 23.779 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 521030, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 501, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2903)
[0000][PE] mean and std.dev: (615.89, 464.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1552, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6110)
[0000][PE] mean and std.dev: (2168.88, 1263.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 417.960 CPU sec, 23.412 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520877, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 415, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6663)
[0000][PE] mean and std.dev: (1075.25, 1379.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1343, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (1244.41, 519.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 418.262 CPU sec, 23.528 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520387, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 363, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (620.92, 568.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.92, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1601, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1688.70, 995.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 412.939 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520510, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 444, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (668.02, 639.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1270, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (1362.93, 570.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 416.306 CPU sec, 23.341 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520344, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 404, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (641.02, 617.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.78, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1406, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (1783.63, 1123.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 418.464 CPU sec, 23.501 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520158, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 622, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (848.81, 760.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1373, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (1248.30, 375.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 416.969 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520455, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 597, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (880.42, 939.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1539, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (82, 2752)
[0000][PE] mean and std.dev: (1324.72, 392.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 417.873 CPU sec, 23.521 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520377, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 478, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (808.02, 684.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1216, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (1163.37, 705.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 416.177 CPU sec, 23.319 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520554, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 417, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (643.00, 583.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1438, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1655.15, 926.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 419.496 CPU sec, 23.542 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520700, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 478, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (687.44, 553.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.05, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1427, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (1804.28, 1141.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 415.862 CPU sec, 23.395 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520459, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 372, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (764.52, 761.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1676, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6082)
[0000][PE] mean and std.dev: (2005.61, 1381.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 413.744 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520590, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 335, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (447.71, 418.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.87, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1398, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (1271.89, 626.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 414.703 CPU sec, 23.260 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520805, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 382, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (614.59, 605.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1411, 3299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7647)
[0000][PE] mean and std.dev: (1960.73, 1677.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 420.277 CPU sec, 23.694 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520903, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 574, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (818.41, 718.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1011, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (1044.19, 717.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 414.092 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520081, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 480, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (593.65, 409.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.43, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1456, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5891)
[0000][PE] mean and std.dev: (1970.05, 1425.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 415.207 CPU sec, 23.267 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520774, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 346, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2323)
[0000][PE] mean and std.dev: (514.63, 493.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1403, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6589)
[0000][PE] mean and std.dev: (1951.95, 1235.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 414.550 CPU sec, 23.260 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520586, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 522, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1071.56, 1189.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1216, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (1244.71, 545.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 414.391 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520669, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 411, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2249)
[0000][PE] mean and std.dev: (603.03, 485.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1384, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (1286.78, 484.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 416.990 CPU sec, 23.331 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520648, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 393, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (734.57, 643.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1440, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4836)
[0000][PE] mean and std.dev: (1645.57, 989.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 417.516 CPU sec, 23.448 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520136, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 344, 492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (295.36, 158.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1530, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1570.00, 630.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 418.980 CPU sec, 23.489 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520533, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 411, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (590.44, 544.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 977, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (1037.15, 700.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 418.674 CPU sec, 23.467 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519919, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 477, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1239.56, 1441.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1453, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1345.04, 659.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 420.774 CPU sec, 23.549 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520717, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 365, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (636.31, 577.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1526, 3388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7718)
[0000][PE] mean and std.dev: (2319.52, 1621.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 419.187 CPU sec, 23.543 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520405, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 372, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (607.74, 508.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.98, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1436, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1550.42, 699.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 418.752 CPU sec, 23.408 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520396, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 349, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (479.51, 396.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1505, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5318)
[0000][PE] mean and std.dev: (1647.04, 780.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 419.742 CPU sec, 23.519 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520197, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 604, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (773.41, 597.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1351, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1565.48, 789.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 420.822 CPU sec, 23.723 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520468, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 455, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (774.33, 756.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1378, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (1781.05, 1289.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 422.216 CPU sec, 23.652 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520706, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 366, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (619.44, 578.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1184, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (1105.12, 549.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 426.166 CPU sec, 23.952 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520925, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 334, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (493.76, 462.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.56, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 1477, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1367.65, 835.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 421.317 CPU sec, 23.724 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520829, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 431, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (581.24, 532.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1738, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6666)
[0000][PE] mean and std.dev: (1915.60, 1186.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 412.810 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520501, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 357, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (442.85, 349.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1373, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6408)
[0000][PE] mean and std.dev: (1756.95, 1036.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 416.674 CPU sec, 23.339 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520064, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1074, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1307.46, 1214.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1252, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (1262.67, 511.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 414.168 CPU sec, 23.259 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520469, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 438, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1805)
[0000][PE] mean and std.dev: (507.13, 369.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1329, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6099)
[0000][PE] mean and std.dev: (1768.60, 1183.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 416.602 CPU sec, 23.358 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520525, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 369, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (596.34, 674.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1525, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (1535.67, 729.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 415.229 CPU sec, 23.319 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520958, 11, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 397, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (677.75, 691.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1750, 3052, 5006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11518)
[0000][PE] mean and std.dev: (3278.36, 2392.24)
[0000][PE] low and high boundaries for proper pairs: (1, 14774)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1486, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (1404.78, 629.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 414.047 CPU sec, 23.250 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520932, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 400, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (630.51, 582.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1145, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1510.37, 1011.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 417.248 CPU sec, 23.427 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520216, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 403, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (666.41, 601.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.62, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1465, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1549.76, 1028.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 416.800 CPU sec, 23.344 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520756, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 371, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (611.00, 507.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.73, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1309, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (1359.18, 959.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 415.387 CPU sec, 23.249 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520571, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 416, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (680.47, 558.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1921, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (2024.41, 1419.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 417.333 CPU sec, 23.400 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520430, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 430, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (559.88, 533.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1659, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5676)
[0000][PE] mean and std.dev: (1620.94, 924.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 414.194 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520452, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 484, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (897.88, 911.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1310, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (1552.24, 795.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 417.535 CPU sec, 23.382 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 521025, 11, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 413, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (750.12, 697.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1669, 3199, 5264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12454)
[0000][PE] mean and std.dev: (3418.73, 2540.24)
[0000][PE] low and high boundaries for proper pairs: (1, 16049)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1710, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6033)
[0000][PE] mean and std.dev: (1954.60, 1099.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 415.359 CPU sec, 23.774 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520332, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 349, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (522.81, 488.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1389, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (1115.62, 397.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 412.839 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520550, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 316, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (650.58, 727.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1352, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1490.78, 815.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 417.713 CPU sec, 23.523 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520531, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 434, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (707.68, 719.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1525, 1674, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4858)
[0000][PE] mean and std.dev: (1778.50, 811.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 412.184 CPU sec, 23.056 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520445, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 386, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (704.89, 687.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1321, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1283.53, 654.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 414.128 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520643, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 392, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (629.24, 615.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.17, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1163, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (1244.29, 499.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 419.604 CPU sec, 23.549 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520340, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 346, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2464)
[0000][PE] mean and std.dev: (546.82, 504.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1395, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (1393.33, 340.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 421.565 CPU sec, 23.668 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520573, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 878, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (887.50, 668.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1175, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (1008.77, 373.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 418.794 CPU sec, 23.513 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520870, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 414, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (608.79, 481.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1580, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1538.17, 859.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 420.052 CPU sec, 23.569 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520738, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 605, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (986.67, 917.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.69, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1096, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1217.68, 660.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 415.656 CPU sec, 23.310 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520384, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 397, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (547.26, 460.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.85, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1080, 2237, 3048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6984)
[0000][PE] mean and std.dev: (1637.50, 972.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8952)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1503, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1749.89, 1176.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 423.123 CPU sec, 23.796 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520602, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 1051, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6610)
[0000][PE] mean and std.dev: (1303.91, 1289.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1400, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1862.93, 1250.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 415.900 CPU sec, 23.313 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520952, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 332, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (600.57, 592.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1286, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (1210.31, 457.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 416.904 CPU sec, 23.378 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520451, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 428, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (596.59, 509.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.66, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1658, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6654)
[0000][PE] mean and std.dev: (1843.59, 1221.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 415.276 CPU sec, 23.248 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520630, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 390, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1812)
[0000][PE] mean and std.dev: (470.15, 333.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1080, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1138.75, 857.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 415.463 CPU sec, 23.283 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520664, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 488, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (911.21, 932.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1136, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1251.73, 731.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 415.893 CPU sec, 23.318 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520970, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 363, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1801)
[0000][PE] mean and std.dev: (457.50, 406.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2051, 3590, 5533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12497)
[0000][PE] mean and std.dev: (3933.18, 2799.48)
[0000][PE] low and high boundaries for proper pairs: (1, 15979)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1203, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (1432.93, 835.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 417.153 CPU sec, 23.395 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520391, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 394, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (595.43, 508.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1309, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1525.70, 988.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 414.849 CPU sec, 23.253 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520529, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 432, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (828.75, 825.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1356, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (1481.30, 710.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 415.940 CPU sec, 23.310 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520571, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 400, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (735.78, 708.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1324, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1446.44, 840.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 415.090 CPU sec, 23.273 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520157, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 432, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (700.62, 664.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.54, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1446, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1400.50, 719.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 414.692 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520547, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 448, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (578.17, 500.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1748, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6272)
[0000][PE] mean and std.dev: (1878.13, 1248.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 416.721 CPU sec, 23.449 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520573, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 478, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1036.91, 1046.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1545, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1684.77, 972.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 416.366 CPU sec, 23.361 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520424, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 889, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (960.47, 859.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1758, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1909.40, 967.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 414.571 CPU sec, 23.240 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520494, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 358, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2458)
[0000][PE] mean and std.dev: (589.57, 542.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1548, 1732, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5640)
[0000][PE] mean and std.dev: (1884.27, 817.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 417.594 CPU sec, 23.445 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520641, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 374, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (807.41, 935.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1607, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6578)
[0000][PE] mean and std.dev: (2116.96, 1561.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 415.681 CPU sec, 23.328 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520628, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 399, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (728.83, 742.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1225, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1339.68, 593.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 418.091 CPU sec, 23.481 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 521010, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 347, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (633.60, 584.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1325, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (77, 2462)
[0000][PE] mean and std.dev: (1232.00, 277.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 418.123 CPU sec, 23.490 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519928, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 321, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (509.66, 444.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1367, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1459.61, 806.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 419.533 CPU sec, 23.553 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520610, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 389, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (523.31, 406.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1427, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1380.89, 552.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 416.291 CPU sec, 23.283 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520251, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 516, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (920.40, 910.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1412, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4979)
[0000][PE] mean and std.dev: (1393.38, 688.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 422.189 CPU sec, 23.730 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520755, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 464, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (682.67, 600.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1194, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1418.31, 915.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 415.851 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520361, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 388, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1690)
[0000][PE] mean and std.dev: (437.00, 353.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1103, 4846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13172)
[0000][PE] mean and std.dev: (2458.67, 2639.06)
[0000][PE] low and high boundaries for proper pairs: (1, 17335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 417.667 CPU sec, 23.449 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520439, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 496, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (770.30, 817.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1602, 3619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8387)
[0000][PE] mean and std.dev: (2319.41, 1845.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 415.940 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520805, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 449, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (570.94, 421.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1466, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1429.58, 762.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 416.759 CPU sec, 23.377 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520630, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 951, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (921.72, 685.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.97, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1467, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (1293.21, 482.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 414.653 CPU sec, 23.201 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520846, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 366, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2199)
[0000][PE] mean and std.dev: (582.98, 513.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1545, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6175)
[0000][PE] mean and std.dev: (1819.05, 1223.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 419.598 CPU sec, 23.652 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520394, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 397, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (601.02, 572.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.69, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1047, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (1394.69, 867.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 421.760 CPU sec, 23.768 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520400, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 869, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (1057.03, 870.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1244, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (21, 2251)
[0000][PE] mean and std.dev: (1191.88, 335.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 413.819 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 521280, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 432, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (620.32, 561.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1469, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (1470.71, 587.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 415.268 CPU sec, 23.311 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520988, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 461, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (553.25, 423.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1450, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1617.36, 944.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 414.611 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520636, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 337, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (368.00, 252.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.46, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1768, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1706.17, 909.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 416.797 CPU sec, 23.406 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520383, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 336, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2033)
[0000][PE] mean and std.dev: (543.07, 493.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.67, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1744, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5999)
[0000][PE] mean and std.dev: (1928.82, 1026.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 418.970 CPU sec, 23.741 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 519915, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 412, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (715.77, 651.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.73, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1737, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1586.56, 598.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 416.177 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520844, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 503, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (895.11, 845.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.69, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1795, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6085)
[0000][PE] mean and std.dev: (1831.69, 1139.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 414.190 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520385, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 441, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (756.00, 692.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1373, 3393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8583)
[0000][PE] mean and std.dev: (2191.47, 2149.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 415.367 CPU sec, 23.292 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520931, 9, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 694, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (836.05, 776.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1348, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1303.19, 572.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 415.131 CPU sec, 23.332 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520391, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 351, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (447.91, 309.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.97, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 2131, 3524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8326)
[0000][PE] mean and std.dev: (2571.70, 1918.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 417.747 CPU sec, 23.404 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520672, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 400, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (654.44, 596.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1440, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (1296.85, 588.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 416.161 CPU sec, 23.332 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520641, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 382, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (539.25, 508.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1442, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1876.52, 1045.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 415.717 CPU sec, 23.275 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520170, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 711, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (825.54, 734.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1246, 5074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13054)
[0000][PE] mean and std.dev: (2761.00, 2255.54)
[0000][PE] low and high boundaries for proper pairs: (1, 17044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 425.421 CPU sec, 23.962 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520188, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 421, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2245)
[0000][PE] mean and std.dev: (579.76, 544.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.11, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1255, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (1330.00, 666.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 418.250 CPU sec, 23.434 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520993, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 301, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2153)
[0000][PE] mean and std.dev: (478.04, 464.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1517, 3385, 9780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 26306)
[0000][PE] mean and std.dev: (4124.91, 3732.96)
[0000][PE] low and high boundaries for proper pairs: (1, 34569)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 956, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (1339.43, 935.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 416.659 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520695, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 379, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2765)
[0000][PE] mean and std.dev: (608.37, 586.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1483, 4007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9513)
[0000][PE] mean and std.dev: (2366.76, 1932.83)
[0000][PE] low and high boundaries for proper pairs: (1, 12266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 420.095 CPU sec, 23.567 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520981, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 843, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1074.77, 1149.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.84, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1302, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1408.05, 868.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 417.029 CPU sec, 23.338 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520743, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 552, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (911.52, 784.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1945, 3719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8993)
[0000][PE] mean and std.dev: (2549.40, 2041.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 419.667 CPU sec, 23.534 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520632, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 262, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (459.11, 384.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.11, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1354, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (1303.55, 682.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 415.260 CPU sec, 23.442 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520099, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 511, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (679.82, 675.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.60, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (345, 1538, 5051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14463)
[0000][PE] mean and std.dev: (2754.40, 2880.34)
[0000][PE] low and high boundaries for proper pairs: (1, 19169)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1543, 4035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10359)
[0000][PE] mean and std.dev: (2062.35, 1599.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 417.845 CPU sec, 23.407 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520167, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 410, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2128)
[0000][PE] mean and std.dev: (508.94, 509.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.69, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1325, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (1367.73, 818.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 417.870 CPU sec, 23.409 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520239, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 428, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (689.50, 703.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1541, 3546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8176)
[0000][PE] mean and std.dev: (2245.42, 1857.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 417.928 CPU sec, 23.415 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520611, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 418, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (661.57, 573.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.01, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1141, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (1306.16, 778.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 414.931 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520270, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 439, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (682.98, 635.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1518, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (1538.44, 973.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 413.286 CPU sec, 23.444 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520756, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 382, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (715.64, 599.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1575, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (164, 2819)
[0000][PE] mean and std.dev: (1421.00, 584.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 411.113 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520243, 9, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 426, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1025.86, 1093.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1184, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1268.93, 924.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 415.442 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520484, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 603, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (647.31, 444.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.71, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1789, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (1654.81, 759.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 416.333 CPU sec, 23.360 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520153, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 410, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (744.93, 732.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.95, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1398, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1495.08, 738.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 418.451 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520565, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 414, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (471.24, 370.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1661, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (1399.83, 435.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 412.177 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520701, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 348, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (556.49, 559.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1526, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (1487.64, 590.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 411.514 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 520438, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 385, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (610.38, 641.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1519, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (1399.18, 389.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 415.793 CPU sec, 23.289 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520532, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 318, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1298)
[0000][PE] mean and std.dev: (394.55, 297.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1221, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (1174.07, 518.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 415.247 CPU sec, 23.251 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520560, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 377, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (693.03, 634.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1700, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5700)
[0000][PE] mean and std.dev: (1846.94, 879.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 416.846 CPU sec, 23.385 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520801, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 359, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (605.94, 584.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.73, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1505, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1281.07, 511.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 415.477 CPU sec, 23.281 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520733, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 519, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (789.74, 845.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.98, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1408, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (1589.82, 1039.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 418.587 CPU sec, 23.470 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520443, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 465, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2174)
[0000][PE] mean and std.dev: (470.28, 269.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1508, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1452.20, 634.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 415.483 CPU sec, 23.329 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520550, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 797, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (1005.14, 937.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.03, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1584, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6484)
[0000][PE] mean and std.dev: (1688.63, 904.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 416.293 CPU sec, 23.469 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520477, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 369, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (639.97, 619.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1133, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5835)
[0000][PE] mean and std.dev: (1538.00, 1283.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 420.917 CPU sec, 23.596 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520594, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 412, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2395)
[0000][PE] mean and std.dev: (479.47, 379.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1315, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1387.56, 724.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 418.325 CPU sec, 23.405 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520217, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 419, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (702.58, 619.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.41, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1337, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1605.33, 1026.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 420.351 CPU sec, 23.584 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520574, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 379, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (599.78, 618.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1185, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1268.28, 614.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 415.860 CPU sec, 23.311 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520452, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 423, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (742.62, 693.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1067, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2799)
[0000][PE] mean and std.dev: (1062.44, 454.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 418.977 CPU sec, 23.541 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 521082, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 361, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (551.27, 496.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1423, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1446.10, 863.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 414.321 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521072, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 403, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (736.17, 698.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1542, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (1249.80, 422.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 413.070 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520479, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 405, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (544.69, 445.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 1769, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5940)
[0000][PE] mean and std.dev: (2149.54, 1223.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 420.114 CPU sec, 23.564 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520392, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 447, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (883.23, 1059.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.37, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1368, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (1536.67, 744.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 419.854 CPU sec, 23.576 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520539, 14, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 583, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (709.33, 602.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (925, 2206, 5200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13750)
[0000][PE] mean and std.dev: (3053.64, 2702.56)
[0000][PE] low and high boundaries for proper pairs: (1, 18025)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 996, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1243.10, 872.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 414.975 CPU sec, 23.211 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520634, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 401, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (708.26, 718.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.78, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1966, 3142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7680)
[0000][PE] mean and std.dev: (2234.52, 1702.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 414.322 CPU sec, 23.289 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520407, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 425, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (835.68, 892.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1436, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (1372.33, 708.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 412.293 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520604, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 385, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (605.19, 586.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.65, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1210, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1321.60, 770.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 411.325 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520519, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 420, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (647.50, 650.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1442, 1634, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (282, 3182)
[0000][PE] mean and std.dev: (1760.85, 559.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 413.708 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 520804, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 372, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (545.15, 532.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.15, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1624, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1654.67, 923.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 413.512 CPU sec, 23.171 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520524, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 544, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (537.40, 506.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1366, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6800)
[0000][PE] mean and std.dev: (1875.00, 1290.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 413.441 CPU sec, 23.183 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520041, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 351, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (502.29, 486.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 1590, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1500.21, 1175.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 417.520 CPU sec, 23.426 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520548, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 566, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (755.90, 609.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1321, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1529.33, 744.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 411.513 CPU sec, 23.042 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520270, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 405, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1017.43, 1094.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1435, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1559.84, 862.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 411.089 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520161, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 420, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (807.31, 811.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1420, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (1116.83, 470.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 416.313 CPU sec, 23.345 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520275, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 375, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (636.00, 641.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1615, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1528.71, 914.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 418.149 CPU sec, 23.548 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520544, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 350, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1930)
[0000][PE] mean and std.dev: (430.64, 369.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.74, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1334, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1361.73, 714.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 413.468 CPU sec, 23.158 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520460, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 503, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (719.67, 671.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1562, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1722.26, 963.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 412.826 CPU sec, 23.146 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520656, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 433, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (764.74, 679.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1446, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1622.33, 635.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 417.759 CPU sec, 23.362 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520411, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 424, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2969)
[0000][PE] mean and std.dev: (666.67, 522.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.78, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1356, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4457)
[0000][PE] mean and std.dev: (1491.00, 1054.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 413.200 CPU sec, 23.186 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520740, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 428, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (577.42, 510.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.98, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1447, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1565.24, 823.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 417.017 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520320, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 509, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (732.34, 670.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.04, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1332, 1503, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1890.18, 1000.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 412.719 CPU sec, 23.142 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 521096, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 398, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (574.41, 431.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 2071, 4759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12157)
[0000][PE] mean and std.dev: (2720.81, 2063.35)
[0000][PE] low and high boundaries for proper pairs: (1, 15856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 414.395 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520510, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 358, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (685.28, 637.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1357, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1821.82, 1218.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 413.550 CPU sec, 23.176 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520368, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 563, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (796.82, 641.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.70, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1192, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1718.10, 1114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 420.086 CPU sec, 23.553 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 520223, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 326, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1874)
[0000][PE] mean and std.dev: (447.89, 399.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1377, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1596.56, 1162.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 417.128 CPU sec, 23.348 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520428, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 390, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2122)
[0000][PE] mean and std.dev: (568.46, 486.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1593, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1753.88, 874.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 420.816 CPU sec, 23.600 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 519836, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 351, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (690.47, 620.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1368, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1356.00, 674.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 427.508 CPU sec, 24.133 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520466, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 344, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (548.87, 503.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1477, 3288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7946)
[0000][PE] mean and std.dev: (2066.56, 1540.31)
[0000][PE] low and high boundaries for proper pairs: (1, 10275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 413.051 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520492, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 379, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (725.52, 671.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.93, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1680, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (1871.44, 890.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 414.959 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520807, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 399, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (868.92, 974.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.43, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1265, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1317.25, 856.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 414.042 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520734, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 346, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (498.23, 400.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.02, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1789, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (1733.37, 761.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 416.538 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520503, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 357, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (575.33, 507.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1608, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1633.52, 842.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 413.585 CPU sec, 23.151 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520650, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 402, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (655.80, 596.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.66, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1373, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1497.65, 1038.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 414.934 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520915, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 446, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (656.50, 594.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1295, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1529.25, 763.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 417.001 CPU sec, 23.421 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520081, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 392, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1102.49, 1237.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1349, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1337.23, 514.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 414.204 CPU sec, 23.213 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520124, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 375, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (623.10, 584.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1700, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1712.00, 927.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 415.464 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 521029, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 416, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (543.74, 435.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1708, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1998.57, 1144.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 413.767 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520039, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 475, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (634.53, 449.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.76, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (791, 1950, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7238)
[0000][PE] mean and std.dev: (1864.00, 1375.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1356, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (1470.24, 881.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 414.172 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520691, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 571, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1028.62, 1076.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.01, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1006, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (1076.60, 541.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 411.180 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520724, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 391, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (698.50, 827.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1423, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1300.33, 558.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 409.829 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520350, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 373, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (460.00, 407.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1420, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (1423.00, 607.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 415.966 CPU sec, 23.350 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520506, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 402, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1386)
[0000][PE] mean and std.dev: (413.75, 300.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.57, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1560, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (1435.06, 544.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 412.748 CPU sec, 23.115 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520499, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 521, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (726.80, 601.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1440, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7376)
[0000][PE] mean and std.dev: (1928.06, 1454.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 416.294 CPU sec, 23.343 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520370, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 409, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (698.33, 738.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1110, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1146.21, 651.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 414.965 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520465, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 340, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1777)
[0000][PE] mean and std.dev: (453.63, 360.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1395, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6833)
[0000][PE] mean and std.dev: (2139.62, 1650.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 413.405 CPU sec, 23.311 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520204, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 515, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (992.47, 1093.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1339, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1612.39, 995.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 415.959 CPU sec, 23.327 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520219, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 448, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (469.58, 360.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 890, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (985.62, 558.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 418.288 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520354, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 359, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2523)
[0000][PE] mean and std.dev: (541.11, 508.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.95, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1845, 3068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6656)
[0000][PE] mean and std.dev: (2361.57, 1721.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 421.211 CPU sec, 23.578 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520454, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 364, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2673)
[0000][PE] mean and std.dev: (545.40, 560.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.08, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1646, 3336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7706)
[0000][PE] mean and std.dev: (2081.33, 1522.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 419.105 CPU sec, 23.581 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520823, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 558, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (733.67, 578.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1684, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1591.14, 704.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 414.958 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520364, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 436, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (567.00, 474.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1175, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1547.00, 884.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 422.207 CPU sec, 23.733 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520510, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 839, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (815.57, 659.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1075, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (1134.11, 414.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 419.355 CPU sec, 23.539 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520709, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 651, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (991.08, 926.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.59, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1428, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (1517.13, 728.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 415.323 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520836, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 379, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (563.69, 581.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1812, 3220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7698)
[0000][PE] mean and std.dev: (2558.04, 2195.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 416.673 CPU sec, 23.424 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520892, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 350, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (482.18, 473.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1587, 1960, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1870.09, 898.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 413.682 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520217, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 605, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (711.50, 637.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1571, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1666.05, 1026.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 418.649 CPU sec, 23.528 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520109, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 370, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (577.48, 443.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.97, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1685, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1564.33, 615.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 414.380 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520293, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 375, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (665.88, 702.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1304, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (1120.88, 497.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 418.976 CPU sec, 23.492 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520248, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 395, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (757.24, 739.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1534, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1573.64, 853.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 416.988 CPU sec, 23.369 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520228, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 465, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (599.26, 484.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1446, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (1816.00, 1303.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 413.996 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520750, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 435, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2123)
[0000][PE] mean and std.dev: (534.59, 442.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.54, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1659, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4777)
[0000][PE] mean and std.dev: (1612.94, 583.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 414.110 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520363, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 793, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (959.00, 823.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.28, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1486, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1609.71, 793.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 418.563 CPU sec, 23.545 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520516, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 449, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (882.67, 936.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.00, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1850, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (2103.11, 1232.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 417.336 CPU sec, 23.465 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520411, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 679, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (781.37, 709.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1536, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1441.80, 622.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 410.702 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520397, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 394, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (540.62, 442.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1459, 2217, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6262)
[0000][PE] mean and std.dev: (2306.54, 1425.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 416.110 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520548, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 382, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (716.32, 693.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1510, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (1473.50, 842.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 414.935 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520999, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 458, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (856.81, 930.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1267, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (1431.67, 775.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 411.069 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520372, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 485, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (614.11, 419.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.55, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1870, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1760.06, 844.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 417.522 CPU sec, 23.401 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520382, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 359, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (796.12, 823.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1474, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1207.94, 535.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 423.126 CPU sec, 23.777 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520862, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 492, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (611.36, 516.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.60, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1282, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (1394.32, 498.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 418.774 CPU sec, 23.483 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520396, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 393, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2495)
[0000][PE] mean and std.dev: (601.19, 546.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1101, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1271.79, 958.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 419.124 CPU sec, 23.466 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520349, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 377, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (569.79, 624.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1751, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (1584.54, 639.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 417.188 CPU sec, 23.373 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 521049, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 338, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (508.03, 523.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1533, 1864, 4339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9951)
[0000][PE] mean and std.dev: (2873.00, 2249.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 416.690 CPU sec, 23.367 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520525, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 344, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (515.53, 494.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1500, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1697.54, 849.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 414.583 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520573, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 523, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (674.89, 570.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1293, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1348.21, 601.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 425.956 CPU sec, 24.025 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520626, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 390, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (502.61, 384.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.54, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1269, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (1120.53, 556.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 415.243 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519988, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 412, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (632.54, 623.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.61, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1407, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1529.69, 674.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 419.780 CPU sec, 23.533 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520897, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 353, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (652.34, 628.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.70, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1004, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1235.24, 962.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 420.360 CPU sec, 23.551 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520582, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 472, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (700.78, 621.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.99, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1600, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (1610.11, 698.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 417.478 CPU sec, 23.413 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520468, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 362, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1859)
[0000][PE] mean and std.dev: (461.67, 391.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1445, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (67, 2922)
[0000][PE] mean and std.dev: (1382.33, 250.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 418.606 CPU sec, 23.608 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520424, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 347, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (568.46, 485.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.41, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1730, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1617.42, 737.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 425.028 CPU sec, 23.839 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520761, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 361, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1559)
[0000][PE] mean and std.dev: (397.03, 282.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 2727, 4031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9485)
[0000][PE] mean and std.dev: (2851.47, 1920.46)
[0000][PE] low and high boundaries for proper pairs: (1, 12212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 420.000 CPU sec, 23.674 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520422, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 411, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (958.46, 1165.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.37, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1170, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1550.94, 982.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 418.393 CPU sec, 23.462 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520111, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 422, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (681.23, 582.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 2025, 3330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8356)
[0000][PE] mean and std.dev: (2304.71, 1950.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 421.783 CPU sec, 23.731 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520682, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 389, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (663.31, 709.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.40, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1703, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1505.24, 839.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 419.451 CPU sec, 23.543 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520475, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 908, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (811.89, 571.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1533, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5745)
[0000][PE] mean and std.dev: (1800.67, 932.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 420.428 CPU sec, 23.733 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 521304, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 402, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (539.32, 548.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.76, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1514, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1606.83, 947.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 416.718 CPU sec, 23.370 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520136, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 386, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2294)
[0000][PE] mean and std.dev: (517.58, 492.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 2580, 3109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7953)
[0000][PE] mean and std.dev: (2078.20, 1374.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 418.874 CPU sec, 23.481 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520599, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 368, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1013)
[0000][PE] mean and std.dev: (360.90, 179.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1289, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1654.30, 1170.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 418.051 CPU sec, 23.441 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520496, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 371, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2402)
[0000][PE] mean and std.dev: (537.96, 570.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.85, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1727, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1713.81, 758.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 417.502 CPU sec, 23.464 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520437, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 384, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5796)
[0000][PE] mean and std.dev: (977.03, 1160.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1573, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5617)
[0000][PE] mean and std.dev: (1818.16, 1134.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 419.611 CPU sec, 23.555 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520046, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 377, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (720.09, 740.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.99, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1514, 2881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6367)
[0000][PE] mean and std.dev: (1957.69, 1153.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 424.553 CPU sec, 23.884 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520833, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 486, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3106)
[0000][PE] mean and std.dev: (741.34, 757.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.90, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1123, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (1034.33, 456.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 415.032 CPU sec, 23.251 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520320, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 304, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1773)
[0000][PE] mean and std.dev: (449.89, 412.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.92, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1328, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (1542.45, 841.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 419.952 CPU sec, 23.565 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520382, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 364, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (576.66, 488.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.84, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1491, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1401.68, 623.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 421.279 CPU sec, 23.614 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520418, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 694, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (989.64, 959.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.41, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1210, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1497.68, 896.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 421.934 CPU sec, 23.661 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520353, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 417, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4983)
[0000][PE] mean and std.dev: (793.40, 790.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1313, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (1269.44, 351.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 417.366 CPU sec, 23.397 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 521020, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 446, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (596.79, 491.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1406, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1489.04, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 419.639 CPU sec, 23.605 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520475, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 561, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1006.33, 1016.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.45, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1391, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7365)
[0000][PE] mean and std.dev: (1786.58, 1762.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 423.609 CPU sec, 23.754 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520571, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 342, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (546.00, 507.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1560, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1641.38, 994.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 417.977 CPU sec, 23.446 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520333, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 413, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (644.47, 597.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.53, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1497, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1810.50, 1163.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 417.570 CPU sec, 23.416 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520603, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 647, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (734.24, 696.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1623, 3163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7389)
[0000][PE] mean and std.dev: (1913.00, 1360.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 421.387 CPU sec, 23.662 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 521006, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 361, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (515.10, 502.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.64, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1577, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (242, 3022)
[0000][PE] mean and std.dev: (1550.75, 518.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 416.686 CPU sec, 23.376 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520360, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 462, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (898.78, 952.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.02, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1722, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1467.05, 775.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 422.736 CPU sec, 23.715 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520862, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 437, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (1020.14, 1108.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1314, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (1299.78, 544.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 414.146 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520811, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 502, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (711.59, 665.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.48, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1380, 2171, 3386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7398)
[0000][PE] mean and std.dev: (2433.17, 1445.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 415.555 CPU sec, 23.347 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520304, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 401, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (572.90, 516.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1527, 1747, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1825.16, 631.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 414.101 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520457, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 313, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (580.24, 624.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.09, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1149, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1346.59, 1076.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 415.441 CPU sec, 23.278 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520755, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 401, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (774.21, 919.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1397, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1533.18, 785.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 414.124 CPU sec, 23.215 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520341, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 346, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1842)
[0000][PE] mean and std.dev: (479.06, 404.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.53, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1327, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1915.39, 1510.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 420.401 CPU sec, 23.598 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520287, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 319, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (363.82, 267.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1551, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (1625.28, 768.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 420.890 CPU sec, 23.581 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520303, 9, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 463, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (777.22, 745.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1116, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1345.54, 814.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 418.009 CPU sec, 23.477 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 520139, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 427, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (524.36, 393.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.08, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1427, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (1438.65, 505.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 421.519 CPU sec, 23.677 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520781, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 369, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2057)
[0000][PE] mean and std.dev: (444.20, 333.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.68, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1244, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (1321.71, 740.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 416.777 CPU sec, 23.390 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520171, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 362, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (481.65, 430.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.97, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1477, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1704.18, 1196.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 423.172 CPU sec, 23.722 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520294, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 493, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (599.03, 478.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.63, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1371, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (1473.32, 762.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 418.026 CPU sec, 23.441 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520272, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 403, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (556.12, 519.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.59, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1102, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1346.00, 891.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 419.502 CPU sec, 23.511 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520411, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 383, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (679.29, 688.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1105, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (1214.29, 620.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 419.968 CPU sec, 23.543 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520630, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 648, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (836.41, 709.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1231, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1524.25, 754.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 418.729 CPU sec, 23.494 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520516, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 602, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (1142.13, 1257.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.45, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1539, 1890, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5811)
[0000][PE] mean and std.dev: (2006.90, 1120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 421.209 CPU sec, 23.627 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520696, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 487, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1876)
[0000][PE] mean and std.dev: (464.25, 424.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.98, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 266, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (554.70, 697.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1226, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1253.35, 828.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 418.545 CPU sec, 23.436 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520675, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 454, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (746.91, 706.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1279, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (1344.68, 438.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 419.956 CPU sec, 23.614 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520345, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 735, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (969.95, 1032.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.04, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1471, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1581.50, 534.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 417.367 CPU sec, 23.383 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520618, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 424, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (803.72, 777.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.74, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1406, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5411)
[0000][PE] mean and std.dev: (1552.21, 866.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 416.889 CPU sec, 23.374 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520159, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 394, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1860)
[0000][PE] mean and std.dev: (522.31, 387.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1728, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1755.32, 846.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 422.313 CPU sec, 23.714 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520906, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 344, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (543.97, 501.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1280, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1451.39, 811.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 420.795 CPU sec, 23.605 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520574, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 537, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (558.92, 444.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1403, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1711.96, 1275.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 418.484 CPU sec, 23.431 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520252, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 396, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (797.00, 857.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.42, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1340, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1314.94, 682.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 416.115 CPU sec, 23.312 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520298, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 444, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (853.07, 899.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1196, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1483.94, 1041.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 416.356 CPU sec, 23.363 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520564, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 785, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (922.81, 765.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.54, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1492, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1690.09, 807.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 415.163 CPU sec, 23.354 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520691, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 412, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (511.32, 371.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.00, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1414, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1799.55, 1034.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 416.254 CPU sec, 23.316 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520511, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 434, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (716.62, 731.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1394, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (1391.50, 727.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 419.420 CPU sec, 23.589 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520152, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 364, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (526.36, 628.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1261, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1221.75, 621.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 417.853 CPU sec, 23.425 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520713, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 677, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1049.00, 1057.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.79, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1456, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (1418.32, 752.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 416.982 CPU sec, 23.374 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520605, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 370, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1971)
[0000][PE] mean and std.dev: (553.76, 499.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.82, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1194, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (1241.07, 640.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 415.196 CPU sec, 23.254 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520687, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 496, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (735.93, 670.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.49, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1711, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4959)
[0000][PE] mean and std.dev: (1708.40, 679.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 417.858 CPU sec, 23.528 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520669, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 425, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (600.82, 511.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.27, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1794, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (1629.88, 813.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 413.361 CPU sec, 23.183 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520565, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 430, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (942.38, 963.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (493, 1191, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (1258.44, 770.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 417.938 CPU sec, 23.407 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520897, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 444, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (671.29, 500.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1283, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1580.00, 905.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 419.469 CPU sec, 23.610 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520387, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 370, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (711.91, 708.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1520, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1806.10, 1150.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 424.585 CPU sec, 23.950 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520436, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 523, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (689.00, 634.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1582, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (1765.68, 794.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 418.702 CPU sec, 23.459 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520648, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 498, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (600.12, 549.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1244, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (1537.38, 726.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 425.134 CPU sec, 23.820 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520812, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 550, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (680.95, 599.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1383, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7220)
[0000][PE] mean and std.dev: (2120.00, 1797.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 421.896 CPU sec, 23.710 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520215, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 282, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (286.65, 173.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1261, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1268.00, 596.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 418.332 CPU sec, 23.489 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520072, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 361, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (568.72, 508.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1682, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1626.23, 811.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 424.902 CPU sec, 23.935 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520693, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 392, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (667.18, 617.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.62, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1369, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (1286.79, 570.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 415.069 CPU sec, 23.253 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520607, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 664, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (898.20, 825.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.58, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1671, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1644.92, 878.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 415.851 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520712, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 333, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (387.76, 274.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1227, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3420)
[0000][PE] mean and std.dev: (1248.15, 504.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 413.597 CPU sec, 23.153 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520580, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 401, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (763.77, 844.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.28, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1560, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (1452.77, 507.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 411.234 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520312, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 558, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (795.47, 723.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.89, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1061, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (1117.55, 697.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 418.442 CPU sec, 23.442 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520061, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 501, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (705.90, 595.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.76, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1420, 2860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1849.29, 1306.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 418.379 CPU sec, 23.487 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520518, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 597, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (805.29, 869.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.43, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1206, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1233.45, 627.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 415.906 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519876, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 565, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1128.59, 1099.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1568, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1583.38, 770.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 415.555 CPU sec, 23.279 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520534, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 439, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (768.70, 752.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.60, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1307, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1360.88, 655.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 414.730 CPU sec, 23.244 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 521290, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 341, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (576.56, 555.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1171, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (1136.00, 526.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 413.415 CPU sec, 23.180 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520683, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 401, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (626.90, 550.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1538, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1750.82, 1084.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 414.412 CPU sec, 23.216 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520726, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 828, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (1024.47, 883.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1083, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (1254.65, 502.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 414.552 CPU sec, 23.232 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520243, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 750, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1068.53, 1052.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1295, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1204.12, 614.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 416.943 CPU sec, 23.339 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520857, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 518, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (858.28, 839.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.83, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1261, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (1277.63, 575.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 416.359 CPU sec, 23.332 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520635, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 472, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (839.56, 839.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.86, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1193, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3420)
[0000][PE] mean and std.dev: (1195.78, 441.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 414.987 CPU sec, 23.283 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520706, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 416, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (591.11, 511.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.37, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1450, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1461.31, 769.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 413.787 CPU sec, 23.181 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520603, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 397, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (741.79, 678.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1466, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3458)
[0000][PE] mean and std.dev: (1451.50, 570.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 415.695 CPU sec, 23.317 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 521094, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 659, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (751.06, 672.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1254, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (1326.29, 486.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 417.211 CPU sec, 23.384 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520787, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 403, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (699.21, 703.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1458, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1433.17, 480.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 413.406 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520610, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 426, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (745.74, 799.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1190, 2519, 4262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10406)
[0000][PE] mean and std.dev: (2840.20, 2207.77)
[0000][PE] low and high boundaries for proper pairs: (1, 13478)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1351, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1612.41, 1024.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 420.040 CPU sec, 23.540 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520326, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 428, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1151.48, 1293.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.52, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1152, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (1231.10, 636.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 420.079 CPU sec, 23.538 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520093, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 421, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (943.68, 907.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.85, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1303, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1292.00, 503.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 422.417 CPU sec, 23.648 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520160, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 401, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (774.12, 725.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1667, 3238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7562)
[0000][PE] mean and std.dev: (1784.93, 1036.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 423.660 CPU sec, 23.752 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520211, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 342, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (381.12, 249.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1713, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (1734.50, 797.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 414.195 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520907, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 682, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (863.68, 749.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.04, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1539, 2723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6147)
[0000][PE] mean and std.dev: (1784.14, 1412.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 417.418 CPU sec, 23.516 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520465, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 643, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1084.40, 1069.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1507, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (1352.23, 687.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 415.055 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520741, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 398, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (571.14, 520.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1254, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1391.57, 948.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 415.417 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520568, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 317, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1637)
[0000][PE] mean and std.dev: (372.18, 303.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1220, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (1352.67, 535.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 419.079 CPU sec, 23.492 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520626, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 686, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (982.57, 913.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.50, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1625, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1504.65, 820.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 413.586 CPU sec, 23.169 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520395, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 469, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (695.77, 685.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.51, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1253, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4828)
[0000][PE] mean and std.dev: (1425.08, 765.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 416.796 CPU sec, 23.372 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520918, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 414, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (563.31, 472.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 998, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (1080.62, 674.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 414.656 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520687, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 472, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (779.05, 661.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1382, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1213.26, 767.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 412.636 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520497, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 452, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (996.75, 1086.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.73, 121.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1101, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (1132.62, 505.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 418.603 CPU sec, 23.472 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520484, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 421, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (897.26, 923.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.94, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1523, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1560.82, 922.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 416.112 CPU sec, 23.425 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520301, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 391, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1735)
[0000][PE] mean and std.dev: (451.58, 335.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1486, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1551.85, 938.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 413.046 CPU sec, 23.159 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520358, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 522, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (734.19, 634.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.69, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1165, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (1276.41, 544.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 414.073 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520275, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 451, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (740.61, 614.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1196, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (1207.56, 718.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 417.341 CPU sec, 23.405 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520954, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 760, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1012.71, 847.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.44, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1675, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5767)
[0000][PE] mean and std.dev: (1907.04, 1043.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 412.178 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520385, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 545, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (628.62, 577.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1382, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1410.12, 671.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 419.048 CPU sec, 23.514 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520382, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 414, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (640.28, 602.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 919, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1300.00, 906.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 421.915 CPU sec, 23.710 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520608, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 322, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (505.14, 500.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1459, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1300.12, 463.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 414.647 CPU sec, 23.240 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520219, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 269, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1555)
[0000][PE] mean and std.dev: (398.06, 333.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1255, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (1235.80, 503.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 417.068 CPU sec, 23.415 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 520300, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 537, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (662.17, 596.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.86, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1530, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1442.26, 568.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 417.920 CPU sec, 23.448 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520285, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 378, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (550.90, 537.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.03, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1564, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (1573.14, 849.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 417.163 CPU sec, 23.375 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520531, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 290, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2020)
[0000][PE] mean and std.dev: (461.50, 440.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.41, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1034, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1473.94, 950.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 414.331 CPU sec, 23.190 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520474, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 410, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1531)
[0000][PE] mean and std.dev: (400.97, 260.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.59, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 2182, 3156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7356)
[0000][PE] mean and std.dev: (1961.71, 1059.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 418.716 CPU sec, 23.587 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520624, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 398, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (775.67, 751.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (516.53, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1155, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6908)
[0000][PE] mean and std.dev: (1870.35, 1160.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 416.416 CPU sec, 23.320 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520124, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 655, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (798.88, 651.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1251, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (1277.00, 542.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 416.746 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520372, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 383, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (496.91, 392.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1496, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1732.31, 1108.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 420.729 CPU sec, 23.569 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520607, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 582, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (927.83, 771.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1431, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (933, 1783)
[0000][PE] mean and std.dev: (1379.31, 190.88)
[0000][PE] low and high boundaries for proper pairs: (616, 2143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 419.595 CPU sec, 23.528 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520843, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 308, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (252.77, 139.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (517.02, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1606, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (1927.32, 1440.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 416.016 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520482, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 452, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (635.87, 526.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1209, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (1172.83, 515.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 421.319 CPU sec, 23.639 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520802, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 547, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (737.71, 708.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1339, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1622.94, 746.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 412.779 CPU sec, 23.135 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520416, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 384, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (687.79, 697.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (622, 971, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (941.53, 512.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 418.962 CPU sec, 23.509 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520370, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 434, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (809.53, 744.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.85, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1405, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1457.29, 631.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 415.096 CPU sec, 23.233 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520381, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 479, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (536.68, 411.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1102, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1413.80, 795.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 417.535 CPU sec, 23.558 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520236, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 507, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (843.57, 704.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.89, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1207, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (1331.24, 948.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 417.641 CPU sec, 23.401 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520681, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 357, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (722.62, 745.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.86, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1293, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (1175.72, 651.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 415.442 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520340, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 369, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (510.54, 424.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.66, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1209, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (1346.06, 770.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 419.473 CPU sec, 23.517 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 520417, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 381, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (572.45, 569.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.64, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1586, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4778)
[0000][PE] mean and std.dev: (1494.88, 931.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 417.090 CPU sec, 23.456 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520617, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 566, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (888.39, 762.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1458, 1749, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (1839.00, 722.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 415.086 CPU sec, 23.221 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520576, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (648, 1188, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1361.62, 1081.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1561, 3226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7732)
[0000][PE] mean and std.dev: (1887.00, 1215.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 417.800 CPU sec, 23.471 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520378, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 414, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (866.18, 843.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.65, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1334, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1285.76, 655.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 415.039 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520284, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 373, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (652.16, 556.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1396, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1548.50, 1108.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 420.396 CPU sec, 23.583 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520471, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 512, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (868.40, 841.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.35, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1575, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6114)
[0000][PE] mean and std.dev: (1813.75, 1160.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 417.124 CPU sec, 23.417 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520971, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 379, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (613.12, 522.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.84, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1388, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (1390.72, 555.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 420.672 CPU sec, 23.655 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520570, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 476, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (978.94, 976.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1474, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7612)
[0000][PE] mean and std.dev: (1686.80, 1197.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 421.776 CPU sec, 23.747 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520252, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 786, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5750)
[0000][PE] mean and std.dev: (1305.84, 1463.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1159, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (1230.84, 606.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 425.319 CPU sec, 23.901 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520135, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 384, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (621.71, 566.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1764, 3220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7028)
[0000][PE] mean and std.dev: (2220.21, 1521.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 425.286 CPU sec, 23.857 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205324
[0000] 2. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1205324 sequences (180000012 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520087, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 355, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (567.17, 605.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1214, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1396.79, 741.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 421.779 CPU sec, 49.577 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520036, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 384, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2846)
[0000][PE] mean and std.dev: (677.66, 641.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.58, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1075, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1344.69, 1070.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 418.412 CPU sec, 23.465 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 521538, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 370, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (891.00, 1094.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1640, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1452.52, 900.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 418.604 CPU sec, 23.509 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520374, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 476, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (683.31, 634.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1501, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1738.25, 883.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 418.500 CPU sec, 23.534 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520495, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 435, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (497.63, 376.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1738, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5710)
[0000][PE] mean and std.dev: (1978.67, 1428.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 424.427 CPU sec, 23.898 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520494, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 398, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (946.44, 1102.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1516, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (1449.17, 609.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 415.454 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520225, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 381, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (518.84, 478.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1402, 1634, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4855)
[0000][PE] mean and std.dev: (1907.55, 920.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 418.318 CPU sec, 23.464 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520297, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 380, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1219)
[0000][PE] mean and std.dev: (380.94, 233.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.94, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1572, 3652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8808)
[0000][PE] mean and std.dev: (2110.30, 1545.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 415.111 CPU sec, 23.313 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520379, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 556, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (845.56, 658.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1405, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1449.69, 817.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 422.303 CPU sec, 23.701 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520420, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 406, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3179)
[0000][PE] mean and std.dev: (625.22, 741.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1598, 3275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8017)
[0000][PE] mean and std.dev: (2312.29, 1854.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 418.759 CPU sec, 23.940 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520447, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 451, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (581.68, 458.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.55, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1322, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (1139.90, 412.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 426.136 CPU sec, 23.969 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 520307, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 554, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (853.52, 788.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.91, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1292, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (1433.14, 661.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 419.482 CPU sec, 23.533 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520734, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 492, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2023)
[0000][PE] mean and std.dev: (610.50, 479.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.15, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1265, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (1155.56, 652.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 423.210 CPU sec, 23.808 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520137, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 353, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (645.56, 673.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 860, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (966.25, 598.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 424.814 CPU sec, 23.855 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520581, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 417, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2153)
[0000][PE] mean and std.dev: (471.79, 355.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1293, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1402.71, 946.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 421.028 CPU sec, 23.644 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520656, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 413, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (595.35, 548.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.68, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1520, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (1664.70, 707.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 420.648 CPU sec, 23.660 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520161, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 416, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2092)
[0000][PE] mean and std.dev: (603.83, 545.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1196, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1425.60, 898.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 417.609 CPU sec, 23.418 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520437, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 465, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (778.33, 770.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.49, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1358, 3126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7786)
[0000][PE] mean and std.dev: (1696.87, 1269.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 422.615 CPU sec, 24.027 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520536, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 364, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2716)
[0000][PE] mean and std.dev: (623.42, 589.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.81, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1519, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7130)
[0000][PE] mean and std.dev: (1998.62, 1252.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 418.906 CPU sec, 23.583 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520539, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 371, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (325.30, 150.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1560, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1567.35, 503.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 414.650 CPU sec, 24.125 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520904, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 429, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (630.21, 558.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.82, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1374, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1628.85, 982.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 415.751 CPU sec, 23.714 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520453, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 492, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (834.12, 720.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (767, 1683, 3263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8255)
[0000][PE] mean and std.dev: (2583.70, 2449.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12382)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1448, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (1748.75, 830.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 417.304 CPU sec, 23.429 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520464, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 375, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (637.42, 627.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.80, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1266, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (1229.62, 391.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 421.275 CPU sec, 23.653 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520525, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 370, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (733.32, 644.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.88, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1356, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1386.60, 864.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 416.803 CPU sec, 23.360 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520425, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 395, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (579.62, 457.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1149, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1252.60, 591.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 416.980 CPU sec, 23.470 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520012, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 390, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (531.75, 467.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.56, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1261, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (1290.88, 757.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 420.607 CPU sec, 23.598 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520331, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 392, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (441.53, 330.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (530, 826, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (808.22, 481.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1215, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1613.77, 967.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 415.982 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 520393, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 377, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (556.90, 483.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.92, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1471, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1282.46, 682.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 419.157 CPU sec, 23.550 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 519882, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 625, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (915.73, 820.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1164, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2658)
[0000][PE] mean and std.dev: (1129.29, 510.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 417.644 CPU sec, 23.493 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520919, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 328, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (576.97, 551.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.66, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 1672, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5866)
[0000][PE] mean and std.dev: (1954.96, 1150.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 412.296 CPU sec, 23.241 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000188 bp)...
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520827, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 450, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (691.06, 640.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.84, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1346, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1211.00, 433.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 418.287 CPU sec, 23.568 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520514, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 671, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (736.13, 625.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.98, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1177, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (1162.80, 525.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 421.258 CPU sec, 23.631 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520861, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 514, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (780.21, 727.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.89, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1513, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1854.12, 1007.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 421.071 CPU sec, 24.238 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 521052, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 424, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (773.70, 667.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.93, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1414, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (1197.00, 594.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 415.608 CPU sec, 23.268 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520400, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 510, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (930.21, 946.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.95, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1578, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6781)
[0000][PE] mean and std.dev: (1916.05, 1231.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 418.150 CPU sec, 23.536 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520427, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 668, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (919.27, 839.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1855, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1560.76, 717.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 425.044 CPU sec, 23.857 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 520670, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 345, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1504)
[0000][PE] mean and std.dev: (375.70, 209.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.70, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 1917, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (2012.67, 1050.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 425.960 CPU sec, 23.936 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520652, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 454, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (761.75, 695.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.65, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1347, 1899, 3475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7731)
[0000][PE] mean and std.dev: (2651.00, 2271.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 416.412 CPU sec, 23.494 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000144 bp)...
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520148, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 442, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (831.81, 864.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.80, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1453, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5795)
[0000][PE] mean and std.dev: (1910.78, 1053.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 426.845 CPU sec, 24.029 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520181, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 574, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (693.81, 550.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.71, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1355, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1479.60, 869.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 422.498 CPU sec, 23.761 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520841, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 411, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (884.06, 807.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.25, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1344, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1460.11, 972.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 422.396 CPU sec, 23.703 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520460, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 320, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2074)
[0000][PE] mean and std.dev: (442.06, 369.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.47, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1481, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1525.57, 753.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 427.220 CPU sec, 24.014 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520625, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 377, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (575.05, 496.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.58, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1278, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1608.43, 839.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 419.479 CPU sec, 23.550 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520356, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 442, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2126)
[0000][PE] mean and std.dev: (557.75, 474.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.24, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1412, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (1329.56, 581.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 423.180 CPU sec, 23.741 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520637, 12, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 349, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1287)
[0000][PE] mean and std.dev: (345.58, 231.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.75, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 543, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7342)
[0000][PE] mean and std.dev: (1540.50, 2045.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9765)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1633, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1333.53, 585.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 421.109 CPU sec, 23.616 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520757, 12, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 429, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (782.70, 715.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.62, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (541, 1554, 7464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21310)
[0000][PE] mean and std.dev: (2915.33, 3096.06)
[0000][PE] low and high boundaries for proper pairs: (1, 28233)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1283, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1378.38, 695.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 417.594 CPU sec, 23.448 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520809, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 482, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (622.10, 460.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (516.87, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1209, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5175)
[0000][PE] mean and std.dev: (1450.24, 1126.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 425.003 CPU sec, 23.979 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520800, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 317, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (540.39, 542.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.83, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1636, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1917.14, 1054.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 421.002 CPU sec, 23.606 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 521088, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 979, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (1099.58, 898.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 909)
[0000][PE] mean and std.dev: (517.00, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 928, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1274.57, 1058.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 415.344 CPU sec, 23.314 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520568, 10, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 426, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (603.32, 516.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.91, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (575, 1847, 7117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20201)
[0000][PE] mean and std.dev: (2895.00, 3018.01)
[0000][PE] low and high boundaries for proper pairs: (1, 26743)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1364, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1537.08, 630.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 423.377 CPU sec, 23.867 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 520271, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 438, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (774.77, 771.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1588, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6132)
[0000][PE] mean and std.dev: (1680.12, 1100.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 419.500 CPU sec, 23.598 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520228, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 434, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (754.36, 768.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.39, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1300, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1471.53, 711.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 428.039 CPU sec, 24.004 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520081, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 442, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (567.86, 410.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.51, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1602, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1474.00, 701.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 418.511 CPU sec, 23.488 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520125, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 309, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (506.97, 529.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.76, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1713, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1797.17, 911.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 419.901 CPU sec, 23.598 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520848, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 393, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (705.86, 828.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.59, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1608, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (1466.83, 598.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 420.264 CPU sec, 23.552 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520719, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 405, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (650.80, 577.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.69, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1271, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1490.41, 875.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 423.071 CPU sec, 23.894 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520352, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 430, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2421)
[0000][PE] mean and std.dev: (547.89, 447.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 509, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.93, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1223, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (1175.65, 499.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 422.360 CPU sec, 23.689 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520053, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 331, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1913)
[0000][PE] mean and std.dev: (482.49, 412.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1610, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1424.73, 554.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 426.888 CPU sec, 23.898 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 520903, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 457, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (642.71, 559.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.62, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1451, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5800)
[0000][PE] mean and std.dev: (1673.35, 1292.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 422.050 CPU sec, 23.669 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 520369, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 394, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1988)
[0000][PE] mean and std.dev: (466.05, 382.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.97, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1246, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1317.67, 506.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 423.938 CPU sec, 23.833 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520734, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 488, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (586.52, 431.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.54, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1668, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (1415.10, 529.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 422.722 CPU sec, 23.789 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520346, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 335, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (586.45, 485.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.87, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1139, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (986.14, 248.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 429.915 CPU sec, 24.421 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520208, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 470, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (1028.08, 1048.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.72, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1453, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1738.27, 1126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 427.081 CPU sec, 23.970 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520789, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 434, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (720.47, 649.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.90, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1100, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1435.07, 1014.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 423.134 CPU sec, 23.831 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520476, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 453, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (775.88, 689.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.78, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1387, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (1646.54, 1031.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 424.038 CPU sec, 23.781 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520574, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 421, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (640.56, 640.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.77, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1397, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1497.28, 691.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 423.005 CPU sec, 23.723 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520634, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 389, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (559.72, 472.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.96, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1454, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5174)
[0000][PE] mean and std.dev: (1574.59, 748.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 422.470 CPU sec, 23.762 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 146031828, nseq: 978036
	[0000][ M::kt_pipeline] read 978036 sequences (146031828 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520844, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 481, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (896.76, 833.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 911)
[0000][PE] mean and std.dev: (516.61, 121.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1515, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1596.85, 943.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 415.207 CPU sec, 23.278 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 978036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 422244, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 424, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (581.62, 456.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 508, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (516.79, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 2124, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (2173.86, 1550.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 978036 reads in 337.942 CPU sec, 18.965 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.161038 MHz
Runtime profile:

	Time taken for main_mem function: 24056.44 sec

	IO times (sec) :
	Reading IO time (reads) avg: 1125.80, (1125.80, 1125.80)
	Writing IO time (SAM) avg: 2117.44, (2117.44, 2117.44)
	Reading IO time (Reference Genome) avg: 13.55, (13.55, 13.55)
	Index read time avg: 21.37, (21.37, 21.37)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 24011.26
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 23986.78, (23986.78, 23986.78)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 8968.78, (8968.78, 8968.78)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 14908.01, (14908.01, 14908.01)
		SMEM compute avg: 6158.31, (6203.35, 6140.50)
		SAL compute avg: 2068.95, (2077.16, 2046.58)
				MEM_SA avg: 1087.71, (1090.79, 1079.60)

		BSW time, avg: 4887.84, (4889.63, 4885.00)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
