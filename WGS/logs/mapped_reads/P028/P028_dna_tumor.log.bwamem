Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000244 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520982, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 320, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 732)
[0000][PE] mean and std.dev: (230.09, 104.58)
[0000][PE] low and high boundaries for proper pairs: (1, 922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1612, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1304.44, 504.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 370.378 CPU sec, 20.889 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520557, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 243, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (228.18, 110.13)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 371.393 CPU sec, 20.783 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520563, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 327, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (630.44, 657.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 376.145 CPU sec, 21.118 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520828, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 443, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1933)
[0000][PE] mean and std.dev: (487.71, 368.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 374.282 CPU sec, 20.972 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520463, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 376, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1497)
[0000][PE] mean and std.dev: (378.77, 235.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1404, 3163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7141)
[0000][PE] mean and std.dev: (2262.00, 1854.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 372.473 CPU sec, 20.951 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520267, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 232, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (221.28, 140.90)
[0000][PE] low and high boundaries for proper pairs: (1, 911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 374.241 CPU sec, 20.998 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520338, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 343, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (791.64, 820.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 368.864 CPU sec, 20.632 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520396, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 410, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (407.80, 342.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 374.242 CPU sec, 20.931 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519979, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 297, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (631.33, 720.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 372.477 CPU sec, 20.918 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520549, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 355, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 835)
[0000][PE] mean and std.dev: (313.08, 192.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 375.191 CPU sec, 20.983 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520676, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 501, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (917.32, 919.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 372.841 CPU sec, 20.874 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520619, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 332, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (328.14, 216.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.45, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 376.355 CPU sec, 21.093 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520454, 7, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 556, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (717.87, 760.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 377.932 CPU sec, 21.231 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520247, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 288, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2126)
[0000][PE] mean and std.dev: (395.17, 383.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1783, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1692.00, 446.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 372.565 CPU sec, 20.843 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520673, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 324, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (249.24, 116.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 372.289 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520614, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 330, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (767.17, 999.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.00, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 373.388 CPU sec, 20.934 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520599, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 317, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (329.26, 220.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 372.851 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520287, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 429, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (707.19, 640.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 374.813 CPU sec, 20.987 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520946, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 329, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1008)
[0000][PE] mean and std.dev: (297.20, 164.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1062, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5573)
[0000][PE] mean and std.dev: (1382.91, 1096.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 367.270 CPU sec, 20.538 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520632, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 360, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2313)
[0000][PE] mean and std.dev: (465.41, 384.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 370.853 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520920, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 235, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 883)
[0000][PE] mean and std.dev: (268.39, 143.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.65, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 371.393 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520773, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 273, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (265.58, 153.93)
[0000][PE] low and high boundaries for proper pairs: (1, 946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 901, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (854.67, 445.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 370.109 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520433, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 303, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 907)
[0000][PE] mean and std.dev: (282.05, 175.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 375.860 CPU sec, 21.055 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520175, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 301, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1022)
[0000][PE] mean and std.dev: (302.75, 178.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 374.428 CPU sec, 21.001 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520818, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 255, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (233.19, 112.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 372.282 CPU sec, 20.868 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520064, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 350, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1980)
[0000][PE] mean and std.dev: (517.75, 455.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 374.322 CPU sec, 20.993 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520085, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 382, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1054)
[0000][PE] mean and std.dev: (354.41, 204.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 373.659 CPU sec, 20.927 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520810, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 280, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1066)
[0000][PE] mean and std.dev: (304.40, 200.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 370.356 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520764, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 223, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 815)
[0000][PE] mean and std.dev: (214.00, 116.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 375.964 CPU sec, 21.087 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520303, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 198, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (229.33, 118.96)
[0000][PE] low and high boundaries for proper pairs: (1, 949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 374.111 CPU sec, 20.950 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520562, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 391, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1527)
[0000][PE] mean and std.dev: (401.10, 329.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.85, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 377.584 CPU sec, 21.145 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520575, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 493, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (711.11, 683.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 2145, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6096)
[0000][PE] mean and std.dev: (2174.30, 1165.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 372.964 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520443, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 206, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 821)
[0000][PE] mean and std.dev: (240.44, 164.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 373.739 CPU sec, 20.907 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520683, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 270, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 935)
[0000][PE] mean and std.dev: (227.08, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (801, 2481, 5196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13986)
[0000][PE] mean and std.dev: (3170.30, 2780.62)
[0000][PE] low and high boundaries for proper pairs: (1, 18381)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1363, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5990)
[0000][PE] mean and std.dev: (1416.55, 843.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 369.251 CPU sec, 20.662 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520747, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 267, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1772)
[0000][PE] mean and std.dev: (364.30, 342.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 376.371 CPU sec, 21.095 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520482, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 335, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1704)
[0000][PE] mean and std.dev: (362.79, 349.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 374.422 CPU sec, 21.070 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520794, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 318, 398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 888)
[0000][PE] mean and std.dev: (233.67, 119.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 370.317 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520641, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 392, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (669.00, 648.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 369.095 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520914, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 328, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (311.58, 186.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 373.395 CPU sec, 20.926 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520720, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 278, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1016)
[0000][PE] mean and std.dev: (269.19, 137.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 372.902 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520416, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 354, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1508)
[0000][PE] mean and std.dev: (335.17, 238.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1226, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3004)
[0000][PE] mean and std.dev: (1044.00, 381.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 371.159 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520619, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 334, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2274)
[0000][PE] mean and std.dev: (511.37, 616.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1410, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5934)
[0000][PE] mean and std.dev: (1837.08, 990.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 378.820 CPU sec, 21.309 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520959, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 406, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1718)
[0000][PE] mean and std.dev: (411.79, 257.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 372.656 CPU sec, 20.877 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520705, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 204, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 743)
[0000][PE] mean and std.dev: (238.62, 93.47)
[0000][PE] low and high boundaries for proper pairs: (1, 928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 370.897 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520326, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 340, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (449.30, 376.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 2233, 4942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14202)
[0000][PE] mean and std.dev: (2734.40, 2964.35)
[0000][PE] low and high boundaries for proper pairs: (1, 18832)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 371.057 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520944, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 449, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (575.00, 482.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 370.022 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520638, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 350, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5742)
[0000][PE] mean and std.dev: (1042.95, 1242.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1453, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7511)
[0000][PE] mean and std.dev: (1694.75, 1226.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 371.631 CPU sec, 20.903 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519686, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 306, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (607.80, 770.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 376.244 CPU sec, 21.119 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520292, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 305, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1022)
[0000][PE] mean and std.dev: (294.17, 169.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 372.869 CPU sec, 20.847 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520269, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 348, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (391.07, 292.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 375.007 CPU sec, 20.977 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520666, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 271, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (889.82, 1151.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 369.479 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520535, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 229, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1071)
[0000][PE] mean and std.dev: (298.29, 248.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 370.601 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520364, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 210, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (186.72, 83.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.36, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 378.115 CPU sec, 21.509 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520492, 6, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 295, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (279.12, 129.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 368.962 CPU sec, 20.662 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520682, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 384, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1405)
[0000][PE] mean and std.dev: (321.00, 207.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 370.641 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520405, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 268, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1023)
[0000][PE] mean and std.dev: (240.12, 141.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 369.307 CPU sec, 20.643 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520326, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 272, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (250.25, 178.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 375.134 CPU sec, 21.027 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520553, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 252, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 937)
[0000][PE] mean and std.dev: (198.62, 119.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 372.126 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520608, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 242, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1549)
[0000][PE] mean and std.dev: (333.05, 303.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1776, 3844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9842)
[0000][PE] mean and std.dev: (2402.82, 2021.26)
[0000][PE] low and high boundaries for proper pairs: (1, 12841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 373.872 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520762, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 317, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (384.90, 347.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 376.692 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520549, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 356, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (681.72, 782.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1325, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8910)
[0000][PE] mean and std.dev: (2055.90, 1702.59)
[0000][PE] low and high boundaries for proper pairs: (1, 11602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 372.112 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520683, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 338, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (283.61, 181.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 371.568 CPU sec, 20.826 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520649, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 288, 488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1000)
[0000][PE] mean and std.dev: (272.50, 118.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 371.928 CPU sec, 20.804 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520421, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 344, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1901)
[0000][PE] mean and std.dev: (454.64, 436.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 370.103 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520726, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 260, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 802)
[0000][PE] mean and std.dev: (247.89, 133.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1156, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (1039.89, 432.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 378.806 CPU sec, 21.305 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519946, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 192, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 848)
[0000][PE] mean and std.dev: (231.45, 142.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 372.524 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520697, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 335, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2021)
[0000][PE] mean and std.dev: (529.22, 558.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.63, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 371.087 CPU sec, 20.784 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520253, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 197, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1355)
[0000][PE] mean and std.dev: (316.58, 340.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.44, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 374.181 CPU sec, 20.940 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520230, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 337, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (275.76, 128.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 2100, 4390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12734)
[0000][PE] mean and std.dev: (2186.30, 2078.74)
[0000][PE] low and high boundaries for proper pairs: (1, 16906)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 374.179 CPU sec, 20.919 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520760, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 363, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1229)
[0000][PE] mean and std.dev: (349.64, 229.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 372.278 CPU sec, 20.895 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520324, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 275, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 739)
[0000][PE] mean and std.dev: (232.78, 106.45)
[0000][PE] low and high boundaries for proper pairs: (1, 933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 372.892 CPU sec, 20.912 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520649, 6, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 415, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (989.82, 974.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 372.259 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520652, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 345, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1334)
[0000][PE] mean and std.dev: (376.62, 325.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 370.976 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520222, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 375, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (466.13, 442.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.67, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1711, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1611.89, 778.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 371.804 CPU sec, 20.906 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520771, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 356, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1149)
[0000][PE] mean and std.dev: (252.65, 143.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 370.782 CPU sec, 20.778 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520403, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 206, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 957)
[0000][PE] mean and std.dev: (233.17, 136.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1426, 1804, 3095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6433)
[0000][PE] mean and std.dev: (1946.82, 1154.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 373.197 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520603, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 281, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (728.20, 909.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 368.902 CPU sec, 20.669 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520684, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 286, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (259.09, 143.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 368.449 CPU sec, 20.689 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520442, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 262, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (226.20, 93.92)
[0000][PE] low and high boundaries for proper pairs: (1, 944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1788, 4558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11856)
[0000][PE] mean and std.dev: (2876.55, 2302.43)
[0000][PE] low and high boundaries for proper pairs: (1, 15505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 372.285 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520346, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 353, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (627.80, 749.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 369.323 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520796, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 280, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 798)
[0000][PE] mean and std.dev: (234.65, 100.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1033, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2672)
[0000][PE] mean and std.dev: (1103.40, 616.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 371.118 CPU sec, 20.824 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520407, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 306, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 864)
[0000][PE] mean and std.dev: (255.05, 159.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1632, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1537.22, 982.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 375.125 CPU sec, 21.099 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520862, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 225, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (381.07, 472.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1704, 3067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6563)
[0000][PE] mean and std.dev: (1738.00, 910.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 371.165 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520764, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 310, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1148)
[0000][PE] mean and std.dev: (280.32, 151.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 372.017 CPU sec, 20.897 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520814, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 228, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 893)
[0000][PE] mean and std.dev: (241.35, 157.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 119.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 373.085 CPU sec, 20.943 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520462, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 251, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (248.38, 140.78)
[0000][PE] low and high boundaries for proper pairs: (1, 971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 375.270 CPU sec, 21.054 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520555, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 176, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 786)
[0000][PE] mean and std.dev: (202.56, 150.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 370.407 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520842, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 208, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 676)
[0000][PE] mean and std.dev: (204.57, 109.43)
[0000][PE] low and high boundaries for proper pairs: (1, 840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 368.624 CPU sec, 20.674 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520625, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 347, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 918)
[0000][PE] mean and std.dev: (315.70, 200.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1449, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7555)
[0000][PE] mean and std.dev: (1904.50, 1492.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 371.001 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520064, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 277, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2321)
[0000][PE] mean and std.dev: (491.50, 385.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 374.504 CPU sec, 21.026 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520906, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 320, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (281.91, 130.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 374.467 CPU sec, 21.045 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520743, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 380, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1365)
[0000][PE] mean and std.dev: (421.33, 311.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 372.928 CPU sec, 20.907 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520987, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 305, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (535.82, 517.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1308, 3086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7392)
[0000][PE] mean and std.dev: (1745.10, 1691.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 372.053 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520804, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 237, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (284.74, 160.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.531 CPU sec, 20.985 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520728, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 394, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2312)
[0000][PE] mean and std.dev: (523.65, 399.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (200, 813, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7268)
[0000][PE] mean and std.dev: (1616.45, 1759.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9624)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 376.789 CPU sec, 21.139 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520580, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 296, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2040)
[0000][PE] mean and std.dev: (363.32, 366.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1661, 4090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10170)
[0000][PE] mean and std.dev: (2374.27, 2035.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 372.441 CPU sec, 20.898 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520423, 7, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 391, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (437.79, 315.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.53, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 373.712 CPU sec, 21.046 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520389, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 358, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (656.95, 732.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 372.376 CPU sec, 20.898 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520531, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 329, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (461.95, 476.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 372.902 CPU sec, 20.946 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520469, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 301, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (578.90, 812.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 370.883 CPU sec, 20.875 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520945, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 302, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (721.91, 941.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.294 CPU sec, 20.911 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520831, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 194, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 858)
[0000][PE] mean and std.dev: (231.69, 139.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 373.150 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520672, 5, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 322, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 990)
[0000][PE] mean and std.dev: (334.77, 189.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 373.320 CPU sec, 20.966 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520908, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 433, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1287.40, 1568.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1615, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5872)
[0000][PE] mean and std.dev: (1707.80, 1155.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 374.460 CPU sec, 21.015 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520613, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 272, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1494)
[0000][PE] mean and std.dev: (354.96, 285.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.392 CPU sec, 20.901 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520433, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 338, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (400.17, 362.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 371.694 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000124 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520706, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 313, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1878)
[0000][PE] mean and std.dev: (423.14, 389.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 374.122 CPU sec, 21.037 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520510, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 331, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (246.05, 100.91)
[0000][PE] low and high boundaries for proper pairs: (1, 944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 369.032 CPU sec, 20.704 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520701, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 379, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (815.19, 893.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1538, 2346, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (1874.00, 682.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.392 CPU sec, 20.806 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520370, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 252, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 710)
[0000][PE] mean and std.dev: (198.36, 96.00)
[0000][PE] low and high boundaries for proper pairs: (1, 885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 374.971 CPU sec, 21.066 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520824, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 388, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (340.94, 219.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 2040, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5489)
[0000][PE] mean and std.dev: (1717.30, 1000.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 367.839 CPU sec, 20.704 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520148, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 378, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7560)
[0000][PE] mean and std.dev: (1266.76, 1790.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 370.993 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520445, 5, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 231, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (465.15, 421.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 374.067 CPU sec, 21.025 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520853, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 253, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (274.50, 175.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 370.853 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520350, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 351, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (630.24, 577.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 371.472 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520946, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 229, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (439.72, 416.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 368.721 CPU sec, 20.664 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520823, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 292, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (720.96, 925.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 368.860 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520448, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 225, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 793)
[0000][PE] mean and std.dev: (207.17, 99.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 370.424 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520257, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 284, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 729)
[0000][PE] mean and std.dev: (238.50, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 368.977 CPU sec, 20.697 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520763, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 229, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 896)
[0000][PE] mean and std.dev: (259.37, 149.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 372.823 CPU sec, 20.963 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521244, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 204, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 951)
[0000][PE] mean and std.dev: (242.17, 200.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (474, 2000, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7770)
[0000][PE] mean and std.dev: (1689.56, 1699.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10202)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 368.804 CPU sec, 20.646 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520563, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 362, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1206)
[0000][PE] mean and std.dev: (304.39, 229.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 368.455 CPU sec, 20.646 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520474, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 363, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (318.20, 184.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (599, 2014, 4276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11630)
[0000][PE] mean and std.dev: (2279.00, 1872.49)
[0000][PE] low and high boundaries for proper pairs: (1, 15307)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 370.298 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520805, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 351, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (440.90, 370.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1646, 2340, 4013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8747)
[0000][PE] mean and std.dev: (3212.30, 2250.30)
[0000][PE] low and high boundaries for proper pairs: (1, 12214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 371.708 CPU sec, 20.908 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520627, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 385, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 952)
[0000][PE] mean and std.dev: (281.06, 121.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (373, 1581, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6922)
[0000][PE] mean and std.dev: (1672.80, 1529.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9105)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 371.107 CPU sec, 20.832 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520296, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 339, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 915)
[0000][PE] mean and std.dev: (310.69, 126.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1592, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1650.23, 1042.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 371.057 CPU sec, 20.875 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520677, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 227, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (591.47, 680.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 371.893 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520220, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 315, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1079)
[0000][PE] mean and std.dev: (258.42, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 370.044 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520664, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 190, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (239.45, 154.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 372.915 CPU sec, 21.013 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520691, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 334, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1436)
[0000][PE] mean and std.dev: (311.44, 168.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (668, 949, 2782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7010)
[0000][PE] mean and std.dev: (1835.73, 1852.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9246)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 368.758 CPU sec, 20.713 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519938, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 321, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (534.05, 493.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 372.418 CPU sec, 20.908 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520685, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (72, 283, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1005)
[0000][PE] mean and std.dev: (245.35, 158.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 368.461 CPU sec, 20.660 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520552, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 294, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1602)
[0000][PE] mean and std.dev: (353.05, 264.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 368.790 CPU sec, 20.691 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520496, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 200, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 955)
[0000][PE] mean and std.dev: (247.50, 158.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 370.778 CPU sec, 20.804 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520623, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 289, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (671.92, 610.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1688, 1964, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (312, 3752)
[0000][PE] mean and std.dev: (1879.09, 605.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 373.611 CPU sec, 20.975 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520687, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 328, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1240)
[0000][PE] mean and std.dev: (355.90, 277.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.252 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520300, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 296, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1542)
[0000][PE] mean and std.dev: (334.95, 273.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.64, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 372.698 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520863, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 323, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (499.72, 545.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 374.574 CPU sec, 20.997 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520167, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 363, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (338.63, 239.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (805, 2403, 5342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14416)
[0000][PE] mean and std.dev: (2979.20, 2591.84)
[0000][PE] low and high boundaries for proper pairs: (1, 18953)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 1440, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1463.50, 1022.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 368.697 CPU sec, 20.666 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521003, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 267, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1004)
[0000][PE] mean and std.dev: (299.33, 193.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.66, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1253, 4712, 6967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18395)
[0000][PE] mean and std.dev: (3973.67, 3014.69)
[0000][PE] low and high boundaries for proper pairs: (1, 24109)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 370.025 CPU sec, 20.772 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520512, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 333, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (443.87, 469.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 372.156 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520162, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 303, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (672.32, 851.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (644, 715, 5064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13904)
[0000][PE] mean and std.dev: (2231.91, 2597.49)
[0000][PE] low and high boundaries for proper pairs: (1, 18324)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1493, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5434)
[0000][PE] mean and std.dev: (1564.09, 801.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 369.087 CPU sec, 20.769 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520357, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 212, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 690)
[0000][PE] mean and std.dev: (220.75, 109.33)
[0000][PE] low and high boundaries for proper pairs: (1, 864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 370.494 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520350, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 287, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (343.39, 268.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 371.295 CPU sec, 20.842 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520723, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 282, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (318.72, 230.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 372.730 CPU sec, 21.018 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520989, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 322, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (659.42, 647.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1114, 4750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12720)
[0000][PE] mean and std.dev: (2599.86, 2616.58)
[0000][PE] low and high boundaries for proper pairs: (1, 16705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 370.727 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520226, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 459, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (780.75, 809.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 373.347 CPU sec, 21.014 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520958, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 329, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (569.00, 560.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 368.502 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520275, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 283, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (631.22, 793.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (379, 2166, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6454)
[0000][PE] mean and std.dev: (2011.00, 1778.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9127)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 369.678 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520955, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 408, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1550)
[0000][PE] mean and std.dev: (469.67, 344.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 367.906 CPU sec, 20.687 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520633, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 310, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (614.17, 789.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 369.002 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520992, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 314, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1470)
[0000][PE] mean and std.dev: (395.06, 328.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 370.980 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520432, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 315, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (294.36, 170.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 371.504 CPU sec, 20.881 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520530, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 263, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 902)
[0000][PE] mean and std.dev: (258.70, 148.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 372.043 CPU sec, 20.883 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520798, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 293, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1369)
[0000][PE] mean and std.dev: (345.21, 325.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1200, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (984.45, 540.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 370.011 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520616, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 327, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (541.95, 640.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1320, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1301.00, 524.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 371.198 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520691, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 278, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (293.54, 155.60)
[0000][PE] low and high boundaries for proper pairs: (1, 994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1194, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7256)
[0000][PE] mean and std.dev: (1827.30, 1370.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 369.857 CPU sec, 20.820 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520888, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 372, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1979)
[0000][PE] mean and std.dev: (417.87, 389.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 369.896 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520224, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 325, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (842.88, 904.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.54, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (382, 677, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6277)
[0000][PE] mean and std.dev: (1323.67, 1673.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8242)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 369.652 CPU sec, 20.719 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520721, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 287, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2727)
[0000][PE] mean and std.dev: (403.78, 560.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 369.920 CPU sec, 20.693 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520508, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 326, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 766)
[0000][PE] mean and std.dev: (281.95, 135.97)
[0000][PE] low and high boundaries for proper pairs: (1, 957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (340, 797, 5599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16117)
[0000][PE] mean and std.dev: (2709.09, 3122.43)
[0000][PE] low and high boundaries for proper pairs: (1, 21376)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 371.147 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520843, 11, 0)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 422, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (618.25, 636.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (885, 1121, 3386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8388)
[0000][PE] mean and std.dev: (2038.18, 2019.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10889)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 368.738 CPU sec, 21.059 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520235, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 328, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1289)
[0000][PE] mean and std.dev: (379.20, 266.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1319, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (1165.11, 387.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 369.865 CPU sec, 20.756 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520202, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 263, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 877)
[0000][PE] mean and std.dev: (267.74, 142.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.15, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1403, 1837, 3326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7172)
[0000][PE] mean and std.dev: (2498.45, 1587.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 371.495 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520557, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 344, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1143)
[0000][PE] mean and std.dev: (346.55, 214.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1145, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6329)
[0000][PE] mean and std.dev: (1640.30, 1043.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 367.147 CPU sec, 20.634 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520575, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 222, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (386.04, 373.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.04, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 370.737 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520523, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 243, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (262.33, 178.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 371.088 CPU sec, 20.761 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520446, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 259, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (453.08, 489.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.18, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 370.221 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520366, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 350, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (468.10, 430.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1188, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1228.22, 792.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.975 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520332, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 341, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1898)
[0000][PE] mean and std.dev: (485.88, 394.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1330, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7468)
[0000][PE] mean and std.dev: (1684.92, 1434.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 368.508 CPU sec, 20.693 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520701, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 235, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 939)
[0000][PE] mean and std.dev: (244.57, 118.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.028 CPU sec, 20.666 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520978, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 304, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1944)
[0000][PE] mean and std.dev: (464.48, 475.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.06, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (660, 1982, 3086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7938)
[0000][PE] mean and std.dev: (2071.09, 1571.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10364)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 367.033 CPU sec, 20.510 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520801, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 218, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 735)
[0000][PE] mean and std.dev: (240.44, 124.18)
[0000][PE] low and high boundaries for proper pairs: (1, 920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1804, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1644.80, 964.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 373.019 CPU sec, 20.884 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521029, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 199, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (342.71, 363.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 366.598 CPU sec, 20.543 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520392, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 300, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (234.79, 104.80)
[0000][PE] low and high boundaries for proper pairs: (1, 859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.10, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.049 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520546, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 205, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2033)
[0000][PE] mean and std.dev: (380.29, 404.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.40, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1460, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1218.58, 832.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 371.196 CPU sec, 20.855 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519894, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 392, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1323)
[0000][PE] mean and std.dev: (416.59, 316.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 370.095 CPU sec, 20.767 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520632, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 207, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (406.21, 528.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 2516, 4545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11157)
[0000][PE] mean and std.dev: (2829.25, 2282.57)
[0000][PE] low and high boundaries for proper pairs: (1, 14463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 373.129 CPU sec, 20.914 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520647, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 284, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (607.26, 856.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 370.857 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520837, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 286, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (699.65, 838.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 369.661 CPU sec, 20.759 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520305, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 336, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (320.00, 229.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 370.579 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520565, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 363, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (555.62, 610.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.69, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1248, 3795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9283)
[0000][PE] mean and std.dev: (2059.07, 1591.53)
[0000][PE] low and high boundaries for proper pairs: (1, 12027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 369.663 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520615, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 304, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (267.50, 138.44)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 368.811 CPU sec, 20.625 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520932, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 379, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1023)
[0000][PE] mean and std.dev: (320.05, 162.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1304, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (1268.50, 594.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 371.289 CPU sec, 20.791 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520681, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 301, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (225.88, 97.65)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 372.500 CPU sec, 20.900 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520700, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 248, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (508.56, 513.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 2473, 3967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9571)
[0000][PE] mean and std.dev: (2433.38, 1474.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 370.226 CPU sec, 20.808 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520562, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 294, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7000)
[0000][PE] mean and std.dev: (1335.19, 1858.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 374.594 CPU sec, 21.021 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520805, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 259, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1024)
[0000][PE] mean and std.dev: (272.75, 169.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1408, 4907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13021)
[0000][PE] mean and std.dev: (2417.75, 2171.74)
[0000][PE] low and high boundaries for proper pairs: (1, 17078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 369.738 CPU sec, 20.700 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520032, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 228, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 718)
[0000][PE] mean and std.dev: (242.11, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 374.802 CPU sec, 21.048 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520700, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 333, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1607)
[0000][PE] mean and std.dev: (337.40, 303.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 372.362 CPU sec, 20.861 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520745, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 298, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1753)
[0000][PE] mean and std.dev: (440.81, 392.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 371.833 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520685, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 340, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1517)
[0000][PE] mean and std.dev: (401.11, 451.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 368.813 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520394, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 198, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1675)
[0000][PE] mean and std.dev: (331.47, 340.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.18, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1348, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1420.58, 1090.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 372.808 CPU sec, 20.865 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520890, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 197, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 771)
[0000][PE] mean and std.dev: (221.42, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 372.964 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520174, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 660, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1113.04, 1230.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 374.647 CPU sec, 20.986 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521016, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 286, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (421.70, 459.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1141, 5455, 6212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16354)
[0000][PE] mean and std.dev: (4141.60, 3014.08)
[0000][PE] low and high boundaries for proper pairs: (1, 21425)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1122, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (1089.90, 462.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 369.072 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520390, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 290, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 772)
[0000][PE] mean and std.dev: (248.06, 107.44)
[0000][PE] low and high boundaries for proper pairs: (1, 973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.804 CPU sec, 20.894 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520616, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 208, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 926)
[0000][PE] mean and std.dev: (205.28, 111.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 369.366 CPU sec, 20.693 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520625, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 306, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (821.39, 967.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 369.655 CPU sec, 20.698 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520305, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 340, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (365.22, 265.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1246, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8643)
[0000][PE] mean and std.dev: (2561.55, 2675.29)
[0000][PE] low and high boundaries for proper pairs: (1, 13263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 373.091 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520519, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 267, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (312.07, 211.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 368.179 CPU sec, 20.647 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519842, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 356, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (679.55, 727.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (510.02, 120.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (640, 1678, 5514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15262)
[0000][PE] mean and std.dev: (2920.00, 2657.71)
[0000][PE] low and high boundaries for proper pairs: (1, 20136)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 372.325 CPU sec, 20.937 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520932, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 264, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1376)
[0000][PE] mean and std.dev: (287.14, 139.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 372.572 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520609, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 321, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (467.84, 454.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 368.479 CPU sec, 20.649 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520290, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 214, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2642)
[0000][PE] mean and std.dev: (344.64, 361.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (300, 961, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1072.33, 1091.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (418, 745, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (819.27, 545.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 373.555 CPU sec, 20.933 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521080, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 349, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1747)
[0000][PE] mean and std.dev: (442.30, 380.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.124 CPU sec, 20.895 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520459, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 314, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (242.88, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 373.563 CPU sec, 20.953 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520566, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 336, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (521.67, 592.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (636, 817, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (953.10, 709.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 371.099 CPU sec, 20.734 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520286, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 283, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1099)
[0000][PE] mean and std.dev: (397.60, 319.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 370.938 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520585, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 244, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (696.57, 718.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1291, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5777)
[0000][PE] mean and std.dev: (1830.27, 1266.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 371.366 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520614, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 211, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1151)
[0000][PE] mean and std.dev: (270.16, 196.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 373.857 CPU sec, 20.921 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520627, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 342, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (583.91, 612.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 371.887 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520270, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 381, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1978)
[0000][PE] mean and std.dev: (463.96, 477.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.42, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 375.467 CPU sec, 21.077 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520693, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 313, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (643.44, 819.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.41, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 375.413 CPU sec, 21.003 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520577, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 321, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (571.78, 590.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1314, 3650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9778)
[0000][PE] mean and std.dev: (2006.36, 1912.30)
[0000][PE] low and high boundaries for proper pairs: (1, 12842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 372.331 CPU sec, 20.859 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520651, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 351, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1863)
[0000][PE] mean and std.dev: (389.25, 340.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 373.346 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520843, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 333, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1891)
[0000][PE] mean and std.dev: (386.48, 347.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 370.607 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520800, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 450, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1092.69, 1224.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 370.032 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520358, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 323, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (554.87, 717.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1605, 3496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8462)
[0000][PE] mean and std.dev: (2082.18, 1534.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 374.087 CPU sec, 20.954 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520746, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 381, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1483)
[0000][PE] mean and std.dev: (385.54, 231.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 370.658 CPU sec, 20.745 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520408, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 368, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (431.48, 425.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 372.813 CPU sec, 20.909 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520888, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 405, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1824)
[0000][PE] mean and std.dev: (424.60, 254.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 2456, 4824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12406)
[0000][PE] mean and std.dev: (2843.00, 1862.82)
[0000][PE] low and high boundaries for proper pairs: (1, 16197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 368.932 CPU sec, 20.713 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520452, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 196, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 711)
[0000][PE] mean and std.dev: (196.12, 86.45)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.98, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1388, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1550.17, 737.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 374.470 CPU sec, 20.974 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520551, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 412, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (703.00, 793.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (546, 742, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (1062.00, 1131.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 1023, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6269)
[0000][PE] mean and std.dev: (1133.67, 894.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.578 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520697, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 241, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (534.19, 604.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 372.445 CPU sec, 20.829 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520512, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 301, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (327.15, 264.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 372.772 CPU sec, 20.834 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520650, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 272, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 936)
[0000][PE] mean and std.dev: (309.60, 177.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1178, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6526)
[0000][PE] mean and std.dev: (1488.46, 1019.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 370.741 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519968, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 379, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (593.36, 671.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 372.509 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520605, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 211, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 945)
[0000][PE] mean and std.dev: (232.23, 164.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.18, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 372.167 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520625, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 358, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (828.77, 966.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.99, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 372.180 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520607, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 199, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 817)
[0000][PE] mean and std.dev: (224.83, 141.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 368.672 CPU sec, 20.637 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520311, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 332, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (458.81, 514.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 372.159 CPU sec, 20.826 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520388, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 311, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1651)
[0000][PE] mean and std.dev: (346.69, 324.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 373.217 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520744, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 286, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (259.10, 124.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 372.926 CPU sec, 20.951 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520430, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 299, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (257.47, 191.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 374.253 CPU sec, 20.953 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520466, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 281, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 865)
[0000][PE] mean and std.dev: (271.27, 132.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 373.004 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520197, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 301, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2297)
[0000][PE] mean and std.dev: (448.85, 423.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 373.721 CPU sec, 20.960 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520372, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 350, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (425.56, 315.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.59, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1053, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (1087.23, 547.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 373.402 CPU sec, 20.922 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 521180, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 208, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (699.63, 866.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 370.292 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520656, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 212, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (381.00, 393.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.97, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 374.513 CPU sec, 20.947 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520510, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 442, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (818.83, 933.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1662, 3231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7217)
[0000][PE] mean and std.dev: (1804.90, 1239.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 373.241 CPU sec, 20.866 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520299, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 382, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2301)
[0000][PE] mean and std.dev: (536.78, 494.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 375.115 CPU sec, 21.049 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520664, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 229, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1083)
[0000][PE] mean and std.dev: (256.06, 140.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1658, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1845.77, 1203.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 372.493 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520587, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 239, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1275)
[0000][PE] mean and std.dev: (293.76, 212.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1248, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (1280.09, 486.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 369.280 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520638, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 245, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 681)
[0000][PE] mean and std.dev: (237.76, 93.03)
[0000][PE] low and high boundaries for proper pairs: (1, 844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 369.586 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520082, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 182, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (221.24, 156.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1484, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (1431.00, 633.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 373.188 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520711, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 219, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1385)
[0000][PE] mean and std.dev: (316.08, 277.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 370.823 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520701, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 358, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1331)
[0000][PE] mean and std.dev: (409.00, 298.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 370.266 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520728, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 344, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1717)
[0000][PE] mean and std.dev: (409.96, 361.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 371.760 CPU sec, 20.892 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520717, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 226, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1814)
[0000][PE] mean and std.dev: (331.44, 308.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 372.939 CPU sec, 20.930 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520581, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 331, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (629.64, 796.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 372.350 CPU sec, 20.880 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520810, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 367, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6539)
[0000][PE] mean and std.dev: (811.31, 906.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 372.723 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520398, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 348, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (610.22, 639.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1195, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1494.36, 763.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.665 CPU sec, 20.890 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520837, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 370, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2502)
[0000][PE] mean and std.dev: (623.19, 623.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 372.319 CPU sec, 20.855 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520419, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 325, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (728.45, 772.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 802, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1105.00, 1169.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 374.055 CPU sec, 20.958 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520401, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 338, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (497.95, 526.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 373.302 CPU sec, 20.948 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520827, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 401, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (603.19, 528.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 371.282 CPU sec, 20.795 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520636, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 278, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1252)
[0000][PE] mean and std.dev: (324.33, 269.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 369.493 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520379, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 396, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (721.41, 722.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 374.954 CPU sec, 20.976 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520643, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 339, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 837)
[0000][PE] mean and std.dev: (280.09, 161.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 373.018 CPU sec, 20.868 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520559, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 369, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1514)
[0000][PE] mean and std.dev: (424.35, 333.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1562, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1409.33, 823.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.500 CPU sec, 20.851 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520661, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 337, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (312.57, 206.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 374.111 CPU sec, 20.993 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520572, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 362, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6517)
[0000][PE] mean and std.dev: (865.00, 930.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 371.920 CPU sec, 20.862 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520725, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 287, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1266)
[0000][PE] mean and std.dev: (284.50, 143.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1340, 4413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11535)
[0000][PE] mean and std.dev: (2331.38, 2083.40)
[0000][PE] low and high boundaries for proper pairs: (1, 15096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 372.854 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520609, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 375, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1179)
[0000][PE] mean and std.dev: (361.00, 243.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 371.814 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520432, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 262, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1902)
[0000][PE] mean and std.dev: (458.00, 467.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 372.507 CPU sec, 20.839 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520073, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 328, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 813)
[0000][PE] mean and std.dev: (304.79, 123.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1548, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6658)
[0000][PE] mean and std.dev: (1848.71, 1130.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 376.147 CPU sec, 21.050 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520786, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 270, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6517)
[0000][PE] mean and std.dev: (1066.67, 1462.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.897 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520692, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 288, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2146)
[0000][PE] mean and std.dev: (431.67, 409.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 370.547 CPU sec, 20.752 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520325, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 387, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1110)
[0000][PE] mean and std.dev: (348.89, 241.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1164, 3244, 4875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12297)
[0000][PE] mean and std.dev: (3242.70, 2637.23)
[0000][PE] low and high boundaries for proper pairs: (1, 16008)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 375.426 CPU sec, 20.995 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520288, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 310, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1466)
[0000][PE] mean and std.dev: (374.17, 344.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 373.559 CPU sec, 20.927 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520829, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 296, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (265.42, 108.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (737, 1164, 3453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8885)
[0000][PE] mean and std.dev: (1645.45, 1510.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11601)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 372.993 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520398, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 370, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (649.71, 807.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 374.867 CPU sec, 21.075 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521087, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 280, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4902)
[0000][PE] mean and std.dev: (979.00, 1247.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1533, 3838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9480)
[0000][PE] mean and std.dev: (2349.80, 2262.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 372.553 CPU sec, 20.889 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520342, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 391, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2116)
[0000][PE] mean and std.dev: (500.95, 477.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 372.996 CPU sec, 20.906 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520635, 15, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 329, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1971)
[0000][PE] mean and std.dev: (426.85, 401.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (237, 685, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (864.53, 815.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 368.934 CPU sec, 20.647 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520676, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 207, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 732)
[0000][PE] mean and std.dev: (235.78, 121.98)
[0000][PE] low and high boundaries for proper pairs: (1, 920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 373.995 CPU sec, 20.956 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520876, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 278, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1347)
[0000][PE] mean and std.dev: (284.76, 243.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 370.516 CPU sec, 20.819 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520236, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 320, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 863)
[0000][PE] mean and std.dev: (270.63, 126.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 374.544 CPU sec, 21.007 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520494, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 263, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (329.90, 232.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.60, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 372.445 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520345, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 316, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (823.13, 1023.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 373.398 CPU sec, 20.976 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520471, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 249, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1227)
[0000][PE] mean and std.dev: (330.08, 272.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 370.805 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520675, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 312, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2173)
[0000][PE] mean and std.dev: (403.90, 288.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1545, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5805)
[0000][PE] mean and std.dev: (1970.80, 1454.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 373.534 CPU sec, 20.909 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520706, 11, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 319, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (650.21, 638.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (747, 1449, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1727.82, 1336.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.899 CPU sec, 20.855 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520453, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 236, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 841)
[0000][PE] mean and std.dev: (281.17, 190.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1486, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (1445.14, 730.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 371.474 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520719, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 314, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (510.70, 499.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 371.698 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520494, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 281, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 966)
[0000][PE] mean and std.dev: (283.39, 165.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 373.357 CPU sec, 20.903 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520308, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 247, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 988)
[0000][PE] mean and std.dev: (224.86, 143.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 372.175 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520614, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 222, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (538.60, 638.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 371.692 CPU sec, 20.873 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521056, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 209, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 713)
[0000][PE] mean and std.dev: (240.00, 135.66)
[0000][PE] low and high boundaries for proper pairs: (1, 891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 369.914 CPU sec, 20.739 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520459, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 240, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (269.79, 174.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 2018, 4007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9597)
[0000][PE] mean and std.dev: (2671.20, 2125.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.014 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520455, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 322, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (545.44, 582.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 371.623 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520451, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 331, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7295)
[0000][PE] mean and std.dev: (1275.00, 1713.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 370.748 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520412, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 392, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (837.50, 890.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 371.557 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520667, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 211, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (350.06, 486.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.89, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 373.510 CPU sec, 20.919 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520676, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 455, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (720.22, 693.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 372.335 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520346, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 296, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (517.27, 660.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 369.500 CPU sec, 20.655 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520486, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 335, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1605)
[0000][PE] mean and std.dev: (515.31, 417.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.61, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 368.347 CPU sec, 20.607 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520400, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 280, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (328.23, 241.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 371.946 CPU sec, 20.826 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520865, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 373, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1640)
[0000][PE] mean and std.dev: (484.78, 432.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 370.737 CPU sec, 20.758 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520201, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 449, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (771.48, 723.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 371.906 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521105, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 442, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5848)
[0000][PE] mean and std.dev: (884.29, 985.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (510.03, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 366.310 CPU sec, 20.492 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520709, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 382, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (621.88, 623.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1316, 5452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15820)
[0000][PE] mean and std.dev: (2364.00, 2400.71)
[0000][PE] low and high boundaries for proper pairs: (1, 21004)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 371.488 CPU sec, 20.806 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520849, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 321, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1597)
[0000][PE] mean and std.dev: (267.94, 180.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 370.067 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520846, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 311, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 857)
[0000][PE] mean and std.dev: (256.56, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1075, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1469.60, 900.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 370.489 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520227, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 200, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1092)
[0000][PE] mean and std.dev: (254.60, 224.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1432, 2096, 3524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7708)
[0000][PE] mean and std.dev: (2395.91, 1587.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 373.369 CPU sec, 20.922 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520735, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 231, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (555.60, 726.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.44, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1050, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (242, 2202)
[0000][PE] mean and std.dev: (925.88, 367.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.664 CPU sec, 20.737 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520767, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 318, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1768)
[0000][PE] mean and std.dev: (416.42, 339.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 2057, 6735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19561)
[0000][PE] mean and std.dev: (3272.00, 3254.93)
[0000][PE] low and high boundaries for proper pairs: (1, 25974)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 371.442 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520018, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 259, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (304.11, 237.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 371.659 CPU sec, 20.841 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520213, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 663, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (763.35, 770.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1644, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6358)
[0000][PE] mean and std.dev: (1891.45, 1326.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 371.462 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520784, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 338, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (587.80, 769.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 371.942 CPU sec, 20.894 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520670, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 643, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (762.52, 592.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 370.630 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520561, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (104, 235, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (316.93, 393.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 375.728 CPU sec, 21.075 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520453, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 263, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2279)
[0000][PE] mean and std.dev: (345.89, 273.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.40, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 374.768 CPU sec, 21.058 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520568, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 338, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (281.69, 90.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 373.091 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520806, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 379, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (305.35, 134.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 2013, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (1981.18, 888.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 372.566 CPU sec, 20.892 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520266, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 235, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (381.24, 363.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 374.458 CPU sec, 21.003 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520729, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 371, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 981)
[0000][PE] mean and std.dev: (410.83, 236.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 372.879 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520910, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 263, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (603.44, 819.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 371.386 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520381, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 229, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1125)
[0000][PE] mean and std.dev: (225.43, 125.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 372.974 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520569, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 285, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1253)
[0000][PE] mean and std.dev: (256.54, 121.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.758 CPU sec, 20.930 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520611, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 323, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (699.47, 686.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 374.674 CPU sec, 20.974 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520467, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 298, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (414.15, 440.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (800, 1447, 5537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15011)
[0000][PE] mean and std.dev: (2311.82, 2112.62)
[0000][PE] low and high boundaries for proper pairs: (1, 19748)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 373.939 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 521034, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 272, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (235.04, 134.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 373.449 CPU sec, 20.970 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520797, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 323, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 709)
[0000][PE] mean and std.dev: (267.52, 116.21)
[0000][PE] low and high boundaries for proper pairs: (1, 880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1347, 4842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12322)
[0000][PE] mean and std.dev: (2505.00, 2144.81)
[0000][PE] low and high boundaries for proper pairs: (1, 16062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 373.541 CPU sec, 20.976 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520379, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 522, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (863.76, 865.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (270, 1382, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5511)
[0000][PE] mean and std.dev: (1406.40, 1394.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7258)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 376.098 CPU sec, 21.089 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520392, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 289, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (854.60, 1118.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 373.336 CPU sec, 20.952 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520381, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 366, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1829)
[0000][PE] mean and std.dev: (326.48, 214.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 372.439 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520749, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 276, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 969)
[0000][PE] mean and std.dev: (284.27, 145.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (198, 691, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5829)
[0000][PE] mean and std.dev: (988.10, 911.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7706)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1590, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1799.09, 908.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 371.386 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520944, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 388, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (634.14, 502.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 371.543 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520560, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 236, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (525.77, 657.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 371.062 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520454, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 424, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1025.79, 1137.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 374.315 CPU sec, 20.979 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520962, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 395, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1272)
[0000][PE] mean and std.dev: (305.83, 174.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 2749, 3631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8789)
[0000][PE] mean and std.dev: (2332.33, 1369.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 372.712 CPU sec, 20.908 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520382, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 296, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (848.44, 971.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 372.133 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520751, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 251, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1866)
[0000][PE] mean and std.dev: (440.05, 403.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 373.129 CPU sec, 21.041 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520927, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 379, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (578.17, 560.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 372.796 CPU sec, 20.939 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520695, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 255, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 871)
[0000][PE] mean and std.dev: (273.37, 149.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 373.115 CPU sec, 20.897 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520513, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 220, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1843)
[0000][PE] mean and std.dev: (363.09, 370.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 372.480 CPU sec, 20.850 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520397, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 249, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1887)
[0000][PE] mean and std.dev: (435.52, 419.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 371.176 CPU sec, 20.823 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520455, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 359, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (315.15, 219.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 373.980 CPU sec, 20.979 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520284, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 393, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (567.35, 460.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 375.198 CPU sec, 21.032 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520872, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 282, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (419.95, 512.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 372.316 CPU sec, 20.839 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520628, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 349, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (452.16, 401.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.97, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 371.091 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520365, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 209, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 780)
[0000][PE] mean and std.dev: (224.19, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.51, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1342, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (998.75, 432.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 372.799 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520677, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 323, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 729)
[0000][PE] mean and std.dev: (227.36, 104.30)
[0000][PE] low and high boundaries for proper pairs: (1, 912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 376.269 CPU sec, 21.117 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520578, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 311, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (268.85, 179.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.61, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1254, 3606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9164)
[0000][PE] mean and std.dev: (2544.20, 2565.77)
[0000][PE] low and high boundaries for proper pairs: (1, 12807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 373.603 CPU sec, 20.948 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520218, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 426, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (570.39, 480.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.267 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520622, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (119, 324, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (531.89, 611.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 365.169 CPU sec, 20.620 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000046 bp)...
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520437, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 270, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (229.08, 85.31)
[0000][PE] low and high boundaries for proper pairs: (1, 849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 371.835 CPU sec, 20.871 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520755, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 352, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (595.06, 718.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 373.987 CPU sec, 20.938 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520688, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 285, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (432.05, 527.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 373.041 CPU sec, 20.894 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520653, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 214, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 841)
[0000][PE] mean and std.dev: (245.84, 107.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (910, 1513, 3120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7540)
[0000][PE] mean and std.dev: (1532.92, 917.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9750)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1426, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (1122.62, 486.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 371.785 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520628, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 304, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (690.33, 782.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (623, 3816, 5593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15533)
[0000][PE] mean and std.dev: (2999.20, 2311.77)
[0000][PE] low and high boundaries for proper pairs: (1, 20503)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1457, 1920, 3167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6587)
[0000][PE] mean and std.dev: (1635.80, 757.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 375.806 CPU sec, 21.043 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 521161, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 340, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (512.26, 497.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.61, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (442, 768, 6101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17419)
[0000][PE] mean and std.dev: (2651.60, 3069.89)
[0000][PE] low and high boundaries for proper pairs: (1, 23078)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 369.682 CPU sec, 20.653 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520508, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 265, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1462)
[0000][PE] mean and std.dev: (332.20, 345.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.481 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520709, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 210, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 834)
[0000][PE] mean and std.dev: (216.16, 121.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 375.973 CPU sec, 21.036 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520864, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 228, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 837)
[0000][PE] mean and std.dev: (236.59, 196.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.92, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 374.801 CPU sec, 20.969 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520373, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 286, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (263.95, 116.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 374.513 CPU sec, 20.975 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520481, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 219, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (201.13, 142.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 372.731 CPU sec, 20.875 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520359, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 348, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (381.19, 336.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 374.397 CPU sec, 21.002 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520866, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 236, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 940)
[0000][PE] mean and std.dev: (238.12, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 374.543 CPU sec, 20.965 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520755, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 330, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (615.28, 783.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (890, 1071, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (1254.60, 588.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4358)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 370.442 CPU sec, 20.720 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520644, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 295, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (246.63, 108.71)
[0000][PE] low and high boundaries for proper pairs: (1, 941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1549, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1914.27, 1096.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 372.930 CPU sec, 20.903 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520553, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 316, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (276.00, 169.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.34, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 374.615 CPU sec, 21.008 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520416, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 184, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (592.19, 763.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 372.591 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520730, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 350, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1008)
[0000][PE] mean and std.dev: (268.18, 132.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.65, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 370.061 CPU sec, 20.701 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520141, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 204, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1785)
[0000][PE] mean and std.dev: (290.24, 309.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 374.141 CPU sec, 20.907 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520514, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 344, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (889.86, 1066.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.66, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 796, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (716.11, 790.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 373.822 CPU sec, 20.967 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520791, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 354, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (750.22, 848.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.86, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 1129, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7008)
[0000][PE] mean and std.dev: (2080.40, 2129.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 371.858 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520611, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 272, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 718)
[0000][PE] mean and std.dev: (273.09, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 375.239 CPU sec, 21.000 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521024, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 307, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 885)
[0000][PE] mean and std.dev: (300.88, 152.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 369.878 CPU sec, 20.671 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520690, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 354, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (342.67, 226.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 371.043 CPU sec, 20.759 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520616, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 381, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (513.75, 373.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 370.160 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520649, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 297, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 780)
[0000][PE] mean and std.dev: (231.17, 103.26)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 373.392 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520743, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 356, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1242)
[0000][PE] mean and std.dev: (307.21, 130.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 371.170 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520686, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 197, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1181)
[0000][PE] mean and std.dev: (246.62, 214.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 372.509 CPU sec, 20.863 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520299, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 304, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (278.68, 210.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 372.406 CPU sec, 20.898 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520684, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 278, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (256.83, 130.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 372.112 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520629, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 308, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1103)
[0000][PE] mean and std.dev: (284.72, 123.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 375.372 CPU sec, 21.015 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520972, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 476, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (659.50, 624.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.339 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520152, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 328, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2668)
[0000][PE] mean and std.dev: (583.88, 619.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 2004, 3424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7638)
[0000][PE] mean and std.dev: (1857.55, 1068.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 372.223 CPU sec, 20.795 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520654, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 302, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (322.89, 263.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 372.970 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520836, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 381, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (520.76, 405.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 373.393 CPU sec, 20.975 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 521015, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 331, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1487)
[0000][PE] mean and std.dev: (382.52, 269.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1313, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1063.88, 540.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 372.154 CPU sec, 20.825 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520754, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 237, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 751)
[0000][PE] mean and std.dev: (243.46, 137.56)
[0000][PE] low and high boundaries for proper pairs: (1, 942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 2386, 5210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13716)
[0000][PE] mean and std.dev: (2902.67, 2470.66)
[0000][PE] low and high boundaries for proper pairs: (1, 17969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 373.857 CPU sec, 20.948 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520940, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 209, 398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 906)
[0000][PE] mean and std.dev: (229.44, 173.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2223, 2278, 4858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10128)
[0000][PE] mean and std.dev: (3298.91, 2149.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.843 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520758, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 310, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1096)
[0000][PE] mean and std.dev: (319.83, 209.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 372.042 CPU sec, 20.811 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519992, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 205, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (193.53, 112.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 375.156 CPU sec, 20.982 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520377, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 318, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 625)
[0000][PE] mean and std.dev: (258.47, 119.02)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 374.386 CPU sec, 20.948 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520397, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 186, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 787)
[0000][PE] mean and std.dev: (197.00, 110.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 374.755 CPU sec, 21.007 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520699, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 210, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 785)
[0000][PE] mean and std.dev: (213.21, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.46, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1918, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7565)
[0000][PE] mean and std.dev: (1800.44, 1096.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 375.175 CPU sec, 21.059 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520619, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 199, 276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 490)
[0000][PE] mean and std.dev: (189.82, 55.33)
[0000][PE] low and high boundaries for proper pairs: (1, 597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 372.328 CPU sec, 20.854 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520284, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 421, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1865)
[0000][PE] mean and std.dev: (461.40, 297.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 375.869 CPU sec, 21.090 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520178, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 343, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1037)
[0000][PE] mean and std.dev: (267.71, 116.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 373.057 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520537, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 209, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 636)
[0000][PE] mean and std.dev: (245.50, 109.06)
[0000][PE] low and high boundaries for proper pairs: (1, 787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 370.912 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520095, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 237, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 771)
[0000][PE] mean and std.dev: (193.25, 102.33)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.997 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520206, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 382, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2051)
[0000][PE] mean and std.dev: (391.27, 285.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1249, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1456.50, 856.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 373.848 CPU sec, 20.932 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520657, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 218, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 929)
[0000][PE] mean and std.dev: (252.92, 207.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1269, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1356.89, 888.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 370.984 CPU sec, 20.829 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520453, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 292, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (370.25, 425.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 372.330 CPU sec, 20.856 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520743, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 263, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 729)
[0000][PE] mean and std.dev: (251.64, 157.00)
[0000][PE] low and high boundaries for proper pairs: (1, 912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1443, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1229.13, 659.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 370.875 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520736, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 381, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (565.42, 545.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 372.662 CPU sec, 20.883 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520353, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 409, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (455.50, 328.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 372.305 CPU sec, 20.824 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520379, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 327, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (444.62, 447.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1482, 1772, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (480, 2985)
[0000][PE] mean and std.dev: (1634.33, 455.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 370.487 CPU sec, 20.720 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520437, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 299, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (281.26, 233.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 372.045 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520691, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 367, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1071)
[0000][PE] mean and std.dev: (333.05, 160.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (752, 1741, 4085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10751)
[0000][PE] mean and std.dev: (2730.00, 2542.56)
[0000][PE] low and high boundaries for proper pairs: (1, 14084)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1265, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1571.64, 972.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 370.394 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520695, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 342, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (301.68, 133.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1301, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8273)
[0000][PE] mean and std.dev: (2147.10, 1732.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 370.940 CPU sec, 20.737 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520232, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 296, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (251.05, 118.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1377, 4541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11437)
[0000][PE] mean and std.dev: (2599.00, 2086.90)
[0000][PE] low and high boundaries for proper pairs: (1, 14885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 372.044 CPU sec, 20.842 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520482, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 259, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (483.38, 660.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 371.829 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520830, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 336, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1154)
[0000][PE] mean and std.dev: (314.68, 208.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 373.165 CPU sec, 20.881 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521207, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 285, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (278.20, 170.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 371.285 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520440, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 311, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1326)
[0000][PE] mean and std.dev: (341.69, 305.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 371.272 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520588, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 317, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (621.67, 720.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 372.179 CPU sec, 20.807 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520344, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 415, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (573.85, 487.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 374.539 CPU sec, 20.959 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520243, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 205, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (426.33, 560.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1451, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (1315.36, 583.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 372.565 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520709, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 370, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1007)
[0000][PE] mean and std.dev: (286.93, 168.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 373.120 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 521048, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 339, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (712.48, 729.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 370.810 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520299, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 813, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1168.07, 1238.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 376.133 CPU sec, 21.013 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520175, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 228, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 815)
[0000][PE] mean and std.dev: (240.11, 126.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 1476, 3370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9500)
[0000][PE] mean and std.dev: (2123.00, 2376.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 371.371 CPU sec, 20.818 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520257, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 289, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (640.48, 603.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 373.604 CPU sec, 20.907 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520353, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 242, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1286)
[0000][PE] mean and std.dev: (272.17, 131.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1314, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1174.25, 490.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 373.732 CPU sec, 20.956 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520336, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 397, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (510.53, 429.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 372.669 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 521577, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 277, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (282.05, 208.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 371.025 CPU sec, 20.818 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520912, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 373, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1545)
[0000][PE] mean and std.dev: (487.06, 381.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 372.013 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520291, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 325, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1436)
[0000][PE] mean and std.dev: (428.89, 325.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 369.601 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520881, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 259, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 810)
[0000][PE] mean and std.dev: (278.89, 151.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.129 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520393, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 495, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (839.65, 905.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.46, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1735, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1784.50, 1072.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 375.175 CPU sec, 20.996 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520700, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 250, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1242)
[0000][PE] mean and std.dev: (277.24, 163.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 372.244 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520665, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 292, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 893)
[0000][PE] mean and std.dev: (238.22, 145.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 2980, 5137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13643)
[0000][PE] mean and std.dev: (3143.50, 2337.77)
[0000][PE] low and high boundaries for proper pairs: (1, 17896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 370.894 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519997, 13, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 317, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1639)
[0000][PE] mean and std.dev: (285.79, 169.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.64, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (614, 1034, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (1024.55, 640.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7346)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 375.453 CPU sec, 21.044 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520925, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 312, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1556)
[0000][PE] mean and std.dev: (429.62, 384.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 369.155 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520404, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 342, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (461.16, 403.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 373.731 CPU sec, 20.932 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520656, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 801, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (976.94, 959.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.48, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 371.012 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520629, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 285, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1153)
[0000][PE] mean and std.dev: (300.48, 219.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 1145, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9016)
[0000][PE] mean and std.dev: (1664.40, 1759.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11924)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 370.209 CPU sec, 20.712 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520306, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 310, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (254.45, 95.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1627, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1647.00, 999.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 371.569 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520177, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 319, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1350)
[0000][PE] mean and std.dev: (287.06, 221.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 374.229 CPU sec, 20.949 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521135, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 320, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (569.69, 630.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 370.451 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520796, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 425, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1135.90, 1348.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (636, 1263, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1498.91, 1228.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1309, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 2329)
[0000][PE] mean and std.dev: (1058.38, 331.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 369.052 CPU sec, 20.673 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520519, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 285, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1137)
[0000][PE] mean and std.dev: (303.32, 166.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 371.103 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520760, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 272, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (689.94, 956.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1202, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1400.08, 892.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 372.127 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520333, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 411, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1136.23, 1311.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.379 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520552, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 326, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 820)
[0000][PE] mean and std.dev: (267.47, 87.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 371.156 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520335, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 275, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 676)
[0000][PE] mean and std.dev: (236.89, 112.84)
[0000][PE] low and high boundaries for proper pairs: (1, 838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1141, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6019)
[0000][PE] mean and std.dev: (1486.73, 999.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 372.179 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520266, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 375, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1739)
[0000][PE] mean and std.dev: (326.47, 217.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 369.450 CPU sec, 20.684 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520747, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 385, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (721.81, 805.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 368.539 CPU sec, 20.625 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520743, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 351, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8163)
[0000][PE] mean and std.dev: (1415.31, 1449.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 370.736 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520899, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 229, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (310.50, 210.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1271, 3454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8540)
[0000][PE] mean and std.dev: (1925.18, 1709.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 368.981 CPU sec, 20.674 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520682, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 299, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (272.90, 159.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 371.908 CPU sec, 20.825 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520499, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 324, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1582)
[0000][PE] mean and std.dev: (387.09, 322.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 370.482 CPU sec, 20.734 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520423, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 204, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1328)
[0000][PE] mean and std.dev: (280.29, 220.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.66, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1122, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1148.50, 501.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 369.640 CPU sec, 20.718 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520558, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 228, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1314)
[0000][PE] mean and std.dev: (345.42, 311.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 371.386 CPU sec, 20.760 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520441, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 351, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (819.67, 822.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 372.817 CPU sec, 20.894 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520219, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 359, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (497.73, 465.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1474, 5595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14463)
[0000][PE] mean and std.dev: (3025.91, 2330.17)
[0000][PE] low and high boundaries for proper pairs: (1, 18897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 372.727 CPU sec, 20.850 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520099, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 335, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1195)
[0000][PE] mean and std.dev: (287.33, 183.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 372.855 CPU sec, 20.892 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520069, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 378, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (788.32, 814.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 372.807 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520462, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 293, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 724)
[0000][PE] mean and std.dev: (248.56, 105.01)
[0000][PE] low and high boundaries for proper pairs: (1, 902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 372.180 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520507, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 285, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 873)
[0000][PE] mean and std.dev: (252.41, 159.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1124, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6419)
[0000][PE] mean and std.dev: (1584.44, 1442.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 370.409 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520690, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 418, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (696.69, 744.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 372.367 CPU sec, 20.829 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520831, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 208, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 803)
[0000][PE] mean and std.dev: (218.62, 114.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.62, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (301, 769, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5218)
[0000][PE] mean and std.dev: (667.12, 641.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 370.707 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520517, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 307, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (477.79, 486.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.150 CPU sec, 20.701 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520438, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 199, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (209.71, 173.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 374.612 CPU sec, 20.956 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520411, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 344, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (311.00, 252.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 1622, 3790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8896)
[0000][PE] mean and std.dev: (2302.50, 1992.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 372.289 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520588, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 562, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (834.57, 889.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 372.144 CPU sec, 20.842 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520749, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 308, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1049)
[0000][PE] mean and std.dev: (279.22, 162.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 371.241 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520827, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 258, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1019)
[0000][PE] mean and std.dev: (241.18, 136.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.01, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 371.719 CPU sec, 20.807 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521035, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 292, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 724)
[0000][PE] mean and std.dev: (285.65, 132.82)
[0000][PE] low and high boundaries for proper pairs: (1, 899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 371.430 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520994, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 274, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (415.40, 413.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.67, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 368.656 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520770, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 437, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6593)
[0000][PE] mean and std.dev: (977.39, 1331.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 370.622 CPU sec, 20.756 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520756, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 209, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (229.43, 112.19)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1587, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7560)
[0000][PE] mean and std.dev: (2288.20, 1843.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 370.401 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520913, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 224, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (282.13, 179.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1338, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6140)
[0000][PE] mean and std.dev: (1701.30, 1194.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 371.440 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520120, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 363, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (572.96, 542.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 372.590 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520316, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 525, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1047.53, 1049.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 373.141 CPU sec, 20.851 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520431, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 317, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 882)
[0000][PE] mean and std.dev: (239.71, 99.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1668, 4028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9748)
[0000][PE] mean and std.dev: (2725.91, 2493.89)
[0000][PE] low and high boundaries for proper pairs: (1, 12701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 371.772 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520591, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 308, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (365.12, 281.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 369.134 CPU sec, 20.662 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520544, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 304, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (455.94, 441.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 375.006 CPU sec, 21.009 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520812, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 203, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 707)
[0000][PE] mean and std.dev: (215.78, 133.67)
[0000][PE] low and high boundaries for proper pairs: (1, 898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 2235, 5179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13661)
[0000][PE] mean and std.dev: (2888.36, 2460.13)
[0000][PE] low and high boundaries for proper pairs: (1, 17902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 370.643 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519991, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 363, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (418.28, 299.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 372.445 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521074, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 318, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1544)
[0000][PE] mean and std.dev: (336.90, 347.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 371.199 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520907, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 208, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (234.75, 131.02)
[0000][PE] low and high boundaries for proper pairs: (1, 928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.37, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 374.056 CPU sec, 20.992 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520575, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 370, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (447.06, 491.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1384, 5236, 7530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19822)
[0000][PE] mean and std.dev: (4324.64, 3324.26)
[0000][PE] low and high boundaries for proper pairs: (1, 25968)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 370.321 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520436, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 204, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (654.59, 750.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (723, 1156, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1566.25, 1725.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8469)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 372.489 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520080, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 277, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1542)
[0000][PE] mean and std.dev: (313.84, 235.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 372.866 CPU sec, 20.881 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520675, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 249, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 749)
[0000][PE] mean and std.dev: (238.58, 112.35)
[0000][PE] low and high boundaries for proper pairs: (1, 939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.49, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 372.314 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520956, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 321, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (927.38, 1097.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (73, 759, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6520)
[0000][PE] mean and std.dev: (1105.22, 1308.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8669)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 367.626 CPU sec, 20.575 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520472, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 247, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (241.85, 135.08)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 368.427 CPU sec, 20.612 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520183, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 187, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1070)
[0000][PE] mean and std.dev: (254.84, 168.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 371.842 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520717, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 370, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1640)
[0000][PE] mean and std.dev: (551.77, 369.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1559, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6741)
[0000][PE] mean and std.dev: (2190.00, 1773.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 370.837 CPU sec, 20.723 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520568, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 290, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (449.33, 462.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 372.609 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520000, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 468, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (542.55, 353.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 375.003 CPU sec, 21.015 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520155, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 342, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 830)
[0000][PE] mean and std.dev: (267.22, 119.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 2821, 5274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13292)
[0000][PE] mean and std.dev: (3137.75, 2257.61)
[0000][PE] low and high boundaries for proper pairs: (1, 17301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 372.851 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520211, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 264, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (259.12, 132.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 368.494 CPU sec, 20.622 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520131, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 327, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1984)
[0000][PE] mean and std.dev: (391.74, 337.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 377.189 CPU sec, 21.208 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521187, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 349, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1928)
[0000][PE] mean and std.dev: (429.16, 359.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 369.293 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520449, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 279, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1960)
[0000][PE] mean and std.dev: (391.11, 390.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.80, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 374.548 CPU sec, 21.012 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520490, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 353, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (681.62, 680.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 372.801 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520516, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 330, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (474.38, 519.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 371.124 CPU sec, 20.830 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520414, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (75, 237, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (426.27, 601.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 371.334 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520712, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 380, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (574.47, 725.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.60, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 371.220 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520460, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 276, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1027)
[0000][PE] mean and std.dev: (300.39, 209.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1354, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1374.60, 929.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 372.168 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520239, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 390, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1139)
[0000][PE] mean and std.dev: (307.12, 155.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 371.279 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520789, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 372, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1494)
[0000][PE] mean and std.dev: (410.25, 291.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.89, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 372.522 CPU sec, 20.817 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520595, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 344, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (537.65, 634.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 372.459 CPU sec, 20.855 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520369, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 249, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (284.00, 268.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.872 CPU sec, 20.957 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520686, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 290, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 893)
[0000][PE] mean and std.dev: (283.41, 151.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1191, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5981)
[0000][PE] mean and std.dev: (1404.50, 1018.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 370.637 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520690, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 284, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 924)
[0000][PE] mean and std.dev: (284.15, 156.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (321, 2231, 5587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16119)
[0000][PE] mean and std.dev: (2884.64, 3003.02)
[0000][PE] low and high boundaries for proper pairs: (1, 21385)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 371.658 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520436, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 189, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (578.76, 639.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 370.844 CPU sec, 20.765 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520287, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 346, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1694)
[0000][PE] mean and std.dev: (490.15, 436.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 373.570 CPU sec, 20.940 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520635, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 275, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3007)
[0000][PE] mean and std.dev: (587.84, 679.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 369.529 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520652, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 221, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (246.69, 104.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 373.793 CPU sec, 20.919 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520849, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (87, 262, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (242.89, 186.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.64, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1576, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1547.56, 982.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 369.507 CPU sec, 20.678 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520676, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 209, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 885)
[0000][PE] mean and std.dev: (235.71, 132.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 367.892 CPU sec, 20.571 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520737, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 318, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (555.72, 605.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 372.203 CPU sec, 20.831 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520679, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 282, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (566.67, 725.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1528, 3180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8080)
[0000][PE] mean and std.dev: (2627.90, 2651.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 369.080 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520477, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 221, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (260.84, 196.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.258 CPU sec, 20.819 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520007, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 341, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2147)
[0000][PE] mean and std.dev: (540.62, 502.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 376.210 CPU sec, 21.043 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520654, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 288, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 924)
[0000][PE] mean and std.dev: (296.53, 174.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 370.099 CPU sec, 20.736 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520524, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 329, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1485)
[0000][PE] mean and std.dev: (358.48, 305.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 370.280 CPU sec, 20.690 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520423, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 371, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (527.07, 506.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.96, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 372.998 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520838, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (88, 267, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1258)
[0000][PE] mean and std.dev: (293.70, 296.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1779, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (1484.00, 992.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 369.970 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520228, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 384, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (434.19, 381.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 371.987 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520655, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 275, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (242.94, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 371.599 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520337, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 274, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (337.40, 241.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.108 CPU sec, 20.963 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520764, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 343, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (741.36, 894.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.21, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1734, 1900, 3711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7665)
[0000][PE] mean and std.dev: (2532.64, 1814.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 372.333 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520764, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 333, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2383)
[0000][PE] mean and std.dev: (579.00, 549.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 995, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1307.83, 984.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 372.203 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520404, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 225, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (318.52, 252.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 373.191 CPU sec, 20.868 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520101, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 214, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (235.28, 139.30)
[0000][PE] low and high boundaries for proper pairs: (1, 925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 371.468 CPU sec, 20.777 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520725, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 263, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 828)
[0000][PE] mean and std.dev: (226.00, 132.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 369.526 CPU sec, 20.718 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520307, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 242, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 615)
[0000][PE] mean and std.dev: (187.40, 88.99)
[0000][PE] low and high boundaries for proper pairs: (1, 785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.62, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1990, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6987)
[0000][PE] mean and std.dev: (1849.11, 1214.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 369.972 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520429, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 388, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1264)
[0000][PE] mean and std.dev: (372.00, 266.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 368.813 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520958, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 214, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 827)
[0000][PE] mean and std.dev: (233.94, 137.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 372.161 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520342, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 536, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (725.45, 627.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1239, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (1249.73, 620.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 374.405 CPU sec, 20.938 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520199, 2, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 239, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 788)
[0000][PE] mean and std.dev: (248.58, 104.46)
[0000][PE] low and high boundaries for proper pairs: (1, 985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 373.690 CPU sec, 20.939 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520570, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 342, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1087)
[0000][PE] mean and std.dev: (298.88, 188.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 372.453 CPU sec, 20.819 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520451, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 303, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1725)
[0000][PE] mean and std.dev: (384.86, 283.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 370.245 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520359, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 270, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (591.22, 739.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 372.625 CPU sec, 20.874 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520481, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 198, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1272)
[0000][PE] mean and std.dev: (316.56, 258.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 373.480 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520408, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 304, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 736)
[0000][PE] mean and std.dev: (255.22, 85.56)
[0000][PE] low and high boundaries for proper pairs: (1, 907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 371.288 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520558, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 330, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 926)
[0000][PE] mean and std.dev: (278.88, 113.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1218, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1443.00, 1171.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 370.182 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520779, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 326, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (698.25, 725.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 370.400 CPU sec, 20.706 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520620, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 301, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (585.52, 730.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 370.654 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520420, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 337, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (486.52, 432.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 372.844 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520393, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 338, 3994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11616)
[0000][PE] mean and std.dev: (1649.29, 2160.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 371.917 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520567, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 370, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (705.87, 686.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (466, 899, 3694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10150)
[0000][PE] mean and std.dev: (2035.10, 2238.46)
[0000][PE] low and high boundaries for proper pairs: (1, 13378)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 373.215 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520760, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 369, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1779)
[0000][PE] mean and std.dev: (478.08, 341.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 2056, 4256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11030)
[0000][PE] mean and std.dev: (2149.30, 1585.12)
[0000][PE] low and high boundaries for proper pairs: (1, 14417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 371.611 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520747, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 344, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (597.36, 653.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 372.634 CPU sec, 20.835 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520341, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 191, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (197.57, 107.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 370.854 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520637, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 353, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2391)
[0000][PE] mean and std.dev: (567.54, 596.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1505, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7966)
[0000][PE] mean and std.dev: (2006.55, 1878.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 370.567 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520151, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 226, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (216.53, 115.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 372.958 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520497, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 353, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1601)
[0000][PE] mean and std.dev: (400.38, 314.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 373.450 CPU sec, 20.897 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520594, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 372, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (895.80, 1276.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.597 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520282, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 368, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2062)
[0000][PE] mean and std.dev: (485.70, 401.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.950 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520709, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 251, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1418)
[0000][PE] mean and std.dev: (355.24, 296.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 370.086 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000194 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520665, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 396, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (430.54, 300.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 377.177 CPU sec, 21.089 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520469, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 211, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 667)
[0000][PE] mean and std.dev: (227.86, 93.16)
[0000][PE] low and high boundaries for proper pairs: (1, 825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.915 CPU sec, 20.870 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519796, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 316, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (543.09, 531.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 368.734 CPU sec, 20.630 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520680, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 299, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (737.38, 934.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 369.242 CPU sec, 20.712 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520302, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 334, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (356.62, 302.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1892, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1519.22, 722.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 367.358 CPU sec, 20.562 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520808, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 196, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (425.79, 500.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1180, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (1124.11, 455.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 369.207 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520977, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 268, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (425.88, 459.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 366.029 CPU sec, 20.494 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520174, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 297, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1637)
[0000][PE] mean and std.dev: (392.42, 303.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 370.505 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520521, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 215, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1155)
[0000][PE] mean and std.dev: (245.11, 176.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1554, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6790)
[0000][PE] mean and std.dev: (1794.60, 912.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 368.719 CPU sec, 20.664 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520530, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 317, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 784)
[0000][PE] mean and std.dev: (266.72, 144.20)
[0000][PE] low and high boundaries for proper pairs: (1, 981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.14, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 371.446 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520104, 7, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 336, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (656.11, 761.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 371.897 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000186 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520359, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 284, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (436.86, 403.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1438, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1479.50, 738.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 376.624 CPU sec, 21.088 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520387, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 341, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1738)
[0000][PE] mean and std.dev: (462.22, 444.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1954, 3490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8624)
[0000][PE] mean and std.dev: (2214.07, 1587.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 370.236 CPU sec, 20.700 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520856, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 190, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1121)
[0000][PE] mean and std.dev: (245.39, 200.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.97, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 371.964 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520273, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 376, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1742)
[0000][PE] mean and std.dev: (405.55, 310.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (476, 985, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1407.36, 1245.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 370.921 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520539, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 468, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (627.14, 555.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 371.393 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520309, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 339, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2025)
[0000][PE] mean and std.dev: (410.00, 434.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 368.644 CPU sec, 20.660 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520444, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 347, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1102)
[0000][PE] mean and std.dev: (333.86, 217.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (328, 747, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (896.73, 813.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 929, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (1064.18, 500.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 370.258 CPU sec, 20.729 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520848, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 292, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1764)
[0000][PE] mean and std.dev: (338.44, 280.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 369.825 CPU sec, 20.690 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520703, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 725, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (814.00, 847.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 371.510 CPU sec, 20.831 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520312, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 288, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1013)
[0000][PE] mean and std.dev: (278.03, 180.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 366.911 CPU sec, 20.521 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 521148, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 284, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2341)
[0000][PE] mean and std.dev: (451.30, 544.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 368.959 CPU sec, 20.621 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520791, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 334, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (437.68, 402.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1439, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1508.40, 615.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 369.727 CPU sec, 20.729 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520752, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 252, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1396)
[0000][PE] mean and std.dev: (364.08, 303.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 369.406 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520426, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 336, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 867)
[0000][PE] mean and std.dev: (264.92, 106.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1365, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (301, 2496)
[0000][PE] mean and std.dev: (1330.12, 406.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 371.002 CPU sec, 20.757 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520219, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 217, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 848)
[0000][PE] mean and std.dev: (232.12, 122.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 370.594 CPU sec, 20.753 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520450, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 192, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 744)
[0000][PE] mean and std.dev: (244.24, 142.84)
[0000][PE] low and high boundaries for proper pairs: (1, 931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 370.394 CPU sec, 20.731 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520152, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 249, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (893.35, 1131.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 372.237 CPU sec, 20.809 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520503, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 396, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (719.35, 893.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.17, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 365.245 CPU sec, 20.439 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520595, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 251, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (428.96, 441.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 365.018 CPU sec, 20.418 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520183, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 354, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 777)
[0000][PE] mean and std.dev: (299.90, 116.08)
[0000][PE] low and high boundaries for proper pairs: (1, 951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 372.505 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520375, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 195, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1367)
[0000][PE] mean and std.dev: (300.86, 333.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 369.451 CPU sec, 20.732 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520600, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 315, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (299.88, 158.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 368.094 CPU sec, 20.653 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520101, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 355, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (444.67, 415.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 366.539 CPU sec, 20.518 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520513, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 356, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (337.57, 256.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1345, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1261.80, 433.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 371.794 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520489, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 263, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (300.00, 214.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 369.737 CPU sec, 20.679 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520635, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 307, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1292)
[0000][PE] mean and std.dev: (407.43, 279.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1394, 2970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6462)
[0000][PE] mean and std.dev: (1829.08, 1004.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.636 CPU sec, 20.707 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520041, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 319, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (292.00, 225.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 369.949 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520461, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 218, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (239.56, 151.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1235, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2439)
[0000][PE] mean and std.dev: (1096.67, 325.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 373.548 CPU sec, 21.008 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520837, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 408, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (526.93, 453.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1047, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1363.30, 887.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 367.578 CPU sec, 20.572 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520410, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 364, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2013)
[0000][PE] mean and std.dev: (511.00, 538.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (286, 1110, 5420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15688)
[0000][PE] mean and std.dev: (2257.55, 2778.20)
[0000][PE] low and high boundaries for proper pairs: (1, 20822)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 370.165 CPU sec, 20.726 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520212, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 377, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (776.45, 864.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (468, 1660, 4306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11982)
[0000][PE] mean and std.dev: (2372.69, 2302.98)
[0000][PE] low and high boundaries for proper pairs: (1, 15820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 370.943 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520345, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 354, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (616.95, 532.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 369.926 CPU sec, 20.720 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521113, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 312, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (483.36, 394.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 370.357 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520442, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 385, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (685.90, 699.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 369.334 CPU sec, 20.642 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520693, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 259, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1006)
[0000][PE] mean and std.dev: (276.75, 178.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1387, 4143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10075)
[0000][PE] mean and std.dev: (2207.91, 1627.88)
[0000][PE] low and high boundaries for proper pairs: (1, 13041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 368.871 CPU sec, 20.632 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520821, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 289, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (278.67, 113.03)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (330, 945, 3224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9012)
[0000][PE] mean and std.dev: (1238.89, 1293.53)
[0000][PE] low and high boundaries for proper pairs: (1, 11906)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 369.804 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520728, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 266, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (480.82, 614.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 368.935 CPU sec, 20.795 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520728, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 181, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 689)
[0000][PE] mean and std.dev: (188.89, 94.69)
[0000][PE] low and high boundaries for proper pairs: (1, 871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.09, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 369.842 CPU sec, 20.719 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521208, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 261, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1891)
[0000][PE] mean and std.dev: (444.31, 436.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 367.499 CPU sec, 20.558 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520575, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 320, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1320)
[0000][PE] mean and std.dev: (352.65, 298.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 370.800 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520317, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 279, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 781)
[0000][PE] mean and std.dev: (292.67, 179.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.43, 119.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1732, 2274, 3707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7657)
[0000][PE] mean and std.dev: (2450.14, 1814.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.484 CPU sec, 20.931 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520626, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 360, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (624.70, 689.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 370.559 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520784, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 251, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (529.50, 581.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 369.431 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520466, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 213, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 878)
[0000][PE] mean and std.dev: (266.32, 203.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 368.788 CPU sec, 20.684 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520037, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 317, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (706.17, 740.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.41, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 371.872 CPU sec, 20.830 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520653, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 370, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (252.25, 128.07)
[0000][PE] low and high boundaries for proper pairs: (1, 994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (303, 884, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1320.00, 1267.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7171)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 368.855 CPU sec, 20.640 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520268, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 296, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1031)
[0000][PE] mean and std.dev: (253.67, 136.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 370.238 CPU sec, 20.729 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520271, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 298, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (406.72, 364.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.48, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 368.600 CPU sec, 20.606 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520564, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 230, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 812)
[0000][PE] mean and std.dev: (201.95, 114.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1611, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1236.22, 597.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 368.344 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520857, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 198, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 698)
[0000][PE] mean and std.dev: (197.21, 96.49)
[0000][PE] low and high boundaries for proper pairs: (1, 881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 371.353 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520646, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 202, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (540.74, 606.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 368.618 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520639, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 200, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 921)
[0000][PE] mean and std.dev: (245.44, 184.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 1137, 4085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11737)
[0000][PE] mean and std.dev: (1882.73, 1825.49)
[0000][PE] low and high boundaries for proper pairs: (1, 15563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 370.383 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520385, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 291, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (352.93, 260.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 369.022 CPU sec, 20.642 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520876, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 195, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (198.68, 85.53)
[0000][PE] low and high boundaries for proper pairs: (1, 874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.37, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1337, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (1015.67, 509.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 368.502 CPU sec, 20.620 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521180, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 293, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1251)
[0000][PE] mean and std.dev: (367.50, 287.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 368.957 CPU sec, 20.685 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520230, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 267, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (405.50, 437.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 370.391 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520492, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 230, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 985)
[0000][PE] mean and std.dev: (268.84, 183.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 369.631 CPU sec, 20.687 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520442, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 280, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 798)
[0000][PE] mean and std.dev: (259.46, 133.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 372.549 CPU sec, 20.898 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520698, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 234, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (482.78, 571.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 371.013 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520526, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (88, 223, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1063)
[0000][PE] mean and std.dev: (268.21, 213.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 368.361 CPU sec, 20.647 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520393, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 209, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 675)
[0000][PE] mean and std.dev: (237.54, 92.70)
[0000][PE] low and high boundaries for proper pairs: (1, 837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 369.592 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520894, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 264, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 889)
[0000][PE] mean and std.dev: (273.10, 158.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 372.084 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519980, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 482, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (685.42, 649.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 374.720 CPU sec, 21.043 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520500, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 276, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 690)
[0000][PE] mean and std.dev: (264.35, 129.64)
[0000][PE] low and high boundaries for proper pairs: (1, 859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1529, 3855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9457)
[0000][PE] mean and std.dev: (2232.58, 1915.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 369.402 CPU sec, 20.675 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520580, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 452, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (649.05, 579.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 370.202 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520228, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 388, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (844.12, 819.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 370.550 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520723, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 428, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (438.80, 231.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.64, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 372.431 CPU sec, 20.859 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520406, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 184, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 811)
[0000][PE] mean and std.dev: (194.93, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 371.174 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520479, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 314, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (394.55, 323.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (189, 193, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (345.33, 345.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 368.380 CPU sec, 20.600 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520842, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 332, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1056)
[0000][PE] mean and std.dev: (305.08, 133.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1555, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (1368.22, 490.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 369.545 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520462, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 196, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 754)
[0000][PE] mean and std.dev: (213.35, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1457, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1382.11, 776.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 368.266 CPU sec, 20.603 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520024, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 337, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (497.21, 463.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1647, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (1522.67, 770.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 371.260 CPU sec, 20.798 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520908, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 213, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1701)
[0000][PE] mean and std.dev: (264.14, 173.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 367.812 CPU sec, 20.573 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520851, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 318, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (539.00, 592.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1530, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (1444.09, 479.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 369.035 CPU sec, 20.645 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520240, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 332, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (412.70, 338.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (641, 1539, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1340.11, 950.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 369.740 CPU sec, 20.720 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520769, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (78, 205, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2799)
[0000][PE] mean and std.dev: (451.09, 601.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 367.698 CPU sec, 20.608 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520621, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 621, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (850.56, 755.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1585, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6852)
[0000][PE] mean and std.dev: (1405.45, 1111.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 369.116 CPU sec, 20.688 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520281, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 349, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (399.11, 432.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 938, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1150.00, 764.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 373.117 CPU sec, 20.983 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520844, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 227, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1096)
[0000][PE] mean and std.dev: (257.93, 175.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1436, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1262.90, 705.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 369.822 CPU sec, 20.709 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520694, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 305, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1547)
[0000][PE] mean and std.dev: (361.42, 321.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 368.593 CPU sec, 20.615 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 521105, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 340, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1177)
[0000][PE] mean and std.dev: (362.78, 228.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 367.903 CPU sec, 20.622 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521303, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 187, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1178)
[0000][PE] mean and std.dev: (321.00, 281.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 364.716 CPU sec, 20.422 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520377, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 337, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1009)
[0000][PE] mean and std.dev: (287.52, 188.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 370.074 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520540, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 288, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (449.60, 431.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 247, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1778)
[0000][PE] mean and std.dev: (317.10, 272.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1337, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (1103.12, 428.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 367.819 CPU sec, 20.634 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520293, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 254, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (482.96, 531.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 371.566 CPU sec, 20.797 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521204, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 319, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1034)
[0000][PE] mean and std.dev: (266.50, 148.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 365.458 CPU sec, 20.429 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520343, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 196, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (237.55, 205.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 119.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 370.828 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520942, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 452, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (983.28, 1106.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 369.145 CPU sec, 20.680 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521219, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 386, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2318)
[0000][PE] mean and std.dev: (545.48, 481.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 367.162 CPU sec, 20.551 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520359, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 337, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (391.12, 384.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 371.358 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520239, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 198, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (208.16, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.382 CPU sec, 20.777 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521107, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 324, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (551.14, 531.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 367.588 CPU sec, 20.572 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520609, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 334, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (433.53, 349.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 371.274 CPU sec, 20.865 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520649, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 201, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 883)
[0000][PE] mean and std.dev: (229.79, 163.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 368.848 CPU sec, 20.663 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520683, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 365, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (428.87, 486.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 370.261 CPU sec, 20.718 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520816, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 283, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1546)
[0000][PE] mean and std.dev: (323.97, 272.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 368.344 CPU sec, 20.610 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520517, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 248, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (375.05, 448.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1759, 2026, 3505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6997)
[0000][PE] mean and std.dev: (2107.00, 632.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 368.922 CPU sec, 20.644 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 521097, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 361, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (425.79, 355.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 368.335 CPU sec, 20.606 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520408, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 207, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1633)
[0000][PE] mean and std.dev: (323.25, 362.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (841, 1894, 4835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12823)
[0000][PE] mean and std.dev: (2815.90, 2698.98)
[0000][PE] low and high boundaries for proper pairs: (1, 16817)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 373.243 CPU sec, 20.920 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520133, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 281, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (516.63, 591.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.68, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 370.079 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520588, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 218, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (435.35, 451.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 368.878 CPU sec, 20.707 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520057, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 195, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 964)
[0000][PE] mean and std.dev: (245.59, 188.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 373.528 CPU sec, 20.913 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520439, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 373, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (539.34, 468.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 370.628 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520461, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 319, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 549)
[0000][PE] mean and std.dev: (303.45, 48.85)
[0000][PE] low and high boundaries for proper pairs: (33, 635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1486, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6672)
[0000][PE] mean and std.dev: (1801.93, 1035.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 367.915 CPU sec, 20.577 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520582, 10, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 350, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (607.04, 636.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1245, 3130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8566)
[0000][PE] mean and std.dev: (1802.20, 1783.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11284)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 370.871 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520731, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 369, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (807.50, 952.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 371.055 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520544, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 332, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7031)
[0000][PE] mean and std.dev: (1081.12, 1585.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 370.832 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520007, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 288, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 953)
[0000][PE] mean and std.dev: (288.26, 176.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 375.026 CPU sec, 21.044 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520968, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 293, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 738)
[0000][PE] mean and std.dev: (264.56, 108.05)
[0000][PE] low and high boundaries for proper pairs: (1, 909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 370.292 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520921, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 354, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (460.53, 511.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 367.587 CPU sec, 20.570 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520597, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 393, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (377.52, 257.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 371.226 CPU sec, 20.757 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520538, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 314, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1629)
[0000][PE] mean and std.dev: (466.50, 426.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 370.308 CPU sec, 20.726 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520366, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 351, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (590.20, 683.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 370.816 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520508, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 190, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (387.10, 406.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 369.542 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520888, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 314, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6543)
[0000][PE] mean and std.dev: (1106.18, 1525.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.61, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 368.036 CPU sec, 20.619 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520882, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 347, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (586.89, 714.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 372.286 CPU sec, 20.845 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520251, 11, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 386, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1790)
[0000][PE] mean and std.dev: (450.12, 371.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (965, 1466, 7941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21893)
[0000][PE] mean and std.dev: (3658.91, 3680.58)
[0000][PE] low and high boundaries for proper pairs: (1, 28869)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.287 CPU sec, 20.752 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520537, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 341, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (706.85, 726.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 371.411 CPU sec, 20.850 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520345, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 210, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (196.93, 71.96)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 369.080 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520131, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 400, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7054)
[0000][PE] mean and std.dev: (1265.31, 1381.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 371.601 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520359, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 263, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1034)
[0000][PE] mean and std.dev: (302.29, 208.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 372.609 CPU sec, 20.861 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520391, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 356, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (493.68, 431.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1123, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (1197.40, 611.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 370.900 CPU sec, 20.734 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520741, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 389, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2062)
[0000][PE] mean and std.dev: (505.82, 468.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 2311, 3416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8146)
[0000][PE] mean and std.dev: (2376.50, 2030.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 372.585 CPU sec, 20.861 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520837, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 265, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (278.07, 211.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 369.517 CPU sec, 20.659 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520463, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 315, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1146)
[0000][PE] mean and std.dev: (335.00, 233.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.70, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1816, 3372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7650)
[0000][PE] mean and std.dev: (2434.10, 1483.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 369.265 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520504, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 223, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (697.42, 708.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1362, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1338.00, 738.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 368.353 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520237, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 186, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (229.04, 103.23)
[0000][PE] low and high boundaries for proper pairs: (1, 956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1154, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1419.73, 975.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 370.677 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520563, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 361, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1161)
[0000][PE] mean and std.dev: (350.38, 272.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.13, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1211, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (1345.67, 1092.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 370.673 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520814, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 251, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1012)
[0000][PE] mean and std.dev: (290.38, 217.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 368.663 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520359, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 285, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 725)
[0000][PE] mean and std.dev: (288.59, 92.84)
[0000][PE] low and high boundaries for proper pairs: (1, 897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 371.873 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520790, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 343, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (253.29, 128.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 370.580 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520233, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 480, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (909.00, 948.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 367.997 CPU sec, 20.627 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520380, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 271, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1007)
[0000][PE] mean and std.dev: (294.40, 213.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 2330, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6982)
[0000][PE] mean and std.dev: (1970.67, 985.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 371.242 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520319, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 305, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1956)
[0000][PE] mean and std.dev: (464.63, 489.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 368.092 CPU sec, 20.638 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520363, 4, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 257, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (400.45, 432.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 370.848 CPU sec, 20.761 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520753, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 527, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (939.62, 977.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1254, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1224.56, 750.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 365.210 CPU sec, 20.422 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520570, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 205, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 871)
[0000][PE] mean and std.dev: (223.69, 98.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1383, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (1084.00, 481.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 371.268 CPU sec, 20.739 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520837, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 197, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 706)
[0000][PE] mean and std.dev: (203.54, 94.12)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 367.582 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520639, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 345, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (726.14, 774.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 371.634 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520871, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 479, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (528.43, 530.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 367.868 CPU sec, 20.590 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520879, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 292, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (460.52, 445.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 370.446 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520561, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 297, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (544.50, 740.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 369.733 CPU sec, 20.674 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520671, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 337, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1346)
[0000][PE] mean and std.dev: (364.55, 235.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 2461, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7441)
[0000][PE] mean and std.dev: (2262.90, 1574.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 371.248 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520974, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 331, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 781)
[0000][PE] mean and std.dev: (280.61, 148.30)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 371.451 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520782, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 325, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1135)
[0000][PE] mean and std.dev: (377.21, 236.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 368.773 CPU sec, 20.657 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520979, 13, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 229, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 740)
[0000][PE] mean and std.dev: (241.89, 104.05)
[0000][PE] low and high boundaries for proper pairs: (1, 929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (954, 2153, 5585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14847)
[0000][PE] mean and std.dev: (2969.46, 2279.59)
[0000][PE] low and high boundaries for proper pairs: (1, 19478)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1327, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (1235.09, 553.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 367.562 CPU sec, 20.566 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520565, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 360, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1723)
[0000][PE] mean and std.dev: (347.33, 250.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 373.278 CPU sec, 20.924 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520236, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 436, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (832.37, 898.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1817, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6769)
[0000][PE] mean and std.dev: (1938.09, 1042.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 371.683 CPU sec, 20.811 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520941, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 335, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2040)
[0000][PE] mean and std.dev: (502.50, 465.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 371.814 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520394, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 421, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (517.17, 419.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 368.719 CPU sec, 20.628 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520604, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 503, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (725.26, 687.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 367.340 CPU sec, 20.631 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520559, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 230, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 877)
[0000][PE] mean and std.dev: (253.00, 135.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (260, 1019, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6578)
[0000][PE] mean and std.dev: (1621.83, 1944.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 369.682 CPU sec, 20.681 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520495, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 218, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1051)
[0000][PE] mean and std.dev: (252.84, 197.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 369.524 CPU sec, 20.660 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520421, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 370, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (696.48, 789.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 369.297 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520614, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 371, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (375.95, 244.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 372.285 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520555, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 353, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1655)
[0000][PE] mean and std.dev: (413.60, 288.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 371.125 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520429, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 311, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 886)
[0000][PE] mean and std.dev: (294.83, 140.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 2038, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (2169.00, 1544.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 371.647 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520361, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 345, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (597.22, 617.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 370.095 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520352, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 199, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (753.20, 1059.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.66, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 369.106 CPU sec, 20.669 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520618, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 214, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (242.24, 161.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.94, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 369.319 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520482, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 305, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (301.28, 192.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.17, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 368.639 CPU sec, 20.644 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521106, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 170, 248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 492)
[0000][PE] mean and std.dev: (171.09, 93.31)
[0000][PE] low and high boundaries for proper pairs: (1, 614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 366.489 CPU sec, 20.497 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520512, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 271, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1038)
[0000][PE] mean and std.dev: (233.80, 109.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 648, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (718.22, 329.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.562 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520988, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 267, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (561.48, 669.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 371.981 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520384, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 383, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1047)
[0000][PE] mean and std.dev: (299.76, 128.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 367.749 CPU sec, 20.580 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520530, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 317, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (249.74, 115.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1099, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1321.30, 919.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 369.881 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520532, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 265, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1843)
[0000][PE] mean and std.dev: (310.86, 289.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 368.945 CPU sec, 20.627 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520621, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 321, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (381.36, 414.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (432, 985, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (964.67, 625.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 368.739 CPU sec, 20.613 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520365, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 288, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 744)
[0000][PE] mean and std.dev: (226.78, 122.18)
[0000][PE] low and high boundaries for proper pairs: (1, 938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 369.206 CPU sec, 20.652 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520484, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 219, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 795)
[0000][PE] mean and std.dev: (204.92, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 368.340 CPU sec, 20.601 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520340, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 232, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (449.26, 507.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1837, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (2178.55, 1501.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 373.497 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520459, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 429, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (627.36, 625.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.66, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 372.618 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520239, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 282, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (483.88, 482.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 368.885 CPU sec, 20.675 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520964, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 390, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (531.29, 482.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 369.750 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520646, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 383, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (648.67, 718.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 368.543 CPU sec, 20.635 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520732, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 280, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (257.00, 128.86)
[0000][PE] low and high boundaries for proper pairs: (1, 923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 369.944 CPU sec, 20.709 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520473, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 301, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 869)
[0000][PE] mean and std.dev: (262.44, 174.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1669, 3282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7880)
[0000][PE] mean and std.dev: (2060.38, 1657.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 370.254 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520875, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 356, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2537)
[0000][PE] mean and std.dev: (455.25, 417.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.99, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 2168, 4584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11316)
[0000][PE] mean and std.dev: (2876.92, 2278.05)
[0000][PE] low and high boundaries for proper pairs: (1, 14682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 366.834 CPU sec, 20.562 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520675, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 607, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (734.00, 560.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.036 CPU sec, 20.806 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520309, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 363, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (616.77, 723.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 375.636 CPU sec, 21.044 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520718, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 250, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1008)
[0000][PE] mean and std.dev: (244.27, 108.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 370.953 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520972, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 392, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6757)
[0000][PE] mean and std.dev: (1295.75, 1603.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 374.511 CPU sec, 20.994 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520812, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 317, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (456.36, 396.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.48, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1311, 1469, 3614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8220)
[0000][PE] mean and std.dev: (2344.45, 1909.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 370.074 CPU sec, 20.719 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520016, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 290, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 831)
[0000][PE] mean and std.dev: (293.94, 116.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 372.036 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520660, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 377, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1714)
[0000][PE] mean and std.dev: (476.50, 366.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 370.535 CPU sec, 20.721 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520256, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 375, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (455.35, 474.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1158, 2782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6688)
[0000][PE] mean and std.dev: (1586.08, 1165.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 373.165 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520915, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 242, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (649.94, 997.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 367.667 CPU sec, 20.565 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520744, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 218, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1635)
[0000][PE] mean and std.dev: (489.37, 468.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 370.405 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520549, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 343, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1305)
[0000][PE] mean and std.dev: (324.29, 189.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (224, 388, 3454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9914)
[0000][PE] mean and std.dev: (1995.60, 2412.89)
[0000][PE] low and high boundaries for proper pairs: (1, 13144)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 371.784 CPU sec, 20.791 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000024 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520103, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 207, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (225.77, 151.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 374.549 CPU sec, 20.977 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520567, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 361, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 940)
[0000][PE] mean and std.dev: (340.29, 183.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 372.895 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520525, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 371, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (528.67, 441.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 744, 3684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9920)
[0000][PE] mean and std.dev: (2291.40, 2859.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 368.171 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520398, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 347, 613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1417)
[0000][PE] mean and std.dev: (402.00, 326.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 369.477 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520817, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 265, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (531.52, 673.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 371.671 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520298, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 219, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 690)
[0000][PE] mean and std.dev: (233.78, 94.74)
[0000][PE] low and high boundaries for proper pairs: (1, 857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1618, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5469)
[0000][PE] mean and std.dev: (1368.83, 852.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 370.273 CPU sec, 20.731 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521020, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 238, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1137)
[0000][PE] mean and std.dev: (258.55, 133.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1755, 2284, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (293, 3948)
[0000][PE] mean and std.dev: (1967.71, 603.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 370.507 CPU sec, 20.735 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520520, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 322, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (546.45, 589.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 369.862 CPU sec, 20.688 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520519, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 210, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (228.11, 125.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 368.904 CPU sec, 20.630 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520281, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 311, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (522.32, 602.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 2107, 3421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9937)
[0000][PE] mean and std.dev: (2297.10, 2789.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13454)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 369.095 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520295, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 209, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (249.88, 149.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 370.594 CPU sec, 20.729 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520227, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 270, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (439.18, 417.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 375.181 CPU sec, 20.996 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520472, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 183, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2225)
[0000][PE] mean and std.dev: (505.39, 604.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 372.300 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520777, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 221, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (271.10, 180.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 369.477 CPU sec, 20.675 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520395, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 372, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (625.92, 580.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1781, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1938.90, 1093.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 371.591 CPU sec, 20.820 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520927, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 335, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 774)
[0000][PE] mean and std.dev: (280.79, 83.10)
[0000][PE] low and high boundaries for proper pairs: (1, 961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (379, 1296, 4730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13432)
[0000][PE] mean and std.dev: (2320.00, 2288.75)
[0000][PE] low and high boundaries for proper pairs: (1, 17783)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1242, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1397.22, 957.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 368.844 CPU sec, 20.633 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520604, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 316, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (532.05, 523.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 794, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1201.50, 1049.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 370.369 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520497, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 317, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1344)
[0000][PE] mean and std.dev: (318.56, 247.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 2656, 4026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9526)
[0000][PE] mean and std.dev: (2505.33, 1560.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 371.937 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520622, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 344, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1024)
[0000][PE] mean and std.dev: (303.31, 162.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 368.409 CPU sec, 20.602 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520967, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 303, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (496.73, 532.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 755, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (736.25, 298.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 369.891 CPU sec, 20.704 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520831, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 468, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5049)
[0000][PE] mean and std.dev: (865.60, 1142.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 368.534 CPU sec, 20.610 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520568, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 410, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (531.91, 516.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1258, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1094.50, 515.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 370.711 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520894, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 336, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (341.05, 200.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.44, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 367.188 CPU sec, 20.556 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520463, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 360, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (574.13, 594.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 368.247 CPU sec, 20.588 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520909, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 405, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4884)
[0000][PE] mean and std.dev: (698.17, 762.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 369.471 CPU sec, 20.643 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520886, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 229, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 715)
[0000][PE] mean and std.dev: (233.75, 140.08)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 372.147 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520372, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 203, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 998)
[0000][PE] mean and std.dev: (287.12, 222.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 2011, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1737.40, 607.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 371.099 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520459, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 295, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (705.29, 866.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 370.963 CPU sec, 20.756 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520676, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 230, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (275.87, 185.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 2093, 3445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8467)
[0000][PE] mean and std.dev: (1928.22, 1021.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 368.386 CPU sec, 20.609 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520698, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 409, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1954)
[0000][PE] mean and std.dev: (579.14, 469.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 953, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1374.45, 1035.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 368.401 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520500, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 282, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1808)
[0000][PE] mean and std.dev: (368.69, 294.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.70, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 370.990 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520703, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 336, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1168)
[0000][PE] mean and std.dev: (321.11, 175.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 368.427 CPU sec, 20.630 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520388, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 396, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (817.46, 907.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 3461, 6279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17987)
[0000][PE] mean and std.dev: (3420.70, 3030.68)
[0000][PE] low and high boundaries for proper pairs: (1, 23841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 369.571 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520841, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 276, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 663)
[0000][PE] mean and std.dev: (247.64, 92.09)
[0000][PE] low and high boundaries for proper pairs: (1, 812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 367.606 CPU sec, 20.604 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520757, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 316, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1311)
[0000][PE] mean and std.dev: (359.24, 301.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 368.477 CPU sec, 20.611 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520291, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 379, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4607)
[0000][PE] mean and std.dev: (742.46, 951.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1372, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1642.50, 1178.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 370.564 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520438, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 230, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1663)
[0000][PE] mean and std.dev: (397.15, 433.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 371.481 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520395, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 206, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 844)
[0000][PE] mean and std.dev: (224.83, 127.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 368.860 CPU sec, 20.614 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520249, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 343, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (636.57, 630.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.64, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 370.202 CPU sec, 20.672 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520721, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 354, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (526.71, 518.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.61, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 370.427 CPU sec, 20.719 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520509, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 206, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (225.00, 132.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.628 CPU sec, 20.928 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520995, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 268, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 875)
[0000][PE] mean and std.dev: (259.53, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1497, 1958, 2948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5850)
[0000][PE] mean and std.dev: (2015.80, 1023.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 368.120 CPU sec, 20.612 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520705, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 199, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 857)
[0000][PE] mean and std.dev: (231.88, 160.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 371.392 CPU sec, 20.807 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520466, 9, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 325, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (297.81, 257.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 369.816 CPU sec, 20.664 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520400, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 311, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1334)
[0000][PE] mean and std.dev: (299.26, 259.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.96, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1450, 3484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7864)
[0000][PE] mean and std.dev: (2022.50, 1405.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 369.789 CPU sec, 20.700 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520837, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 352, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (669.95, 691.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 371.991 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520729, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 273, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1792)
[0000][PE] mean and std.dev: (443.24, 453.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 370.861 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520380, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 291, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 722)
[0000][PE] mean and std.dev: (262.92, 96.96)
[0000][PE] low and high boundaries for proper pairs: (1, 892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1424, 3989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10159)
[0000][PE] mean and std.dev: (2325.09, 2507.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 371.923 CPU sec, 20.900 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520399, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 314, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (667.46, 859.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 371.580 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520996, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 208, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 743)
[0000][PE] mean and std.dev: (215.83, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 367.126 CPU sec, 20.540 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520894, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 301, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (434.28, 472.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 372.031 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520685, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 214, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 684)
[0000][PE] mean and std.dev: (173.25, 82.68)
[0000][PE] low and high boundaries for proper pairs: (1, 873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.21, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1128, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7683)
[0000][PE] mean and std.dev: (1676.80, 1153.06)
[0000][PE] low and high boundaries for proper pairs: (1, 10032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 369.277 CPU sec, 20.655 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520582, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 199, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 747)
[0000][PE] mean and std.dev: (204.26, 94.79)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 368.865 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520600, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 325, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (988.00, 1076.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 368.881 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520963, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 285, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 787)
[0000][PE] mean and std.dev: (274.20, 135.10)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 369.015 CPU sec, 20.649 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520264, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 349, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2550)
[0000][PE] mean and std.dev: (522.92, 458.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1278, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (1292.44, 685.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 369.073 CPU sec, 20.656 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521085, 9, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 278, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2044)
[0000][PE] mean and std.dev: (465.54, 487.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 369.207 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520730, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 188, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 679)
[0000][PE] mean and std.dev: (227.05, 107.19)
[0000][PE] low and high boundaries for proper pairs: (1, 846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.62, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 371.742 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520419, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 226, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1811)
[0000][PE] mean and std.dev: (378.36, 430.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.70, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 373.436 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520645, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 334, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1962)
[0000][PE] mean and std.dev: (435.58, 425.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 368.410 CPU sec, 20.610 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520779, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 435, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (1005.63, 1054.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1299, 4683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11737)
[0000][PE] mean and std.dev: (2439.73, 2374.42)
[0000][PE] low and high boundaries for proper pairs: (1, 15264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 370.342 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520769, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 186, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (218.88, 138.80)
[0000][PE] low and high boundaries for proper pairs: (1, 960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.47, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 369.435 CPU sec, 20.700 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520460, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 298, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (267.29, 199.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.88, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 373.493 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520237, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 219, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 752)
[0000][PE] mean and std.dev: (257.50, 135.14)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 371.970 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520295, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 315, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2294)
[0000][PE] mean and std.dev: (508.50, 497.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 2343, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (2007.40, 1240.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 373.009 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520666, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 305, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (744.75, 781.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.47, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1174, 4707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12571)
[0000][PE] mean and std.dev: (2270.30, 2064.51)
[0000][PE] low and high boundaries for proper pairs: (1, 16503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 369.064 CPU sec, 20.627 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520803, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 407, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (681.86, 719.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.15, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 370.654 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520856, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 301, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (305.58, 201.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.13, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 372.282 CPU sec, 20.861 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520989, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 348, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1963)
[0000][PE] mean and std.dev: (474.09, 416.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.87, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1265, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (311, 2231)
[0000][PE] mean and std.dev: (1176.44, 279.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 371.139 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520423, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 367, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (474.00, 378.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 370.755 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520592, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 412, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1857)
[0000][PE] mean and std.dev: (481.65, 436.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 370.939 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520401, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 365, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (607.81, 773.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 371.216 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520433, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 335, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2101)
[0000][PE] mean and std.dev: (403.54, 359.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 370.753 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520567, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 311, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (309.38, 188.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.523 CPU sec, 20.809 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520569, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 324, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (836.85, 1021.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 368.851 CPU sec, 20.684 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520481, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 396, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (488.69, 441.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.46, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 371.576 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520492, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 336, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (616.11, 579.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (738, 2760, 7258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20298)
[0000][PE] mean and std.dev: (3723.82, 3381.22)
[0000][PE] low and high boundaries for proper pairs: (1, 26818)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 368.513 CPU sec, 20.641 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520573, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 330, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (411.90, 379.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 373.252 CPU sec, 20.934 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520260, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 345, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (820.17, 1203.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.37, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 370.875 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520259, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 337, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2903)
[0000][PE] mean and std.dev: (469.09, 497.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 374.911 CPU sec, 21.008 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520570, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 238, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (300.71, 264.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 372.706 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520503, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 329, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1177)
[0000][PE] mean and std.dev: (320.59, 170.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (425, 2089, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1483.10, 1278.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 372.223 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520694, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 373, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1386)
[0000][PE] mean and std.dev: (409.41, 341.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.54, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (515, 1491, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5984)
[0000][PE] mean and std.dev: (1543.45, 1413.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7807)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 371.585 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520318, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 368, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (727.44, 762.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 371.746 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520768, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 335, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (498.56, 474.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 368.036 CPU sec, 20.608 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520692, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 272, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1027)
[0000][PE] mean and std.dev: (256.06, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 371.383 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520564, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 373, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1632)
[0000][PE] mean and std.dev: (469.64, 292.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 373.269 CPU sec, 20.922 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520091, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 200, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (259.83, 160.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 370.537 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520480, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 246, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 938)
[0000][PE] mean and std.dev: (250.00, 107.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.14, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1826, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7796)
[0000][PE] mean and std.dev: (2236.00, 1559.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 370.725 CPU sec, 20.779 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520347, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 312, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (412.30, 393.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 373.964 CPU sec, 21.005 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520671, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 465, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (792.64, 820.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 370.663 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520676, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 356, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (351.87, 311.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 370.659 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 521100, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 208, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 951)
[0000][PE] mean and std.dev: (227.84, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 370.446 CPU sec, 20.735 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520628, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 333, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1247)
[0000][PE] mean and std.dev: (382.27, 221.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 370.947 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520760, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 278, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (259.04, 127.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 372.672 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520466, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 365, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (373.59, 295.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 372.135 CPU sec, 20.808 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520546, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 257, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1035)
[0000][PE] mean and std.dev: (265.36, 216.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1414, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1653.40, 939.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 372.876 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520813, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 202, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (216.65, 110.31)
[0000][PE] low and high boundaries for proper pairs: (1, 853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 2691, 4488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10860)
[0000][PE] mean and std.dev: (3019.60, 1943.71)
[0000][PE] low and high boundaries for proper pairs: (1, 14046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 371.741 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520562, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 287, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (540.19, 633.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.64, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 370.639 CPU sec, 20.723 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520443, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 224, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 953)
[0000][PE] mean and std.dev: (232.95, 99.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 370.368 CPU sec, 20.779 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520766, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 286, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1643)
[0000][PE] mean and std.dev: (435.07, 419.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.44, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 370.145 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520560, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 291, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (253.82, 156.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1386, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1466.60, 987.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 374.063 CPU sec, 20.973 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520423, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 239, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (344.77, 343.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1053, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (1021.50, 379.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 371.922 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000254 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520513, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 227, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (213.42, 95.42)
[0000][PE] low and high boundaries for proper pairs: (1, 966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 377.270 CPU sec, 21.191 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520218, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 327, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2025)
[0000][PE] mean and std.dev: (425.62, 422.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 367.759 CPU sec, 20.621 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520265, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 334, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1977)
[0000][PE] mean and std.dev: (484.08, 399.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 370.965 CPU sec, 20.762 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520391, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 376, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1748)
[0000][PE] mean and std.dev: (514.36, 385.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 368.490 CPU sec, 20.620 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520474, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 453, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (1334.96, 1558.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 365.935 CPU sec, 20.463 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520804, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 229, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (807.57, 1142.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 370.367 CPU sec, 20.733 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519908, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 248, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1154)
[0000][PE] mean and std.dev: (306.48, 211.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.08, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 2204, 3503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8095)
[0000][PE] mean and std.dev: (1880.18, 1200.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 367.971 CPU sec, 20.620 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520438, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 285, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (614.15, 652.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 368.322 CPU sec, 20.595 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520962, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 189, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (399.64, 471.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 368.354 CPU sec, 20.638 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520745, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 202, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 634)
[0000][PE] mean and std.dev: (247.36, 95.39)
[0000][PE] low and high boundaries for proper pairs: (1, 782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.45, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 368.640 CPU sec, 20.672 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520623, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 266, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (761.05, 981.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 369.893 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520623, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 188, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 690)
[0000][PE] mean and std.dev: (189.30, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 367.732 CPU sec, 20.595 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520806, 2, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 256, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1940)
[0000][PE] mean and std.dev: (319.11, 329.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 369.154 CPU sec, 20.649 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520557, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 240, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (244.50, 148.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (508.95, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1435, 1847, 4072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9346)
[0000][PE] mean and std.dev: (2414.00, 1986.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 369.286 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520409, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 397, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (467.05, 389.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.34, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 370.891 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520914, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 201, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 730)
[0000][PE] mean and std.dev: (207.58, 107.23)
[0000][PE] low and high boundaries for proper pairs: (1, 932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 366.202 CPU sec, 20.471 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520668, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 231, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1060)
[0000][PE] mean and std.dev: (261.00, 178.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 372.183 CPU sec, 20.881 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520235, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 376, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (565.00, 680.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 369.292 CPU sec, 20.688 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520077, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 241, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1438)
[0000][PE] mean and std.dev: (276.00, 229.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1266, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1082.88, 555.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 368.230 CPU sec, 20.585 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520772, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 318, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 712)
[0000][PE] mean and std.dev: (276.14, 163.02)
[0000][PE] low and high boundaries for proper pairs: (1, 928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 367.764 CPU sec, 20.574 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520282, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 321, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (294.14, 147.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 369.593 CPU sec, 20.669 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520387, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 436, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (801.48, 821.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1533, 4931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12783)
[0000][PE] mean and std.dev: (2597.82, 2281.46)
[0000][PE] low and high boundaries for proper pairs: (1, 16709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 371.233 CPU sec, 20.804 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520696, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 340, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (40, 605)
[0000][PE] mean and std.dev: (284.42, 86.33)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 365.642 CPU sec, 20.404 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520935, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 191, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (284.24, 247.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 366.677 CPU sec, 20.504 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520514, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 249, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2553)
[0000][PE] mean and std.dev: (402.52, 490.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 368.730 CPU sec, 20.634 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519934, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 326, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 964)
[0000][PE] mean and std.dev: (251.81, 158.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (175, 372, 4414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12892)
[0000][PE] mean and std.dev: (1933.42, 3027.14)
[0000][PE] low and high boundaries for proper pairs: (1, 17131)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 371.005 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520516, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 436, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (480.62, 458.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1934, 2783, 3534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6734)
[0000][PE] mean and std.dev: (2445.91, 1426.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 368.844 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520489, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 411, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2198)
[0000][PE] mean and std.dev: (472.18, 340.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 371.107 CPU sec, 20.851 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520401, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 366, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1710)
[0000][PE] mean and std.dev: (376.31, 222.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 367.107 CPU sec, 20.596 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520723, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 283, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (552.16, 573.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1161, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (1681.18, 1340.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 366.421 CPU sec, 20.493 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520826, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 310, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (394.57, 310.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1630, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1304.11, 675.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 369.090 CPU sec, 20.663 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520430, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 232, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (240.68, 122.84)
[0000][PE] low and high boundaries for proper pairs: (1, 957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.61, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 372.381 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520837, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 234, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (222.41, 130.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 369.032 CPU sec, 20.612 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520379, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 441, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (1075.79, 1400.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 371.067 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520675, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 348, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 911)
[0000][PE] mean and std.dev: (275.53, 139.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 369.036 CPU sec, 20.699 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 521084, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 373, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1341)
[0000][PE] mean and std.dev: (319.78, 190.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.62, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (402, 1429, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (1587.08, 1363.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 369.381 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520359, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 237, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (271.62, 163.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (440, 634, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5849)
[0000][PE] mean and std.dev: (1646.40, 1984.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9585)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1258, 6996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18936)
[0000][PE] mean and std.dev: (3187.27, 3292.44)
[0000][PE] low and high boundaries for proper pairs: (1, 24906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 368.434 CPU sec, 20.671 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520456, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 330, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (279.96, 187.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 366.422 CPU sec, 20.499 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520433, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 304, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (356.47, 383.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 367.986 CPU sec, 20.630 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520553, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 290, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (256.76, 111.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 369.595 CPU sec, 20.697 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520225, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 364, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7571)
[0000][PE] mean and std.dev: (1434.52, 1988.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (134, 1462, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8324)
[0000][PE] mean and std.dev: (2094.60, 2350.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11499)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 369.016 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520147, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 243, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (599.18, 758.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 367.240 CPU sec, 20.562 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520875, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 280, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (229.86, 116.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 367.089 CPU sec, 20.538 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520181, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 326, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2405)
[0000][PE] mean and std.dev: (550.36, 571.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1824, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (1750.60, 741.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 374.712 CPU sec, 21.035 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520836, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 394, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (629.00, 631.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1314, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (1305.45, 722.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 368.108 CPU sec, 20.587 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520623, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 369, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (811.35, 871.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 368.978 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520336, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 323, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1584)
[0000][PE] mean and std.dev: (357.23, 301.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 367.834 CPU sec, 20.564 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520375, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 451, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5719)
[0000][PE] mean and std.dev: (868.12, 992.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.64, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 368.297 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520660, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 354, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (427.21, 362.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 369.073 CPU sec, 20.633 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520625, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 216, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (359.68, 297.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 371.525 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520540, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 336, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (538.29, 699.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 369.844 CPU sec, 20.665 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520734, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 322, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1833)
[0000][PE] mean and std.dev: (366.47, 377.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 1357, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1186.22, 764.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 368.867 CPU sec, 20.681 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520483, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 230, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1004)
[0000][PE] mean and std.dev: (290.71, 214.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 367.136 CPU sec, 20.539 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520453, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 342, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1454)
[0000][PE] mean and std.dev: (353.00, 255.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1961, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1514.22, 644.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 369.237 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520529, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 326, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3201)
[0000][PE] mean and std.dev: (515.26, 519.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1289, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (1217.30, 616.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 367.821 CPU sec, 20.577 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520096, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 330, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (619.74, 805.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 368.984 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 521182, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 332, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (312.04, 204.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 367.531 CPU sec, 20.577 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520907, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 409, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1727)
[0000][PE] mean and std.dev: (429.72, 334.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 369.875 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520540, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 370, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (614.00, 620.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1564, 3049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6615)
[0000][PE] mean and std.dev: (1848.67, 953.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 368.572 CPU sec, 20.663 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520611, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 503, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (979.33, 1094.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 368.719 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520962, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 221, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 643)
[0000][PE] mean and std.dev: (202.11, 108.99)
[0000][PE] low and high boundaries for proper pairs: (1, 801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 366.589 CPU sec, 20.499 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520400, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 193, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 702)
[0000][PE] mean and std.dev: (186.70, 101.86)
[0000][PE] low and high boundaries for proper pairs: (1, 891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 368.438 CPU sec, 20.647 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520538, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 320, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (439.45, 421.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 366.271 CPU sec, 20.490 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520373, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 511, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (724.89, 825.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1972, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (1728.90, 673.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 369.242 CPU sec, 20.656 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520242, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 274, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (268.20, 215.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 370.170 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520981, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 234, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (261.63, 219.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.11, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 369.242 CPU sec, 20.671 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520827, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 373, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (392.78, 364.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.64, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 366.459 CPU sec, 20.486 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520570, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 228, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2153)
[0000][PE] mean and std.dev: (326.72, 326.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1427, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1633.20, 968.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.407 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520686, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 210, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1503)
[0000][PE] mean and std.dev: (276.14, 250.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 367.643 CPU sec, 20.610 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521016, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 196, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 725)
[0000][PE] mean and std.dev: (206.95, 108.03)
[0000][PE] low and high boundaries for proper pairs: (1, 911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 369.106 CPU sec, 20.628 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520317, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 374, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (749.58, 666.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (369, 1997, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6414)
[0000][PE] mean and std.dev: (1706.67, 1204.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8429)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 367.506 CPU sec, 20.542 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520493, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 271, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (547.67, 752.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 369.331 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520797, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 339, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1281)
[0000][PE] mean and std.dev: (372.00, 269.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 371.207 CPU sec, 20.778 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520172, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 298, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1378)
[0000][PE] mean and std.dev: (308.67, 211.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1116, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (1572.42, 1226.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 371.250 CPU sec, 20.797 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520129, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 278, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (566.88, 535.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 370.163 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520587, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 205, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (262.50, 205.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.35, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 1560, 2860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8078)
[0000][PE] mean and std.dev: (1283.20, 1131.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10687)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 367.754 CPU sec, 20.615 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520749, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 258, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 645)
[0000][PE] mean and std.dev: (251.45, 88.41)
[0000][PE] low and high boundaries for proper pairs: (1, 789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 369.148 CPU sec, 20.669 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520631, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 289, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5631)
[0000][PE] mean and std.dev: (597.81, 925.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 368.794 CPU sec, 20.635 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520662, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 356, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1524)
[0000][PE] mean and std.dev: (346.36, 236.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 2205, 4910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13372)
[0000][PE] mean and std.dev: (2450.45, 1932.52)
[0000][PE] low and high boundaries for proper pairs: (1, 17603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 370.039 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520398, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 228, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2253)
[0000][PE] mean and std.dev: (453.19, 487.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.99, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 367.904 CPU sec, 20.593 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520821, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 229, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 940)
[0000][PE] mean and std.dev: (206.65, 123.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (463, 1644, 5701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16177)
[0000][PE] mean and std.dev: (2791.30, 2573.59)
[0000][PE] low and high boundaries for proper pairs: (1, 21415)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 366.694 CPU sec, 20.514 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 521021, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 375, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1508)
[0000][PE] mean and std.dev: (414.04, 311.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 368.683 CPU sec, 20.636 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520555, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 345, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (457.05, 478.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 369.845 CPU sec, 20.921 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520769, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 304, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2403)
[0000][PE] mean and std.dev: (455.67, 517.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 368.740 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520653, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 196, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (484.64, 710.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.53, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1505, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (1486.60, 535.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 370.848 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520700, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 314, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (362.71, 310.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 370.503 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520591, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 396, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (564.17, 393.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 371.753 CPU sec, 20.795 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520831, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 217, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (483.29, 520.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 371.805 CPU sec, 20.834 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520217, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 278, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 677)
[0000][PE] mean and std.dev: (262.43, 150.08)
[0000][PE] low and high boundaries for proper pairs: (1, 863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.54, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 371.611 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520208, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 352, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (559.06, 617.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 372.617 CPU sec, 20.845 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520490, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 215, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (254.05, 162.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 370.168 CPU sec, 20.707 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520715, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (86, 182, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8264)
[0000][PE] mean and std.dev: (1526.57, 2161.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 369.971 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520882, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 390, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (323.20, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 370.572 CPU sec, 20.777 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520612, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 335, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1015)
[0000][PE] mean and std.dev: (319.96, 195.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 366.900 CPU sec, 20.545 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520064, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 298, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1098)
[0000][PE] mean and std.dev: (329.44, 234.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1614, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1647.00, 711.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 370.656 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520319, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 423, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2283)
[0000][PE] mean and std.dev: (404.31, 324.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 367.407 CPU sec, 20.546 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521024, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 407, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (558.29, 429.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.61, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 368.058 CPU sec, 20.581 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520412, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (100, 172, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (386.50, 527.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 369.203 CPU sec, 20.680 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520226, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 272, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1088)
[0000][PE] mean and std.dev: (276.13, 130.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1860, 4249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10455)
[0000][PE] mean and std.dev: (2817.31, 2395.46)
[0000][PE] low and high boundaries for proper pairs: (1, 13558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 370.081 CPU sec, 20.732 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520862, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 273, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5511)
[0000][PE] mean and std.dev: (710.67, 1131.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 372.473 CPU sec, 20.920 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520350, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 322, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (339.19, 268.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 371.364 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520504, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 539, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2447)
[0000][PE] mean and std.dev: (612.24, 615.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1407, 2026, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (2137.64, 1512.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 368.406 CPU sec, 20.649 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520387, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 219, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1070)
[0000][PE] mean and std.dev: (239.16, 136.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 369.709 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520514, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 230, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 640)
[0000][PE] mean and std.dev: (213.42, 95.44)
[0000][PE] low and high boundaries for proper pairs: (1, 793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 369.633 CPU sec, 20.738 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520511, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 339, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1337)
[0000][PE] mean and std.dev: (340.56, 244.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (813, 2575, 3948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10218)
[0000][PE] mean and std.dev: (2968.09, 2733.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13902)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 370.965 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520192, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 237, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 614)
[0000][PE] mean and std.dev: (202.84, 100.39)
[0000][PE] low and high boundaries for proper pairs: (1, 761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1421, 1915, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (59, 3464)
[0000][PE] mean and std.dev: (1681.60, 655.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 372.153 CPU sec, 20.864 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520885, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 361, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (434.92, 339.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 883, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (791.56, 473.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 370.297 CPU sec, 20.719 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520930, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 214, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1049)
[0000][PE] mean and std.dev: (268.84, 159.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 369.511 CPU sec, 20.703 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520700, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 187, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 567)
[0000][PE] mean and std.dev: (215.16, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 370.500 CPU sec, 20.708 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520655, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 366, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (344.15, 206.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 368.598 CPU sec, 20.601 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520573, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 428, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (642.32, 605.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 371.432 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520952, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 397, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (641.78, 533.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 367.812 CPU sec, 20.583 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520030, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 288, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1505)
[0000][PE] mean and std.dev: (368.64, 312.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.67, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 369.167 CPU sec, 20.641 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520311, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 501, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (814.73, 877.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.68, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 373.686 CPU sec, 20.910 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520849, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 371, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1003)
[0000][PE] mean and std.dev: (287.72, 154.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 367.072 CPU sec, 20.549 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520632, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 367, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (273.81, 131.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.66, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 369.602 CPU sec, 20.666 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520773, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 371, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (549.00, 617.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 369.052 CPU sec, 20.717 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520486, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 369, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2602)
[0000][PE] mean and std.dev: (493.00, 512.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 371.007 CPU sec, 20.760 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520473, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 293, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (592.30, 696.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1684, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1709.42, 899.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 373.154 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520153, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 373, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (655.10, 651.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 376.242 CPU sec, 21.113 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520623, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 297, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (255.83, 109.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 369.906 CPU sec, 20.811 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520351, 10, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 324, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (276.37, 144.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (239, 1737, 5936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17330)
[0000][PE] mean and std.dev: (2878.90, 3395.45)
[0000][PE] low and high boundaries for proper pairs: (1, 23027)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 371.862 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520637, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 325, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 865)
[0000][PE] mean and std.dev: (290.95, 177.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.17, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 370.542 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520587, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (102, 194, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1032)
[0000][PE] mean and std.dev: (249.00, 229.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1088, 2100, 4377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10955)
[0000][PE] mean and std.dev: (2602.91, 2127.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14244)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 369.260 CPU sec, 20.660 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520676, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 322, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (562.67, 489.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (458, 1074, 3261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8867)
[0000][PE] mean and std.dev: (1703.83, 1619.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11670)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 370.747 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520939, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 322, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (322.17, 169.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 373.005 CPU sec, 20.927 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520401, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 308, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 869)
[0000][PE] mean and std.dev: (275.06, 179.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1044, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1682.62, 918.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 370.603 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520533, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 433, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (652.65, 655.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (853, 3362, 5719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15451)
[0000][PE] mean and std.dev: (3370.10, 2629.98)
[0000][PE] low and high boundaries for proper pairs: (1, 20317)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 369.803 CPU sec, 20.664 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520513, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (97, 252, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2383)
[0000][PE] mean and std.dev: (414.60, 487.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 371.971 CPU sec, 20.806 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520929, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 369, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (517.69, 536.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 368.644 CPU sec, 20.662 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520284, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 243, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1296)
[0000][PE] mean and std.dev: (326.88, 283.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1727, 4057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10547)
[0000][PE] mean and std.dev: (2585.36, 2502.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 371.610 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520870, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 310, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (458.96, 455.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.75, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 370.227 CPU sec, 20.734 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520884, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 441, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (799.84, 774.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 371.159 CPU sec, 20.855 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520669, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 168, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 675)
[0000][PE] mean and std.dev: (162.83, 70.44)
[0000][PE] low and high boundaries for proper pairs: (1, 861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 370.751 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520229, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 285, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2052)
[0000][PE] mean and std.dev: (391.48, 368.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 374.845 CPU sec, 20.973 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 521130, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 233, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (226.22, 133.65)
[0000][PE] low and high boundaries for proper pairs: (1, 971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 369.703 CPU sec, 20.734 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520641, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 217, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (243.47, 176.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 939, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1062.40, 403.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 375.133 CPU sec, 21.005 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520763, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 348, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (308.82, 218.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.89, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 369.056 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520635, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 205, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 816)
[0000][PE] mean and std.dev: (261.33, 154.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 369.541 CPU sec, 20.687 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520442, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 370, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (534.53, 523.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.92, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1168, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5389)
[0000][PE] mean and std.dev: (1346.00, 862.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 370.809 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519906, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 244, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 822)
[0000][PE] mean and std.dev: (252.11, 115.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 371.599 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520747, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 350, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (674.24, 713.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 367.005 CPU sec, 20.524 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520306, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 282, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (323.40, 306.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 369.945 CPU sec, 20.704 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520910, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 349, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 773)
[0000][PE] mean and std.dev: (309.30, 138.91)
[0000][PE] low and high boundaries for proper pairs: (1, 958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 369.234 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520197, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 211, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 975)
[0000][PE] mean and std.dev: (208.31, 128.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 373.036 CPU sec, 20.913 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520147, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 253, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (249.62, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 1493, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1224.00, 1016.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 372.463 CPU sec, 20.916 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520688, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 212, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1761)
[0000][PE] mean and std.dev: (363.89, 281.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 370.576 CPU sec, 20.756 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520509, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 344, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (659.48, 672.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 371.324 CPU sec, 20.791 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 521079, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 311, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1463)
[0000][PE] mean and std.dev: (327.00, 206.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 370.528 CPU sec, 20.761 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520624, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 359, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (537.37, 526.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 373.384 CPU sec, 20.970 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520679, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 201, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (243.92, 149.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1417, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1535.08, 831.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 371.926 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520397, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 476, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (689.47, 675.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 371.933 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520621, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 230, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (244.20, 160.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 373.318 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520197, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 271, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 988)
[0000][PE] mean and std.dev: (225.23, 112.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.89, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 1317, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1394.50, 749.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 376.067 CPU sec, 21.055 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520374, 13, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 297, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (641.00, 725.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (741, 1920, 7224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20190)
[0000][PE] mean and std.dev: (3007.31, 2977.61)
[0000][PE] low and high boundaries for proper pairs: (1, 26673)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 373.170 CPU sec, 20.890 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520549, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 292, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 782)
[0000][PE] mean and std.dev: (266.75, 128.25)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1287, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (1709.44, 1067.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 372.622 CPU sec, 20.863 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520744, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 212, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (762.14, 828.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 373.444 CPU sec, 20.889 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520619, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 315, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 829)
[0000][PE] mean and std.dev: (304.20, 153.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1376, 1498, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6557)
[0000][PE] mean and std.dev: (2209.80, 1717.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 368.608 CPU sec, 20.655 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520352, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 359, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (628.09, 707.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 371.687 CPU sec, 21.111 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520686, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 348, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (283.05, 142.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000276 bp)...
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 373.094 CPU sec, 21.053 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520273, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 367, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6514)
[0000][PE] mean and std.dev: (1263.54, 1738.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 490, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (624.56, 571.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5328)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1289, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (256, 2296)
[0000][PE] mean and std.dev: (1060.89, 320.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 369.528 CPU sec, 20.665 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520350, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 331, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (275.27, 174.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 372.532 CPU sec, 20.845 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520690, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 321, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 867)
[0000][PE] mean and std.dev: (284.83, 122.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 373.494 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520510, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 229, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 969)
[0000][PE] mean and std.dev: (266.83, 172.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1650, 3824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9192)
[0000][PE] mean and std.dev: (2290.27, 1557.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 369.981 CPU sec, 20.758 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520932, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 431, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (760.09, 688.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1618, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (1915.90, 1179.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 368.890 CPU sec, 20.673 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520487, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 234, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (245.57, 115.81)
[0000][PE] low and high boundaries for proper pairs: (1, 994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 372.025 CPU sec, 20.890 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520182, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 280, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (429.00, 402.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1608, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6360)
[0000][PE] mean and std.dev: (1430.44, 815.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 373.994 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520327, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 197, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 911)
[0000][PE] mean and std.dev: (218.27, 91.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 372.713 CPU sec, 20.877 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520646, 6, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 354, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (473.45, 453.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 370.066 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520502, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 412, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1498)
[0000][PE] mean and std.dev: (423.95, 242.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 373.446 CPU sec, 20.918 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520214, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 274, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1008)
[0000][PE] mean and std.dev: (310.42, 205.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.94, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 369.571 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519973, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 282, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1076)
[0000][PE] mean and std.dev: (289.15, 198.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (577, 2291, 4397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12037)
[0000][PE] mean and std.dev: (2661.80, 2470.54)
[0000][PE] low and high boundaries for proper pairs: (1, 15857)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 370.400 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520443, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 266, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1255)
[0000][PE] mean and std.dev: (361.38, 274.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1365, 1910, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1729.78, 806.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 370.506 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520513, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 323, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1585)
[0000][PE] mean and std.dev: (414.24, 363.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 374.345 CPU sec, 20.966 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520753, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 407, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7141)
[0000][PE] mean and std.dev: (1093.83, 1329.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 372.364 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520872, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 338, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (323.16, 154.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 371.925 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520850, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 318, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (601.70, 646.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (798, 2244, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7908)
[0000][PE] mean and std.dev: (2293.20, 1871.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10278)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 370.539 CPU sec, 20.745 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520223, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 279, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1281)
[0000][PE] mean and std.dev: (308.30, 225.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.56, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 372.870 CPU sec, 20.848 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521289, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (83, 198, 218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (166.62, 89.39)
[0000][PE] low and high boundaries for proper pairs: (1, 623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1537, 2230, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (2001.70, 1174.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 370.564 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521095, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 393, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (628.91, 597.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 370.558 CPU sec, 20.731 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520877, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 269, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (293.23, 177.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 370.757 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520900, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 247, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (249.71, 122.62)
[0000][PE] low and high boundaries for proper pairs: (1, 965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 370.123 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520198, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 282, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1361)
[0000][PE] mean and std.dev: (267.67, 181.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.64, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1153, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (1191.78, 591.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 373.865 CPU sec, 21.021 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520554, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 297, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (784.92, 947.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 933, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1213.55, 902.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 368.694 CPU sec, 20.636 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520492, 9, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 295, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (603.04, 737.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 371.678 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520322, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 236, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (455.47, 487.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 377.037 CPU sec, 21.111 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520133, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 266, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1355)
[0000][PE] mean and std.dev: (266.92, 135.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.76, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 373.417 CPU sec, 20.887 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520573, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 279, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1125)
[0000][PE] mean and std.dev: (315.80, 181.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 370.660 CPU sec, 20.737 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520752, 12, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 362, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1930)
[0000][PE] mean and std.dev: (379.05, 297.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (249, 729, 4049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11649)
[0000][PE] mean and std.dev: (1977.92, 2431.62)
[0000][PE] low and high boundaries for proper pairs: (1, 15449)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 367.291 CPU sec, 20.586 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520359, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 323, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1218)
[0000][PE] mean and std.dev: (326.23, 252.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 369.721 CPU sec, 20.703 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520359, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 325, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (510.62, 477.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 373.253 CPU sec, 20.888 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520783, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 403, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (958.40, 1064.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 369.809 CPU sec, 20.697 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520410, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 348, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (264.06, 141.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 373.057 CPU sec, 20.881 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520510, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 194, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (193.62, 96.96)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 376.978 CPU sec, 21.246 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520424, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 316, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (531.32, 576.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 371.260 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520593, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 251, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (276.95, 141.53)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.97, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 371.256 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520623, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 294, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 898)
[0000][PE] mean and std.dev: (257.44, 194.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (395, 681, 3198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8804)
[0000][PE] mean and std.dev: (1628.90, 1857.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11607)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 369.803 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 521077, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 247, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1215)
[0000][PE] mean and std.dev: (298.75, 238.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 373.771 CPU sec, 20.973 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520714, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 197, 219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 465)
[0000][PE] mean and std.dev: (147.93, 73.37)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1560, 3463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8609)
[0000][PE] mean and std.dev: (2035.77, 1313.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 370.269 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520911, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (91, 265, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (671.75, 823.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 370.300 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520275, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 339, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 757)
[0000][PE] mean and std.dev: (274.88, 125.46)
[0000][PE] low and high boundaries for proper pairs: (1, 945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.56, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 370.404 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520542, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 395, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (588.15, 509.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 370.485 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520402, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 358, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (772.30, 1138.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 372.501 CPU sec, 20.830 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520515, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 312, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (486.11, 653.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.86, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 3001, 3545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8321)
[0000][PE] mean and std.dev: (2195.67, 1191.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 371.850 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519837, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 334, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 684)
[0000][PE] mean and std.dev: (286.47, 90.43)
[0000][PE] low and high boundaries for proper pairs: (1, 820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.45, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 372.125 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520358, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 429, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (958.92, 1177.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.597 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519835, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 497, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2227)
[0000][PE] mean and std.dev: (445.36, 268.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (140, 1461, 4135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12125)
[0000][PE] mean and std.dev: (2089.20, 2314.84)
[0000][PE] low and high boundaries for proper pairs: (1, 16120)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 373.466 CPU sec, 20.863 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520775, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 253, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1613)
[0000][PE] mean and std.dev: (369.57, 338.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 368.427 CPU sec, 20.664 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520498, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 315, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (284.86, 104.10)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 368.552 CPU sec, 20.627 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520455, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 201, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 730)
[0000][PE] mean and std.dev: (219.25, 144.15)
[0000][PE] low and high boundaries for proper pairs: (1, 926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 370.429 CPU sec, 20.761 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520476, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 224, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1798)
[0000][PE] mean and std.dev: (388.52, 404.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 370.753 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521098, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 336, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (273.18, 148.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 368.992 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520157, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 234, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 836)
[0000][PE] mean and std.dev: (251.12, 155.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1205, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (38, 2318)
[0000][PE] mean and std.dev: (1175.11, 363.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 372.257 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520777, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 348, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (411.27, 419.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.50, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 370.140 CPU sec, 20.681 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520719, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 243, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 876)
[0000][PE] mean and std.dev: (268.09, 134.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.80, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 1952, 3219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8643)
[0000][PE] mean and std.dev: (2403.30, 2106.92)
[0000][PE] low and high boundaries for proper pairs: (1, 11355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 370.410 CPU sec, 20.737 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520879, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 365, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1177)
[0000][PE] mean and std.dev: (310.42, 235.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1651, 3601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8595)
[0000][PE] mean and std.dev: (2009.62, 1292.40)
[0000][PE] low and high boundaries for proper pairs: (1, 11092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 368.816 CPU sec, 20.621 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520659, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 190, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (208.38, 128.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2018, 2129, 3270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5774)
[0000][PE] mean and std.dev: (2387.09, 1620.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 368.717 CPU sec, 20.629 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520486, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 361, 641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1393)
[0000][PE] mean and std.dev: (445.48, 317.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.279 CPU sec, 20.644 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520543, 12, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 278, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (435.54, 472.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.43, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (595, 2430, 4247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11551)
[0000][PE] mean and std.dev: (2635.42, 2597.46)
[0000][PE] low and high boundaries for proper pairs: (1, 15203)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1510, 6295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16399)
[0000][PE] mean and std.dev: (3091.38, 2587.73)
[0000][PE] low and high boundaries for proper pairs: (1, 21451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 370.580 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520789, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 287, 720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1812)
[0000][PE] mean and std.dev: (394.62, 435.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1239, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7563)
[0000][PE] mean and std.dev: (1268.92, 971.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 365.272 CPU sec, 20.428 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520705, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 213, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (440.00, 494.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 370.837 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520858, 15, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 305, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1539)
[0000][PE] mean and std.dev: (386.83, 365.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1324, 2621, 4573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11071)
[0000][PE] mean and std.dev: (3275.07, 2847.24)
[0000][PE] low and high boundaries for proper pairs: (1, 14664)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 368.291 CPU sec, 20.642 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520483, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 315, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (740.64, 946.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 369.582 CPU sec, 20.676 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521177, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 278, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1524)
[0000][PE] mean and std.dev: (395.76, 310.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 368.841 CPU sec, 20.633 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520801, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 325, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (612.48, 683.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1311, 2291, 4526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10956)
[0000][PE] mean and std.dev: (2779.00, 2385.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14171)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 371.271 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520384, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 244, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1331)
[0000][PE] mean and std.dev: (376.32, 335.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 367.694 CPU sec, 20.596 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520185, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 308, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (371.12, 242.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 370.364 CPU sec, 20.726 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520986, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 348, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (445.31, 350.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 370.718 CPU sec, 20.777 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520354, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 295, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 837)
[0000][PE] mean and std.dev: (250.53, 112.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 370.458 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520404, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 332, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (754.18, 860.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 371.129 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520710, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 338, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (696.04, 822.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1357, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6178)
[0000][PE] mean and std.dev: (1243.20, 936.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 372.035 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520374, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 291, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2313)
[0000][PE] mean and std.dev: (442.07, 440.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 1448, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9227)
[0000][PE] mean and std.dev: (1482.91, 1696.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12221)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 369.184 CPU sec, 20.653 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520465, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 359, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2346)
[0000][PE] mean and std.dev: (432.21, 420.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.66, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 370.835 CPU sec, 20.705 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520530, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 207, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (213.03, 114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 370.064 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520450, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 312, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1640)
[0000][PE] mean and std.dev: (377.61, 313.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.45, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1175, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (1045.50, 726.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 369.621 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520931, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 232, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (228.42, 133.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 368.751 CPU sec, 20.612 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520250, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 287, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1005)
[0000][PE] mean and std.dev: (309.09, 200.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 373.079 CPU sec, 20.921 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520603, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 312, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2329)
[0000][PE] mean and std.dev: (372.79, 314.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 756, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (898.44, 575.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 372.444 CPU sec, 20.841 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520816, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (119, 412, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (687.74, 907.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1389, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1318.25, 648.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 371.071 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520484, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 321, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1403)
[0000][PE] mean and std.dev: (326.94, 224.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 372.525 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520405, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 310, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (663.87, 756.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 372.593 CPU sec, 20.839 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520812, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 311, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (427.58, 396.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.64, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (535, 1475, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1294.44, 964.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 372.499 CPU sec, 20.883 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000042 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520380, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 352, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (541.50, 564.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (397, 1057, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7882)
[0000][PE] mean and std.dev: (1768.55, 1924.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10377)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 374.283 CPU sec, 21.023 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520485, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 258, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (317.86, 339.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 368.405 CPU sec, 20.608 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520510, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 339, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (803.48, 992.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 368.259 CPU sec, 20.603 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520429, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (81, 319, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (763.85, 891.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 371.519 CPU sec, 20.809 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520151, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 311, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1279)
[0000][PE] mean and std.dev: (331.89, 188.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 369.480 CPU sec, 20.657 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520382, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 276, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (293.95, 216.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 370.254 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520434, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 321, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (305.20, 162.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1788, 4213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11373)
[0000][PE] mean and std.dev: (2156.75, 1728.43)
[0000][PE] low and high boundaries for proper pairs: (1, 14953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 370.748 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520441, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 252, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (892.05, 1326.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.85, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 369.660 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520295, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 285, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (541.61, 602.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (747, 1319, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (1141.67, 623.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 1132, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (1106.10, 867.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 369.082 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520556, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 284, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (565.71, 661.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1640, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1313.00, 746.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 374.574 CPU sec, 20.950 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520905, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 224, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (585.12, 755.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.92, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 369.960 CPU sec, 20.697 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520709, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (61, 301, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 946)
[0000][PE] mean and std.dev: (252.19, 171.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 370.810 CPU sec, 20.723 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520363, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 221, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1205)
[0000][PE] mean and std.dev: (229.23, 121.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1741, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4784)
[0000][PE] mean and std.dev: (1489.00, 661.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 370.056 CPU sec, 20.723 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520960, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 369, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (671.71, 696.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1974, 4753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12755)
[0000][PE] mean and std.dev: (2365.25, 2016.68)
[0000][PE] low and high boundaries for proper pairs: (1, 16756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 370.712 CPU sec, 20.754 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520486, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 481, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (850.19, 934.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1358, 3487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9057)
[0000][PE] mean and std.dev: (2000.46, 1822.19)
[0000][PE] low and high boundaries for proper pairs: (1, 11842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 373.091 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520727, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 303, 628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1554)
[0000][PE] mean and std.dev: (283.17, 253.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 367.588 CPU sec, 20.541 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520654, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 331, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (618.06, 686.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 369.973 CPU sec, 20.685 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520535, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 215, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 813)
[0000][PE] mean and std.dev: (223.47, 123.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.482 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520399, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 369, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1657)
[0000][PE] mean and std.dev: (385.45, 256.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 370.912 CPU sec, 20.739 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520896, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 429, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (625.70, 718.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 370.568 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520626, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 243, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (749.41, 902.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.506 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520156, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 356, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 897)
[0000][PE] mean and std.dev: (313.67, 159.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1471, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (1239.89, 444.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 373.168 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520818, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 191, 289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (185.29, 88.15)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 983, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2448)
[0000][PE] mean and std.dev: (1043.70, 472.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 371.421 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520952, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 354, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1482)
[0000][PE] mean and std.dev: (362.25, 232.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 367.535 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 521117, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 238, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (281.68, 167.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.577 CPU sec, 20.865 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520424, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 353, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (611.81, 618.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 370.037 CPU sec, 20.718 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520993, 13, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 212, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (279.72, 230.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 733, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7827)
[0000][PE] mean and std.dev: (1310.38, 1396.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10360)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 368.076 CPU sec, 20.600 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520664, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 323, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (330.28, 236.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1544, 1829, 3190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (2175.50, 1220.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 369.690 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520489, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 276, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2074)
[0000][PE] mean and std.dev: (432.37, 418.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1550, 3147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8343)
[0000][PE] mean and std.dev: (1839.80, 1480.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 370.652 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520297, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (80, 200, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (848.29, 1112.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1911, 5344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14012)
[0000][PE] mean and std.dev: (2797.67, 2392.34)
[0000][PE] low and high boundaries for proper pairs: (1, 18346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 370.714 CPU sec, 20.754 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520192, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 266, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1110)
[0000][PE] mean and std.dev: (231.19, 136.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1208, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (1234.10, 531.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 370.991 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520567, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 323, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (300.33, 181.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 371.721 CPU sec, 20.854 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520702, 16, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 380, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (824.88, 820.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (351, 4126, 6201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17901)
[0000][PE] mean and std.dev: (3428.88, 3122.89)
[0000][PE] low and high boundaries for proper pairs: (1, 23751)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 371.896 CPU sec, 20.819 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520602, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 208, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 685)
[0000][PE] mean and std.dev: (233.69, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 367.748 CPU sec, 20.562 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520525, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 357, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (482.25, 463.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 369.783 CPU sec, 20.681 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520822, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 306, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 952)
[0000][PE] mean and std.dev: (274.61, 200.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 368.943 CPU sec, 20.636 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520721, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 345, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2104)
[0000][PE] mean and std.dev: (420.04, 346.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 370.175 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520289, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 343, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1960)
[0000][PE] mean and std.dev: (439.71, 428.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 370.297 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520195, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 292, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (781.63, 1052.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 371.169 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520514, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 230, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (566.91, 678.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.68, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 372.890 CPU sec, 20.875 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520383, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 256, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 758)
[0000][PE] mean and std.dev: (239.33, 119.60)
[0000][PE] low and high boundaries for proper pairs: (1, 954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 372.896 CPU sec, 20.880 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520880, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 303, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (326.16, 261.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.66, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 371.810 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520787, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 205, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 963)
[0000][PE] mean and std.dev: (289.14, 178.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 370.038 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520670, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 360, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1165)
[0000][PE] mean and std.dev: (323.24, 193.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 370.677 CPU sec, 20.736 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520419, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 341, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2083)
[0000][PE] mean and std.dev: (374.50, 328.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.860 CPU sec, 20.864 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520136, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 346, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (570.06, 536.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 368.555 CPU sec, 20.611 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520364, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 318, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (472.39, 443.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.812 CPU sec, 20.745 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520411, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 298, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (652.48, 821.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 373.036 CPU sec, 20.850 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520393, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 418, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1438)
[0000][PE] mean and std.dev: (338.27, 232.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 369.641 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520737, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 301, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (279.88, 165.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1492, 2430, 4731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11209)
[0000][PE] mean and std.dev: (2919.92, 2264.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 372.477 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520466, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 358, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2093)
[0000][PE] mean and std.dev: (374.07, 274.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (659, 1564, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5936)
[0000][PE] mean and std.dev: (1620.33, 1426.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7695)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 372.710 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520618, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 306, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (389.55, 391.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 371.917 CPU sec, 20.798 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520751, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 320, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1246)
[0000][PE] mean and std.dev: (312.44, 222.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 371.238 CPU sec, 20.784 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520153, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 367, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (530.10, 492.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 371.989 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520466, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 359, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2006)
[0000][PE] mean and std.dev: (592.62, 569.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 372.576 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520753, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 332, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (595.30, 469.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 370.313 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520594, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 303, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (339.10, 297.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 371.084 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520731, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 350, 488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1094)
[0000][PE] mean and std.dev: (297.69, 140.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 369.886 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520607, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 363, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (606.50, 682.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 370.264 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520817, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 222, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2002)
[0000][PE] mean and std.dev: (317.68, 398.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 371.319 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520888, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 325, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (651.93, 709.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 369.857 CPU sec, 20.680 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520443, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 349, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (613.55, 637.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 368.987 CPU sec, 20.643 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520414, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 317, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1003)
[0000][PE] mean and std.dev: (348.09, 197.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 370.464 CPU sec, 20.733 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520277, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 232, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 934)
[0000][PE] mean and std.dev: (257.14, 185.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.77, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 370.494 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520254, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 214, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (390.33, 341.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1523, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (2084.18, 1761.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 373.018 CPU sec, 20.879 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520913, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 213, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 784)
[0000][PE] mean and std.dev: (243.11, 122.15)
[0000][PE] low and high boundaries for proper pairs: (1, 985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 367.070 CPU sec, 20.531 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520691, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 297, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (253.12, 151.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 368.588 CPU sec, 20.626 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520802, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 197, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 815)
[0000][PE] mean and std.dev: (203.96, 95.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1286, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1279.62, 694.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 369.021 CPU sec, 20.645 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520459, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 402, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5568)
[0000][PE] mean and std.dev: (1040.65, 1303.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 374.169 CPU sec, 20.959 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520037, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 374, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (530.83, 481.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 2058, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (1655.56, 863.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 371.731 CPU sec, 20.765 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520902, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 271, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (256.95, 118.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 370.752 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520713, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 267, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 843)
[0000][PE] mean and std.dev: (275.78, 177.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 369.666 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520626, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 388, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (588.96, 508.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 369.859 CPU sec, 20.693 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520766, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 457, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (596.21, 491.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1585, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (1519.56, 555.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 369.475 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520832, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 279, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (242.46, 108.95)
[0000][PE] low and high boundaries for proper pairs: (1, 868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1292, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (1221.20, 417.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 369.393 CPU sec, 20.645 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520439, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 323, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (551.60, 597.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 371.512 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520096, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 221, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1394)
[0000][PE] mean and std.dev: (272.82, 192.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 372.168 CPU sec, 20.804 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520621, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 290, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (300.67, 282.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 369.263 CPU sec, 20.733 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520309, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 319, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2138)
[0000][PE] mean and std.dev: (440.46, 356.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.761 CPU sec, 20.834 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520821, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 256, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 980)
[0000][PE] mean and std.dev: (260.60, 121.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1221, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1420.30, 789.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 371.962 CPU sec, 20.834 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520464, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 247, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (280.55, 253.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 372.284 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520326, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 388, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (472.83, 343.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.842 CPU sec, 20.806 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520416, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 332, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (627.47, 601.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 373.270 CPU sec, 20.894 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520748, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 204, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 945)
[0000][PE] mean and std.dev: (256.57, 200.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1480, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (334, 2534)
[0000][PE] mean and std.dev: (1301.86, 316.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 372.167 CPU sec, 20.823 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520243, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 262, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 623)
[0000][PE] mean and std.dev: (210.76, 89.44)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.46, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 371.382 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520187, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 375, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (521.55, 488.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 373.111 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520162, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 369, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2668)
[0000][PE] mean and std.dev: (495.52, 480.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 373.667 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520565, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 392, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (624.14, 536.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (390, 2350, 5146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14658)
[0000][PE] mean and std.dev: (2844.00, 2695.45)
[0000][PE] low and high boundaries for proper pairs: (1, 19414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 370.690 CPU sec, 20.732 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520312, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 207, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (658.00, 715.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 371.641 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520248, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 377, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (290.11, 133.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 373.379 CPU sec, 20.898 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520847, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 372, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (417.14, 342.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 369.932 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520681, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 375, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (745.60, 855.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1210, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5693)
[0000][PE] mean and std.dev: (1837.93, 1143.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 369.623 CPU sec, 20.699 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520412, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 612, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (784.50, 848.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 372.790 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520617, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 235, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2120)
[0000][PE] mean and std.dev: (469.67, 499.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 371.325 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520615, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 349, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7257)
[0000][PE] mean and std.dev: (1239.08, 1635.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 370.030 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520825, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 233, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (251.50, 158.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 369.423 CPU sec, 20.691 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 521173, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 321, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1414)
[0000][PE] mean and std.dev: (369.04, 294.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.62, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 369.624 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520573, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 218, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 865)
[0000][PE] mean and std.dev: (194.94, 94.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 370.349 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520363, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 346, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (837.79, 889.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 369.170 CPU sec, 20.659 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520551, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 218, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1209)
[0000][PE] mean and std.dev: (293.70, 241.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 368.838 CPU sec, 20.619 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520370, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 320, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1381)
[0000][PE] mean and std.dev: (417.80, 330.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 370.948 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520436, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 222, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (415.16, 405.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 371.203 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519890, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 298, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1834)
[0000][PE] mean and std.dev: (437.88, 445.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1531, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7481)
[0000][PE] mean and std.dev: (1856.46, 1468.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 373.419 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520651, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 387, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (518.83, 399.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 1476, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1554.40, 1171.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 370.936 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520671, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 512, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1857)
[0000][PE] mean and std.dev: (555.53, 357.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 371.595 CPU sec, 20.793 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520762, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 236, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (268.95, 115.81)
[0000][PE] low and high boundaries for proper pairs: (1, 939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 370.925 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520490, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 263, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 785)
[0000][PE] mean and std.dev: (241.09, 102.03)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 371.473 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520960, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 241, 720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1796)
[0000][PE] mean and std.dev: (411.06, 386.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 369.512 CPU sec, 20.656 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520554, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 348, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (549.58, 631.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 369.314 CPU sec, 20.651 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521199, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 306, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (497.84, 452.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 366.706 CPU sec, 20.505 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520513, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 330, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (781.74, 1089.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 371.072 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520255, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 333, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (311.32, 197.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 373.332 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520576, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 358, 3572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10350)
[0000][PE] mean and std.dev: (1345.46, 1785.54)
[0000][PE] low and high boundaries for proper pairs: (1, 13739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 369.471 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521060, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 325, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 896)
[0000][PE] mean and std.dev: (285.32, 171.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1843, 4141, 5323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12283)
[0000][PE] mean and std.dev: (3519.90, 2185.25)
[0000][PE] low and high boundaries for proper pairs: (1, 15763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 371.324 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520148, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 344, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1423)
[0000][PE] mean and std.dev: (271.12, 155.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 369.744 CPU sec, 20.694 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520713, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 323, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (333.18, 264.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 370.481 CPU sec, 20.731 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520310, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 232, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1136)
[0000][PE] mean and std.dev: (293.21, 209.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 370.624 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520562, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 340, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1269)
[0000][PE] mean and std.dev: (326.42, 227.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 371.239 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520375, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 446, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5715)
[0000][PE] mean and std.dev: (1014.71, 1274.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 369.671 CPU sec, 20.703 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 521153, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 194, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (242.79, 155.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.70, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 370.236 CPU sec, 20.765 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520480, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 200, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (286.95, 184.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 371.723 CPU sec, 20.820 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520766, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 305, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 691)
[0000][PE] mean and std.dev: (266.85, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1703, 2257, 2964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5486)
[0000][PE] mean and std.dev: (2043.33, 815.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 370.053 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520360, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 360, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (884.10, 1057.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (950, 1681, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5822)
[0000][PE] mean and std.dev: (1517.67, 976.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7446)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1041, 4694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12612)
[0000][PE] mean and std.dev: (2311.86, 2308.20)
[0000][PE] low and high boundaries for proper pairs: (1, 16571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 369.922 CPU sec, 20.707 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520773, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 270, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (368.60, 309.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 369.890 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520356, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 227, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (446.10, 474.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 371.463 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520248, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 307, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1567)
[0000][PE] mean and std.dev: (438.62, 376.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.63, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 370.810 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520562, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 365, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (341.83, 236.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 370.027 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520897, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 319, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (512.37, 648.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 366.012 CPU sec, 20.471 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520259, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 285, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1232)
[0000][PE] mean and std.dev: (277.35, 222.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1232, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (1099.27, 456.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 371.327 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520698, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 287, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1603)
[0000][PE] mean and std.dev: (383.08, 358.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (584, 2826, 3157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8303)
[0000][PE] mean and std.dev: (2405.80, 1991.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10876)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 367.911 CPU sec, 20.572 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520270, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 212, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1257)
[0000][PE] mean and std.dev: (301.19, 314.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1761, 2831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6489)
[0000][PE] mean and std.dev: (2085.36, 1274.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 370.845 CPU sec, 20.757 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520824, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 221, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (270.56, 189.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1283, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6557)
[0000][PE] mean and std.dev: (1783.78, 1493.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 367.108 CPU sec, 20.545 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520798, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 424, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (813.62, 811.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 369.303 CPU sec, 20.662 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521074, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 210, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 721)
[0000][PE] mean and std.dev: (199.21, 62.12)
[0000][PE] low and high boundaries for proper pairs: (1, 903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 370.910 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520601, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 261, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 815)
[0000][PE] mean and std.dev: (228.96, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 366.456 CPU sec, 20.489 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520630, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 328, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 995)
[0000][PE] mean and std.dev: (332.70, 232.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 368.020 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520843, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 200, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1822)
[0000][PE] mean and std.dev: (440.83, 507.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 368.865 CPU sec, 20.680 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520420, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 314, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (549.96, 576.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1466, 3571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8797)
[0000][PE] mean and std.dev: (2072.92, 1537.78)
[0000][PE] low and high boundaries for proper pairs: (1, 11410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 370.847 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520519, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 280, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (501.57, 456.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 371.838 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520852, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 195, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (197.24, 95.43)
[0000][PE] low and high boundaries for proper pairs: (1, 904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 370.294 CPU sec, 20.675 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520270, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 428, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (697.27, 726.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 370.067 CPU sec, 20.705 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520211, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 387, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (608.46, 526.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 372.934 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520895, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 275, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (541.57, 592.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1618, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (1510.50, 720.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 367.095 CPU sec, 20.597 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520180, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 199, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1079)
[0000][PE] mean and std.dev: (179.75, 116.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 1642, 2995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8633)
[0000][PE] mean and std.dev: (1981.58, 2385.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11524)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1515, 3981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9961)
[0000][PE] mean and std.dev: (2517.91, 2307.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 369.370 CPU sec, 20.672 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520672, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 381, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1224)
[0000][PE] mean and std.dev: (356.85, 148.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (289, 1395, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5305)
[0000][PE] mean and std.dev: (1339.00, 1113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6977)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 369.740 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520565, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 296, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1827)
[0000][PE] mean and std.dev: (427.79, 384.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 369.288 CPU sec, 20.653 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520944, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 232, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (752.73, 1005.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1795, 5082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13482)
[0000][PE] mean and std.dev: (2825.71, 2480.30)
[0000][PE] low and high boundaries for proper pairs: (1, 17682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 371.175 CPU sec, 20.745 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520178, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 309, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2606)
[0000][PE] mean and std.dev: (638.81, 640.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1630, 3115, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7318)
[0000][PE] mean and std.dev: (3127.90, 1610.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 372.306 CPU sec, 20.868 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520498, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 205, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (273.74, 267.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 368.939 CPU sec, 20.664 real sec
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520375, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 1161, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1260.28, 1358.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 369.174 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520580, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 419, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (827.43, 899.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1795, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8247)
[0000][PE] mean and std.dev: (2256.50, 1977.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 368.115 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520620, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 334, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1662)
[0000][PE] mean and std.dev: (324.24, 280.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.70, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1290, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (1249.75, 483.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 369.339 CPU sec, 20.653 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520417, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 394, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1439)
[0000][PE] mean and std.dev: (433.45, 308.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 370.333 CPU sec, 20.712 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520033, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 200, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1232)
[0000][PE] mean and std.dev: (255.78, 198.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 370.717 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520645, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (81, 197, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 882)
[0000][PE] mean and std.dev: (206.25, 130.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 372.596 CPU sec, 20.866 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520198, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 397, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1893)
[0000][PE] mean and std.dev: (455.57, 429.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 372.030 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520708, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 191, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 841)
[0000][PE] mean and std.dev: (215.97, 161.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.61, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 367.528 CPU sec, 20.535 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520463, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 225, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 748)
[0000][PE] mean and std.dev: (283.11, 154.44)
[0000][PE] low and high boundaries for proper pairs: (1, 935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 369.864 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520672, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 403, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (648.88, 680.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 369.685 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520448, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 320, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7070)
[0000][PE] mean and std.dev: (1058.45, 1424.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.39, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1854, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6394)
[0000][PE] mean and std.dev: (2008.67, 1387.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 367.172 CPU sec, 20.539 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520372, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 369, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (637.12, 745.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.214 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520775, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 471, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (949.48, 1121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 366.848 CPU sec, 20.497 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519952, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 258, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1341)
[0000][PE] mean and std.dev: (268.48, 177.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 372.943 CPU sec, 20.892 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520549, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 224, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (561.10, 689.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 370.110 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520269, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 280, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (257.29, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 370.829 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520649, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 226, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1404)
[0000][PE] mean and std.dev: (316.00, 239.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.68, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.152 CPU sec, 20.628 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520377, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 258, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (316.27, 223.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.87, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1335, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (481, 1991)
[0000][PE] mean and std.dev: (1172.50, 209.31)
[0000][PE] low and high boundaries for proper pairs: (179, 2293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 371.016 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520425, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 258, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 862)
[0000][PE] mean and std.dev: (309.38, 135.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 372.198 CPU sec, 20.868 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520143, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 307, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (400.05, 401.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (506, 2815, 5848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16532)
[0000][PE] mean and std.dev: (3494.64, 3219.70)
[0000][PE] low and high boundaries for proper pairs: (1, 21874)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 372.304 CPU sec, 20.823 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520536, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 344, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (553.59, 609.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 371.583 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520257, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 210, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1127)
[0000][PE] mean and std.dev: (243.06, 195.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (760, 2082, 4677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12511)
[0000][PE] mean and std.dev: (2951.80, 3027.27)
[0000][PE] low and high boundaries for proper pairs: (1, 16428)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 369.570 CPU sec, 20.678 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520384, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 205, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (228.15, 97.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 370.520 CPU sec, 20.767 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520582, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 347, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1825)
[0000][PE] mean and std.dev: (440.11, 388.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 371.134 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520399, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 347, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (493.07, 523.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.85, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 370.134 CPU sec, 20.691 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520483, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 395, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1758)
[0000][PE] mean and std.dev: (422.56, 225.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 368.436 CPU sec, 20.612 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520850, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 317, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1240)
[0000][PE] mean and std.dev: (318.00, 163.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 367.856 CPU sec, 20.575 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520751, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 380, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (632.07, 622.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1881, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (1682.00, 651.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 372.576 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520317, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 258, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1913)
[0000][PE] mean and std.dev: (356.65, 332.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 372.041 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520424, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 288, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1521)
[0000][PE] mean and std.dev: (327.68, 256.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.40, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 371.238 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520394, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 387, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (407.33, 422.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 369.495 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520400, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 433, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (582.46, 483.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 371.469 CPU sec, 20.819 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520336, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 252, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1742)
[0000][PE] mean and std.dev: (292.06, 257.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 373.429 CPU sec, 20.863 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520579, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 259, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 856)
[0000][PE] mean and std.dev: (247.56, 181.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1484, 3850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9530)
[0000][PE] mean and std.dev: (1773.00, 1252.95)
[0000][PE] low and high boundaries for proper pairs: (1, 12370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 374.832 CPU sec, 20.966 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520540, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 293, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (316.16, 195.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 369.885 CPU sec, 20.709 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520798, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 215, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 723)
[0000][PE] mean and std.dev: (228.38, 103.77)
[0000][PE] low and high boundaries for proper pairs: (1, 909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 372.798 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520173, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 306, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1294)
[0000][PE] mean and std.dev: (366.07, 293.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 2382, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8996)
[0000][PE] mean and std.dev: (2192.55, 1629.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11843)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.568 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520726, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 338, 641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1477)
[0000][PE] mean and std.dev: (368.84, 282.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 371.823 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520470, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 289, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (259.84, 169.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 368.894 CPU sec, 20.605 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000236 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520527, 2, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 352, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1094.73, 1471.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 370.865 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520984, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 493, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (645.77, 577.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 367.578 CPU sec, 20.613 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520795, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 298, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (440.90, 379.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.19, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 367.616 CPU sec, 20.588 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520746, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 356, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1758)
[0000][PE] mean and std.dev: (465.38, 412.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1025, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (1260.54, 704.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 369.093 CPU sec, 20.712 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520660, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 207, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 796)
[0000][PE] mean and std.dev: (215.42, 102.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 369.932 CPU sec, 20.698 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520518, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 214, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (305.19, 223.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 369.512 CPU sec, 20.674 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520323, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 192, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (717.05, 889.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1839, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7415)
[0000][PE] mean and std.dev: (1659.75, 1050.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 370.789 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520052, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 305, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (661.27, 857.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.75, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1229, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (413, 2318)
[0000][PE] mean and std.dev: (1195.25, 270.12)
[0000][PE] low and high boundaries for proper pairs: (32, 2699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 372.595 CPU sec, 20.848 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520282, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 233, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (255.53, 164.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 369.447 CPU sec, 20.703 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520832, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 220, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (251.06, 141.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 369.972 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520228, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 230, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (251.69, 126.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1783, 4586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11164)
[0000][PE] mean and std.dev: (2624.92, 2382.69)
[0000][PE] low and high boundaries for proper pairs: (1, 14453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 371.763 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520639, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 401, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (601.18, 530.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 370.119 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520376, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 407, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (684.19, 639.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1404, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (1263.56, 500.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 371.892 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520721, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 240, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (666.86, 968.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 369.979 CPU sec, 20.718 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520742, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 267, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 821)
[0000][PE] mean and std.dev: (244.06, 105.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1340, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (1259.31, 940.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 371.255 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520732, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (107, 253, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (498.52, 580.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.778 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520597, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 315, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1752)
[0000][PE] mean and std.dev: (367.29, 359.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1397, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1423.83, 697.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 368.598 CPU sec, 20.621 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520730, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 305, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 933)
[0000][PE] mean and std.dev: (265.21, 101.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 370.823 CPU sec, 20.764 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520758, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 270, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (258.20, 123.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 369.087 CPU sec, 20.633 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520373, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 217, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (244.56, 178.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 370.952 CPU sec, 20.756 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520580, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 301, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2106)
[0000][PE] mean and std.dev: (415.52, 447.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 368.191 CPU sec, 20.600 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520791, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 303, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (327.86, 258.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 371.684 CPU sec, 20.830 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520228, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 241, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1267)
[0000][PE] mean and std.dev: (283.11, 217.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 371.638 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520902, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 348, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (990.31, 1192.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1396, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (1518.11, 742.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 368.384 CPU sec, 20.687 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520895, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 289, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (437.04, 492.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 371.191 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520834, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 413, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (741.63, 694.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 368.240 CPU sec, 20.609 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520679, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 381, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (652.62, 678.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 370.647 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520235, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 293, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (662.09, 750.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 367.974 CPU sec, 20.581 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520670, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 378, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1989)
[0000][PE] mean and std.dev: (529.92, 405.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 370.700 CPU sec, 20.731 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520743, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 530, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (688.20, 510.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 369.043 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520454, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 258, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1334)
[0000][PE] mean and std.dev: (293.89, 186.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 367.362 CPU sec, 20.557 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520471, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 298, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (286.92, 100.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.54, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 370.026 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521105, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 237, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (507.43, 539.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 368.014 CPU sec, 20.595 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520352, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 314, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 978)
[0000][PE] mean and std.dev: (279.29, 143.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.95, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 371.208 CPU sec, 20.769 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520724, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 401, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1310)
[0000][PE] mean and std.dev: (325.23, 138.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 368.411 CPU sec, 20.605 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520297, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 318, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (440.75, 481.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1238, 3811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10223)
[0000][PE] mean and std.dev: (1949.60, 1754.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 368.907 CPU sec, 20.642 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520393, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 359, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (592.54, 629.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 368.506 CPU sec, 20.622 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520811, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 274, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2098)
[0000][PE] mean and std.dev: (421.15, 360.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 369.853 CPU sec, 20.699 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520947, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 211, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 896)
[0000][PE] mean and std.dev: (271.42, 174.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 365.051 CPU sec, 20.418 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520484, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 236, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (245.05, 167.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.51, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (473, 1594, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1722.10, 1640.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8282)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1084, 4848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13398)
[0000][PE] mean and std.dev: (2340.09, 2366.13)
[0000][PE] low and high boundaries for proper pairs: (1, 17673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 372.320 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520669, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 368, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (298.07, 149.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 370.379 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520928, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 321, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1804)
[0000][PE] mean and std.dev: (419.71, 343.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 366.248 CPU sec, 20.487 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520684, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 264, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (324.32, 304.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.60, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 367.326 CPU sec, 20.560 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520009, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 363, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (476.19, 366.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 367.691 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520669, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 353, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (419.16, 388.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 366.497 CPU sec, 20.514 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520720, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 322, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (249.06, 137.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.18, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 366.199 CPU sec, 20.527 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520088, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 610, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7466)
[0000][PE] mean and std.dev: (989.70, 1017.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 367.542 CPU sec, 20.548 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520268, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 201, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 867)
[0000][PE] mean and std.dev: (221.35, 153.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 368.106 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 521012, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 315, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (572.66, 644.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 365.550 CPU sec, 20.427 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520522, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 315, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (553.92, 610.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 370.161 CPU sec, 20.717 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520134, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 310, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (484.47, 482.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 373.021 CPU sec, 20.887 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520788, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 283, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1106)
[0000][PE] mean and std.dev: (268.70, 133.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 848, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (919.60, 566.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 369.862 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520733, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 206, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (402.81, 454.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 366.996 CPU sec, 20.507 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520619, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 252, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 867)
[0000][PE] mean and std.dev: (231.67, 141.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 372.784 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520694, 14, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 322, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2328)
[0000][PE] mean and std.dev: (475.56, 598.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (159, 524, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (940.86, 991.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5327)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 372.755 CPU sec, 20.864 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520524, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 205, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1372)
[0000][PE] mean and std.dev: (320.53, 284.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 366.994 CPU sec, 20.574 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520659, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 331, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (427.14, 415.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 366.881 CPU sec, 20.568 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520451, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 230, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 947)
[0000][PE] mean and std.dev: (226.05, 117.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 367.892 CPU sec, 20.634 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520025, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 190, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 524)
[0000][PE] mean and std.dev: (203.86, 86.66)
[0000][PE] low and high boundaries for proper pairs: (1, 645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1467, 2155, 5936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14874)
[0000][PE] mean and std.dev: (2933.64, 2139.04)
[0000][PE] low and high boundaries for proper pairs: (1, 19343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 370.680 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520560, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 420, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (608.58, 610.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 367.670 CPU sec, 20.551 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520236, 6, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 180, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (212.92, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 369.189 CPU sec, 20.705 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520731, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 294, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (710.63, 804.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 367.610 CPU sec, 20.590 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520654, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 282, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (749.60, 853.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 367.999 CPU sec, 20.584 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520230, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 213, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (487.22, 659.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.85, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 369.096 CPU sec, 20.685 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519899, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 335, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (893.67, 1073.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.56, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 372.877 CPU sec, 20.919 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520726, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 205, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 681)
[0000][PE] mean and std.dev: (199.81, 91.15)
[0000][PE] low and high boundaries for proper pairs: (1, 852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1170, 2793, 5832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15156)
[0000][PE] mean and std.dev: (3526.20, 2768.44)
[0000][PE] low and high boundaries for proper pairs: (1, 19818)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 369.518 CPU sec, 20.685 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 520481, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 212, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 862)
[0000][PE] mean and std.dev: (234.34, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1371, 1791, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (2141.91, 1403.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 371.257 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520253, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 254, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (277.57, 204.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 370.600 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520311, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 348, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (400.33, 368.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.603 CPU sec, 20.704 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520669, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 270, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1775)
[0000][PE] mean and std.dev: (309.13, 190.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 370.465 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520948, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 244, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1527)
[0000][PE] mean and std.dev: (287.44, 199.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 364.707 CPU sec, 20.448 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520528, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 321, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (306.22, 277.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 369.380 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519993, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 247, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 820)
[0000][PE] mean and std.dev: (286.28, 179.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1370, 3253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8153)
[0000][PE] mean and std.dev: (1873.09, 1820.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.546 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520617, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 296, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (233.47, 116.05)
[0000][PE] low and high boundaries for proper pairs: (1, 974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.02, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.339 CPU sec, 20.814 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520731, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 401, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (691.28, 720.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 368.649 CPU sec, 20.623 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519969, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 304, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 993)
[0000][PE] mean and std.dev: (282.90, 167.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 375.466 CPU sec, 21.007 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520791, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 233, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1428)
[0000][PE] mean and std.dev: (236.00, 174.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 368.420 CPU sec, 20.658 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520459, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 336, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (336.14, 225.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 371.993 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520738, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 283, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (371.47, 329.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.49, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 370.381 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520145, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 323, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 763)
[0000][PE] mean and std.dev: (243.55, 89.41)
[0000][PE] low and high boundaries for proper pairs: (1, 955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (501, 1582, 3698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10092)
[0000][PE] mean and std.dev: (2139.40, 2056.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13289)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 371.638 CPU sec, 20.825 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520961, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 251, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1545)
[0000][PE] mean and std.dev: (241.64, 164.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.118 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520307, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 350, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (494.65, 397.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 370.224 CPU sec, 20.706 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520379, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 403, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (603.94, 586.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1605, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7850)
[0000][PE] mean and std.dev: (2079.91, 1732.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 370.414 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520328, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 198, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 896)
[0000][PE] mean and std.dev: (207.84, 105.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 370.958 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520227, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 229, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1655)
[0000][PE] mean and std.dev: (399.55, 427.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 370.340 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520660, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 215, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 658)
[0000][PE] mean and std.dev: (223.21, 109.57)
[0000][PE] low and high boundaries for proper pairs: (1, 819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 371.429 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520515, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 244, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (263.57, 147.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1311, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (504, 2154)
[0000][PE] mean and std.dev: (1334.33, 274.26)
[0000][PE] low and high boundaries for proper pairs: (174, 2484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 372.302 CPU sec, 20.818 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520077, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 397, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (693.75, 703.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.42, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 372.161 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520637, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 374, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (348.07, 294.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 371.370 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520686, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 215, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1941)
[0000][PE] mean and std.dev: (276.09, 218.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 369.195 CPU sec, 20.698 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520417, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 211, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2180)
[0000][PE] mean and std.dev: (319.61, 324.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.80, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 1494, 3994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11402)
[0000][PE] mean and std.dev: (2343.64, 2391.39)
[0000][PE] low and high boundaries for proper pairs: (1, 15106)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 371.131 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520384, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 250, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (290.70, 202.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 368.720 CPU sec, 20.616 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520725, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 212, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 712)
[0000][PE] mean and std.dev: (185.11, 94.43)
[0000][PE] low and high boundaries for proper pairs: (1, 897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 368.497 CPU sec, 20.581 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520197, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 204, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (389.81, 403.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 371.534 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520586, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 343, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 834)
[0000][PE] mean and std.dev: (246.50, 106.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 367.199 CPU sec, 20.555 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520526, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 464, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (680.25, 665.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 2075, 4151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12007)
[0000][PE] mean and std.dev: (2145.10, 2091.43)
[0000][PE] low and high boundaries for proper pairs: (1, 15935)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 371.470 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520856, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 303, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (632.88, 749.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 370.033 CPU sec, 20.729 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520084, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 194, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1597)
[0000][PE] mean and std.dev: (385.69, 420.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 371.843 CPU sec, 20.820 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520431, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 380, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (515.82, 418.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.61, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 370.320 CPU sec, 20.714 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521013, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 242, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (594.39, 673.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 370.726 CPU sec, 20.781 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519756, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 194, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1652)
[0000][PE] mean and std.dev: (389.30, 430.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 372.804 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520117, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 242, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 956)
[0000][PE] mean and std.dev: (257.65, 112.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 372.492 CPU sec, 20.850 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520780, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 255, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (275.00, 196.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.64, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 370.796 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520071, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 237, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (754.33, 995.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 371.490 CPU sec, 20.811 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520666, 13, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 216, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 709)
[0000][PE] mean and std.dev: (223.83, 119.57)
[0000][PE] low and high boundaries for proper pairs: (1, 889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (462, 822, 2917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7827)
[0000][PE] mean and std.dev: (1202.17, 1315.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10282)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 2297, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6178)
[0000][PE] mean and std.dev: (2139.10, 1173.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 371.513 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520697, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 284, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1848)
[0000][PE] mean and std.dev: (451.83, 458.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.15, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 368.689 CPU sec, 20.603 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520437, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 417, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2021)
[0000][PE] mean and std.dev: (382.38, 233.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1482, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1594.83, 699.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 372.696 CPU sec, 20.890 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520215, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 326, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (603.14, 607.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1636, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1397.10, 772.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 368.783 CPU sec, 20.621 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520975, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 291, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 786)
[0000][PE] mean and std.dev: (221.75, 141.18)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 366.434 CPU sec, 20.483 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520690, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 393, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (515.60, 373.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 367.878 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520572, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 291, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1180)
[0000][PE] mean and std.dev: (279.18, 140.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 371.276 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519951, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 313, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (320.91, 206.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 368.480 CPU sec, 20.640 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520635, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 280, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (358.62, 372.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 369.205 CPU sec, 20.642 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520804, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 337, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (876.29, 1082.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.09, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 372.602 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520541, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 194, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 681)
[0000][PE] mean and std.dev: (224.36, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1096, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1283.00, 867.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 371.043 CPU sec, 20.762 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520035, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 284, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (249.56, 131.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 370.058 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520729, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 237, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 692)
[0000][PE] mean and std.dev: (244.74, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 368.855 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520824, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 273, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1823)
[0000][PE] mean and std.dev: (413.68, 414.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 366.402 CPU sec, 20.527 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520683, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 357, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (771.30, 921.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 368.139 CPU sec, 20.607 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520663, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 287, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1490)
[0000][PE] mean and std.dev: (398.57, 387.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 370.720 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520588, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 360, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (775.33, 861.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 369.793 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520669, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 242, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 879)
[0000][PE] mean and std.dev: (237.00, 101.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 369.637 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520410, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 339, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (795.42, 922.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 371.583 CPU sec, 20.767 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520689, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 337, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 957)
[0000][PE] mean and std.dev: (266.08, 142.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1968, 4006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10756)
[0000][PE] mean and std.dev: (2467.90, 1890.49)
[0000][PE] low and high boundaries for proper pairs: (1, 14131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 370.895 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520513, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 238, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (539.63, 566.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 370.630 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520718, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 304, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 741)
[0000][PE] mean and std.dev: (243.00, 94.99)
[0000][PE] low and high boundaries for proper pairs: (1, 921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 367.867 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520592, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 316, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (304.59, 192.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 370.779 CPU sec, 20.769 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520747, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 223, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (232.11, 119.55)
[0000][PE] low and high boundaries for proper pairs: (1, 875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 365.734 CPU sec, 20.478 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520216, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 201, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 731)
[0000][PE] mean and std.dev: (162.45, 82.91)
[0000][PE] low and high boundaries for proper pairs: (1, 937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (371, 1084, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7010)
[0000][PE] mean and std.dev: (1569.00, 1530.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9223)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.465 CPU sec, 20.832 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520788, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 303, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 964)
[0000][PE] mean and std.dev: (281.46, 141.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 368.509 CPU sec, 20.600 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520556, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 234, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (338.32, 329.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1339, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9173)
[0000][PE] mean and std.dev: (2125.50, 1727.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 371.065 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520550, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 234, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (284.62, 222.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.467 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520698, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 226, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (612.75, 777.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1127, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7476)
[0000][PE] mean and std.dev: (1980.85, 1963.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 369.086 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520666, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 277, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (515.26, 515.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 371.738 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520668, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 361, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1913)
[0000][PE] mean and std.dev: (421.31, 435.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (825, 2304, 3929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10137)
[0000][PE] mean and std.dev: (2718.30, 2416.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13241)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1581, 3532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8294)
[0000][PE] mean and std.dev: (2219.50, 1665.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 372.376 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520588, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 377, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4851)
[0000][PE] mean and std.dev: (780.58, 986.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 374.491 CPU sec, 21.014 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520348, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 306, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (402.00, 293.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.56, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 373.289 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520344, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 370, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (614.95, 757.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.09, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 371.063 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520818, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 377, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (645.95, 589.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 370.293 CPU sec, 20.792 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520639, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 287, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (826.36, 1083.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1264, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (1352.80, 886.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 371.452 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520171, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 323, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1315)
[0000][PE] mean and std.dev: (289.22, 195.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.66, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 372.515 CPU sec, 20.832 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520193, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 206, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 724)
[0000][PE] mean and std.dev: (234.00, 106.77)
[0000][PE] low and high boundaries for proper pairs: (1, 907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (746, 1437, 8875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 25133)
[0000][PE] mean and std.dev: (3358.09, 3532.54)
[0000][PE] low and high boundaries for proper pairs: (1, 33262)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 373.386 CPU sec, 20.930 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520574, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 312, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1861)
[0000][PE] mean and std.dev: (396.80, 285.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.67, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (67, 508, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (690.00, 704.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3819)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 369.807 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520933, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 230, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 975)
[0000][PE] mean and std.dev: (257.17, 135.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 370.235 CPU sec, 20.720 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520627, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 267, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (259.18, 150.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 369.148 CPU sec, 20.715 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521169, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 517, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5502)
[0000][PE] mean and std.dev: (1056.65, 1317.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.63, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 1688, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7889)
[0000][PE] mean and std.dev: (1697.00, 1446.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 369.335 CPU sec, 20.659 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520550, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 398, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (410.29, 296.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1763, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (1704.20, 707.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 371.437 CPU sec, 20.821 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521168, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 269, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (697.90, 812.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 369.917 CPU sec, 20.708 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520463, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 355, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (310.46, 142.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 372.242 CPU sec, 20.889 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520710, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 323, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (651.04, 624.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 371.164 CPU sec, 20.726 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520351, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 305, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 821)
[0000][PE] mean and std.dev: (309.90, 131.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1204, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1450.60, 1006.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 370.860 CPU sec, 20.739 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520463, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (81, 172, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 819)
[0000][PE] mean and std.dev: (160.88, 114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 371.024 CPU sec, 20.770 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520453, 0, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 284, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (553.09, 653.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 374.913 CPU sec, 21.000 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520557, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 215, 300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 534)
[0000][PE] mean and std.dev: (206.50, 93.94)
[0000][PE] low and high boundaries for proper pairs: (1, 651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 373.121 CPU sec, 20.918 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520840, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 342, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (282.61, 213.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.279 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520956, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 218, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (296.85, 245.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 368.139 CPU sec, 20.607 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520432, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 379, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (581.59, 645.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 996, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1351.62, 1328.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 373.765 CPU sec, 20.917 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520320, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 401, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (624.76, 499.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 372.430 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520127, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 305, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2223)
[0000][PE] mean and std.dev: (436.81, 421.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.61, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 1385, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1655.50, 1548.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 374.507 CPU sec, 20.974 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520454, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 847, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1321.78, 1383.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 374.222 CPU sec, 20.953 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520732, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 198, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 769)
[0000][PE] mean and std.dev: (183.44, 118.58)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1705, 3981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10283)
[0000][PE] mean and std.dev: (2160.42, 1648.90)
[0000][PE] low and high boundaries for proper pairs: (1, 13434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 373.533 CPU sec, 20.901 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520475, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 260, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (525.81, 493.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1654, 4793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12277)
[0000][PE] mean and std.dev: (2508.62, 2244.49)
[0000][PE] low and high boundaries for proper pairs: (1, 16019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 371.485 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520344, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 372, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 888)
[0000][PE] mean and std.dev: (292.06, 187.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 372.650 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520232, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 312, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1628)
[0000][PE] mean and std.dev: (475.96, 417.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 374.486 CPU sec, 21.028 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520322, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 227, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1790)
[0000][PE] mean and std.dev: (389.25, 408.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 373.558 CPU sec, 20.914 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520520, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (81, 327, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1590)
[0000][PE] mean and std.dev: (324.81, 288.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 876, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1034.20, 550.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 371.493 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520732, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 266, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (359.33, 325.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 372.497 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520276, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 335, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (519.68, 435.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1651, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1099.00, 617.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 372.080 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520422, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 193, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (551.71, 643.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 373.939 CPU sec, 20.940 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520512, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 215, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 743)
[0000][PE] mean and std.dev: (233.55, 111.55)
[0000][PE] low and high boundaries for proper pairs: (1, 928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.80, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 374.229 CPU sec, 20.990 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520995, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 324, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (450.64, 574.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 370.116 CPU sec, 20.745 real sec
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520439, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 253, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 932)
[0000][PE] mean and std.dev: (265.96, 177.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1728, 3460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7974)
[0000][PE] mean and std.dev: (2013.85, 1102.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 372.541 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520641, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 239, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (227.75, 137.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 375.497 CPU sec, 21.030 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520672, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 373, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (741.55, 785.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 371.023 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520449, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 283, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1023)
[0000][PE] mean and std.dev: (277.53, 189.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 373.850 CPU sec, 20.985 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520466, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 308, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (557.59, 693.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 371.012 CPU sec, 20.778 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520080, 14, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 310, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (266.00, 121.73)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (407, 1358, 5138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14600)
[0000][PE] mean and std.dev: (2684.07, 2798.99)
[0000][PE] low and high boundaries for proper pairs: (1, 19331)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 372.568 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520721, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 581, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (994.14, 972.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (119, 533, 3653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10721)
[0000][PE] mean and std.dev: (1971.00, 2528.00)
[0000][PE] low and high boundaries for proper pairs: (1, 14255)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 371.948 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520336, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 357, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 704)
[0000][PE] mean and std.dev: (329.00, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 370.876 CPU sec, 20.759 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519994, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 195, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1015)
[0000][PE] mean and std.dev: (235.84, 165.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.45, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 371.982 CPU sec, 20.815 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520851, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 305, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1135)
[0000][PE] mean and std.dev: (279.55, 139.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 368.780 CPU sec, 20.633 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520866, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 296, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1059)
[0000][PE] mean and std.dev: (264.04, 178.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.19, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 429, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (864.67, 1045.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 371.266 CPU sec, 20.756 real sec
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520647, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 266, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (467.35, 409.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 372.520 CPU sec, 20.825 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520849, 8, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 209, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 974)
[0000][PE] mean and std.dev: (246.91, 196.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 372.369 CPU sec, 20.845 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520648, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 362, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (723.19, 848.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 374.049 CPU sec, 21.010 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520112, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 240, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1358)
[0000][PE] mean and std.dev: (371.40, 321.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 372.276 CPU sec, 20.848 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 521007, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 244, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (447.65, 568.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1374, 2356, 4010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9282)
[0000][PE] mean and std.dev: (2640.33, 1700.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11918)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 1292, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6554)
[0000][PE] mean and std.dev: (1378.50, 1073.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 372.670 CPU sec, 20.845 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520629, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 215, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1308)
[0000][PE] mean and std.dev: (277.88, 234.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 370.515 CPU sec, 20.737 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520422, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 244, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (870.88, 1256.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 371.281 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520882, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 268, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1116)
[0000][PE] mean and std.dev: (237.55, 104.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 368.915 CPU sec, 20.635 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520273, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 295, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2133)
[0000][PE] mean and std.dev: (401.47, 369.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 874, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1028.92, 652.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 373.594 CPU sec, 20.914 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520351, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 328, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1702)
[0000][PE] mean and std.dev: (340.94, 240.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1390, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6399)
[0000][PE] mean and std.dev: (2056.29, 1537.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 372.526 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520809, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 355, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (527.96, 462.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 370.675 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520562, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 364, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (742.31, 830.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 372.501 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520193, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 319, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1683)
[0000][PE] mean and std.dev: (408.18, 334.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.60, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 2127, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7438)
[0000][PE] mean and std.dev: (2074.67, 1199.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 372.879 CPU sec, 20.877 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520534, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 311, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (956.00, 1147.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1593, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (1417.73, 577.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 372.835 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520590, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 226, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 947)
[0000][PE] mean and std.dev: (254.41, 204.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 371.862 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520221, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 247, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (402.52, 420.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 373.290 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520698, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 184, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 824)
[0000][PE] mean and std.dev: (232.15, 168.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.61, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 369.256 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520795, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 278, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1005)
[0000][PE] mean and std.dev: (323.67, 230.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1305, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8075)
[0000][PE] mean and std.dev: (1974.27, 1820.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 371.047 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520493, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 205, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (227.67, 174.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 370.237 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520829, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 303, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (453.18, 385.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.92, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 371.101 CPU sec, 20.765 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520383, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 264, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (490.50, 627.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1757, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6587)
[0000][PE] mean and std.dev: (1422.88, 859.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 370.047 CPU sec, 20.721 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520280, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 318, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 995)
[0000][PE] mean and std.dev: (285.26, 90.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.31, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 371.925 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520408, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 278, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (232.32, 105.34)
[0000][PE] low and high boundaries for proper pairs: (1, 954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.76, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 370.749 CPU sec, 20.713 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520893, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 242, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 736)
[0000][PE] mean and std.dev: (215.41, 152.92)
[0000][PE] low and high boundaries for proper pairs: (1, 942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.72, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 371.506 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520575, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 292, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1448)
[0000][PE] mean and std.dev: (372.96, 246.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 370.799 CPU sec, 20.784 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520400, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 302, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1577)
[0000][PE] mean and std.dev: (350.79, 276.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 369.045 CPU sec, 20.635 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520510, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 244, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 537)
[0000][PE] mean and std.dev: (257.47, 92.46)
[0000][PE] low and high boundaries for proper pairs: (1, 646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 369.392 CPU sec, 20.651 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520126, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 372, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (359.69, 198.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 370.025 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520550, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 414, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (715.24, 794.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 370.843 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520551, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 468, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (719.26, 760.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 369.989 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520605, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 432, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1282)
[0000][PE] mean and std.dev: (471.83, 272.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.09, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 370.513 CPU sec, 20.725 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520583, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 362, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 975)
[0000][PE] mean and std.dev: (297.94, 142.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 369.466 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520361, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 316, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (297.74, 276.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 1537, 2889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7855)
[0000][PE] mean and std.dev: (1584.90, 1183.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 373.402 CPU sec, 20.928 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520690, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 286, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1781)
[0000][PE] mean and std.dev: (368.53, 278.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 1689, 5097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14923)
[0000][PE] mean and std.dev: (2778.00, 2789.02)
[0000][PE] low and high boundaries for proper pairs: (1, 19836)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 369.819 CPU sec, 20.714 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520217, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 249, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (428.60, 579.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 370.447 CPU sec, 20.758 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520348, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 318, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1118)
[0000][PE] mean and std.dev: (364.90, 196.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1694, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7780)
[0000][PE] mean and std.dev: (2091.10, 1657.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 367.987 CPU sec, 20.561 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520622, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 384, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (354.08, 149.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 371.234 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520605, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 359, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (579.12, 573.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1019, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6284)
[0000][PE] mean and std.dev: (1371.33, 1152.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 369.695 CPU sec, 20.647 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520596, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 280, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (666.63, 863.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 827, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1203.80, 1141.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 370.395 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520588, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 332, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (287.08, 191.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1789, 2834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6896)
[0000][PE] mean and std.dev: (2106.30, 1454.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 369.326 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520426, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 297, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2136)
[0000][PE] mean and std.dev: (437.13, 424.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 369.966 CPU sec, 20.711 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520433, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 202, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1054)
[0000][PE] mean and std.dev: (317.79, 259.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 369.021 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520767, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 332, 3905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11325)
[0000][PE] mean and std.dev: (1772.45, 2876.37)
[0000][PE] low and high boundaries for proper pairs: (1, 15035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.89, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 372.221 CPU sec, 20.856 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520723, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 293, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1618)
[0000][PE] mean and std.dev: (307.61, 256.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1636, 1998, 3161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6211)
[0000][PE] mean and std.dev: (2070.73, 979.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 371.241 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520646, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 278, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (481.22, 568.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1801, 3122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7200)
[0000][PE] mean and std.dev: (2174.92, 1561.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 371.776 CPU sec, 20.850 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520338, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 358, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (348.65, 283.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 2048, 4286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10532)
[0000][PE] mean and std.dev: (2706.73, 2161.30)
[0000][PE] low and high boundaries for proper pairs: (1, 13655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 371.656 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520525, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 264, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 696)
[0000][PE] mean and std.dev: (234.32, 98.34)
[0000][PE] low and high boundaries for proper pairs: (1, 868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1558, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1567.50, 666.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 372.491 CPU sec, 20.843 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520414, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 264, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (598.30, 646.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.443 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520915, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 361, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (845.26, 878.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1381, 1975, 3875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8863)
[0000][PE] mean and std.dev: (2150.40, 1282.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 372.189 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520434, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 206, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 827)
[0000][PE] mean and std.dev: (219.96, 99.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1466, 1949, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6089)
[0000][PE] mean and std.dev: (2097.09, 1281.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 373.922 CPU sec, 20.956 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520226, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 334, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (362.00, 283.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.56, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 375.363 CPU sec, 21.041 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520461, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 211, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (210.36, 100.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1573, 5175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13843)
[0000][PE] mean and std.dev: (2750.17, 2620.14)
[0000][PE] low and high boundaries for proper pairs: (1, 18177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 371.809 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520802, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 357, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (725.95, 910.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 2499, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6786)
[0000][PE] mean and std.dev: (1929.20, 1125.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 371.321 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520465, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 242, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (715.78, 890.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.56, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 373.267 CPU sec, 20.903 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520527, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 346, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (265.74, 128.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 372.062 CPU sec, 20.820 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520622, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 341, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (489.40, 458.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1290, 3443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8647)
[0000][PE] mean and std.dev: (1895.27, 1326.32)
[0000][PE] low and high boundaries for proper pairs: (1, 11249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 372.416 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520760, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 216, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (420.50, 487.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 371.103 CPU sec, 20.718 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520890, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 398, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (709.33, 746.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1061, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (1097.30, 531.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 369.949 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520860, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 401, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (517.04, 573.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.64, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 372.632 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520499, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 196, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (449.82, 487.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 372.577 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520683, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 220, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (217.90, 108.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 371.676 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520397, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 255, 398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 822)
[0000][PE] mean and std.dev: (234.21, 105.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 373.697 CPU sec, 20.930 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520290, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 362, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (338.56, 188.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1424, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5157)
[0000][PE] mean and std.dev: (1649.71, 1038.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 372.435 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520498, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 826, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (904.12, 817.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 373.841 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520586, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 353, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1836)
[0000][PE] mean and std.dev: (414.00, 360.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 370.228 CPU sec, 20.946 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000138 bp)...
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520589, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 350, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1713)
[0000][PE] mean and std.dev: (449.26, 397.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 372.703 CPU sec, 20.944 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520485, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 260, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (256.17, 103.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.89, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 375.769 CPU sec, 21.034 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520497, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 330, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (626.59, 717.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 371.313 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520676, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 360, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (487.18, 590.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1403, 1621, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6422)
[0000][PE] mean and std.dev: (1945.45, 1128.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 373.914 CPU sec, 20.941 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520856, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 293, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1923)
[0000][PE] mean and std.dev: (376.82, 334.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1443, 2053, 6158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15588)
[0000][PE] mean and std.dev: (3501.92, 2765.13)
[0000][PE] low and high boundaries for proper pairs: (1, 20303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 374.104 CPU sec, 20.928 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519941, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 239, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (403.46, 435.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.60, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 371.973 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520499, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (102, 236, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 882)
[0000][PE] mean and std.dev: (269.83, 179.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 372.767 CPU sec, 20.831 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520566, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 277, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1318)
[0000][PE] mean and std.dev: (245.88, 131.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 372.540 CPU sec, 20.848 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520538, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 312, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 950)
[0000][PE] mean and std.dev: (278.50, 166.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 370.904 CPU sec, 20.726 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520045, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 235, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (276.84, 142.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1422, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (1377.60, 942.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 373.508 CPU sec, 20.887 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520473, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 280, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 931)
[0000][PE] mean and std.dev: (249.96, 135.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 371.183 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520252, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 260, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1405)
[0000][PE] mean and std.dev: (269.67, 231.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 371.777 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521091, 10, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 367, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (369.63, 208.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 196, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (400.78, 526.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 372.418 CPU sec, 20.809 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 521137, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 316, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (444.00, 383.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 371.880 CPU sec, 20.800 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520658, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 313, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1556)
[0000][PE] mean and std.dev: (405.31, 295.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 375.599 CPU sec, 21.012 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520529, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 251, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (563.38, 673.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1274, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1491.55, 824.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 371.588 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520969, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 249, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1475)
[0000][PE] mean and std.dev: (391.41, 338.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.84, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 372.062 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520468, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 324, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (533.27, 661.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1840, 2993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6739)
[0000][PE] mean and std.dev: (2150.70, 1249.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 370.829 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520775, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 386, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (558.00, 511.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 373.197 CPU sec, 20.906 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519949, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 297, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2415)
[0000][PE] mean and std.dev: (440.00, 411.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 373.180 CPU sec, 20.877 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520642, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 318, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (582.21, 622.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (711, 1572, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1352.78, 1051.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 370.926 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 521069, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 197, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1336)
[0000][PE] mean and std.dev: (230.95, 171.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 368.350 CPU sec, 20.619 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520472, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 190, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 804)
[0000][PE] mean and std.dev: (201.21, 151.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 371.469 CPU sec, 20.778 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520286, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 332, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1795)
[0000][PE] mean and std.dev: (321.94, 290.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 374.390 CPU sec, 20.949 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520079, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 360, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (477.96, 416.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 375.066 CPU sec, 21.008 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520446, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 215, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (245.24, 150.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 374.350 CPU sec, 20.962 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520359, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 286, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (328.30, 267.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.06, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (357, 1540, 3293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9165)
[0000][PE] mean and std.dev: (1783.64, 1764.83)
[0000][PE] low and high boundaries for proper pairs: (1, 12101)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 373.397 CPU sec, 20.962 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520764, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 299, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (405.85, 366.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.919 CPU sec, 20.949 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520505, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 419, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (696.57, 813.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 371.308 CPU sec, 20.809 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520782, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 263, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (576.62, 682.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 368.416 CPU sec, 20.683 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520882, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (92, 212, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (517.50, 678.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 491, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8174)
[0000][PE] mean and std.dev: (1740.60, 2197.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10886)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 371.872 CPU sec, 20.818 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520593, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 195, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (208.00, 134.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 1189, 5165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14629)
[0000][PE] mean and std.dev: (2512.40, 2750.00)
[0000][PE] low and high boundaries for proper pairs: (1, 19361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 374.573 CPU sec, 21.018 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520447, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 310, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (576.43, 620.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 374.805 CPU sec, 21.054 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520385, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 262, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1002)
[0000][PE] mean and std.dev: (305.05, 238.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 372.921 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520458, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 343, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (294.48, 180.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 374.093 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520423, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 359, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (523.06, 418.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 375.236 CPU sec, 21.044 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520348, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 358, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1964)
[0000][PE] mean and std.dev: (551.64, 515.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 2743, 3844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9530)
[0000][PE] mean and std.dev: (2598.90, 2037.19)
[0000][PE] low and high boundaries for proper pairs: (1, 12373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 375.186 CPU sec, 21.005 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520014, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 260, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 848)
[0000][PE] mean and std.dev: (238.20, 160.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.13, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 373.189 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520787, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 189, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (211.00, 107.77)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 372.415 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520352, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 291, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1341)
[0000][PE] mean and std.dev: (350.54, 251.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 376.062 CPU sec, 21.043 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520724, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 290, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 914)
[0000][PE] mean and std.dev: (239.41, 112.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 371.522 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 521210, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 243, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1897)
[0000][PE] mean and std.dev: (336.85, 379.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 368.280 CPU sec, 20.626 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520081, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 190, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 560)
[0000][PE] mean and std.dev: (215.28, 78.42)
[0000][PE] low and high boundaries for proper pairs: (1, 691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (415, 1957, 5550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15820)
[0000][PE] mean and std.dev: (2492.33, 2315.96)
[0000][PE] low and high boundaries for proper pairs: (1, 20955)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 376.260 CPU sec, 21.065 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520876, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 225, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1583)
[0000][PE] mean and std.dev: (387.95, 396.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 2735, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8104)
[0000][PE] mean and std.dev: (2325.70, 1512.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 370.677 CPU sec, 20.758 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520994, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 334, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (570.85, 520.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 368.749 CPU sec, 20.630 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520382, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 316, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (467.87, 496.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 372.241 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520672, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 362, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2674)
[0000][PE] mean and std.dev: (485.25, 367.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (863, 2049, 4028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10358)
[0000][PE] mean and std.dev: (2336.33, 1866.84)
[0000][PE] low and high boundaries for proper pairs: (1, 13523)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 373.160 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520793, 12, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 306, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2044)
[0000][PE] mean and std.dev: (372.70, 295.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (413, 833, 5262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14960)
[0000][PE] mean and std.dev: (2049.00, 2613.40)
[0000][PE] low and high boundaries for proper pairs: (1, 19809)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 368.118 CPU sec, 20.613 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520258, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 183, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 865)
[0000][PE] mean and std.dev: (239.91, 204.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1818, 2180, 4288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9228)
[0000][PE] mean and std.dev: (3036.18, 2297.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 373.378 CPU sec, 20.884 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520570, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 197, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 893)
[0000][PE] mean and std.dev: (234.55, 163.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 374.727 CPU sec, 20.950 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520779, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 277, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 803)
[0000][PE] mean and std.dev: (247.69, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 372.719 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520588, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 225, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (267.86, 188.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1836, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6726)
[0000][PE] mean and std.dev: (1619.18, 1020.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 370.984 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520264, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 273, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 804)
[0000][PE] mean and std.dev: (227.38, 131.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 372.898 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520426, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 284, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (244.67, 99.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 373.386 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520495, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 303, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (397.82, 332.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 368.079 CPU sec, 20.581 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520563, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 271, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (393.24, 349.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 370.333 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520396, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (104, 243, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (425.38, 395.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 371.616 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520669, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 248, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1539)
[0000][PE] mean and std.dev: (339.19, 270.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 713, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (937.18, 513.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 370.300 CPU sec, 20.726 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520485, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 188, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (193.00, 112.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (611, 1544, 4412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12014)
[0000][PE] mean and std.dev: (2131.50, 1836.94)
[0000][PE] low and high boundaries for proper pairs: (1, 15815)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 372.403 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520427, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (100, 211, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1798)
[0000][PE] mean and std.dev: (375.44, 379.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 371.212 CPU sec, 20.782 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520346, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 190, 272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 492)
[0000][PE] mean and std.dev: (183.08, 86.16)
[0000][PE] low and high boundaries for proper pairs: (1, 602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 371.475 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520353, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 236, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2363)
[0000][PE] mean and std.dev: (407.71, 422.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 372.142 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520501, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 296, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (311.73, 243.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 370.664 CPU sec, 20.735 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520334, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 389, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1705)
[0000][PE] mean and std.dev: (486.48, 407.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (493, 1827, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6787)
[0000][PE] mean and std.dev: (1758.70, 1295.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 372.272 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520581, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 225, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (384.64, 448.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 374.639 CPU sec, 21.033 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520202, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 274, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 848)
[0000][PE] mean and std.dev: (282.80, 146.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 374.631 CPU sec, 20.985 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520695, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 435, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2271)
[0000][PE] mean and std.dev: (386.50, 392.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.40, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 371.178 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520638, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 397, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (700.06, 666.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1131, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1195.62, 448.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 374.229 CPU sec, 20.946 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520799, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 292, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1649)
[0000][PE] mean and std.dev: (312.95, 194.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 374.544 CPU sec, 20.927 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520528, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 335, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (546.50, 594.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.35, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 374.411 CPU sec, 20.941 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520229, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 304, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (567.54, 752.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1741, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6766)
[0000][PE] mean and std.dev: (1404.22, 878.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 374.762 CPU sec, 21.045 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520497, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 312, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 921)
[0000][PE] mean and std.dev: (266.88, 91.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.65, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1403, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (1265.33, 505.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 371.597 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520457, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 351, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4902)
[0000][PE] mean and std.dev: (652.14, 729.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 375.632 CPU sec, 21.034 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520523, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 286, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (495.62, 562.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 368.507 CPU sec, 20.612 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520606, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 279, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1828)
[0000][PE] mean and std.dev: (502.17, 563.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.61, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1236, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (65, 2545)
[0000][PE] mean and std.dev: (1157.18, 186.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 373.074 CPU sec, 20.870 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520750, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 213, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (354.50, 405.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1087, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (1125.36, 485.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 369.854 CPU sec, 20.689 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520626, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 204, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (395.63, 410.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 373.176 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520519, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 286, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1181)
[0000][PE] mean and std.dev: (328.48, 196.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 371.350 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520887, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 217, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1440)
[0000][PE] mean and std.dev: (357.43, 326.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.528 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520540, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 273, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (535.88, 582.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.66, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 373.143 CPU sec, 20.880 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520703, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 336, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1287)
[0000][PE] mean and std.dev: (313.75, 199.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 371.167 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520541, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 459, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (374.59, 296.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 370.885 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520349, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 385, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (614.00, 606.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1553, 2329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4975)
[0000][PE] mean and std.dev: (1732.30, 948.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 373.627 CPU sec, 20.942 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521008, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 228, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (541.93, 641.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 370.682 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520797, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 191, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 768)
[0000][PE] mean and std.dev: (219.00, 160.05)
[0000][PE] low and high boundaries for proper pairs: (1, 976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 372.789 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520297, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 397, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (536.52, 510.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.00, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 373.583 CPU sec, 20.914 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520876, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 267, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (298.15, 214.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 371.675 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520471, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 213, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1423)
[0000][PE] mean and std.dev: (389.58, 387.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 370.743 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520117, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 367, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (600.86, 914.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 373.690 CPU sec, 20.901 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520371, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 931)
[0000][PE] mean and std.dev: (322.18, 239.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 370.593 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520719, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 474, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (728.87, 605.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 371.979 CPU sec, 20.827 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520571, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 226, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2070)
[0000][PE] mean and std.dev: (293.86, 270.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (865, 1807, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1550.60, 1187.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 373.941 CPU sec, 20.929 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520704, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 330, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (586.08, 611.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.65, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 375.843 CPU sec, 21.091 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520124, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 253, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (258.35, 154.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 372.631 CPU sec, 20.855 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520351, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 311, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1017)
[0000][PE] mean and std.dev: (267.40, 126.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 373.094 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520774, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 350, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 691)
[0000][PE] mean and std.dev: (291.69, 98.58)
[0000][PE] low and high boundaries for proper pairs: (1, 831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 371.084 CPU sec, 20.752 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520297, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 225, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (276.17, 192.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 372.587 CPU sec, 20.813 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520357, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 212, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (219.97, 123.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.60, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 372.428 CPU sec, 20.931 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521015, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 258, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 788)
[0000][PE] mean and std.dev: (250.24, 103.54)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1437, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1312.10, 854.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 371.047 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520114, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 367, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (623.86, 709.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 374.570 CPU sec, 20.966 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520805, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 303, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (367.71, 267.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1583, 1929, 3633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7733)
[0000][PE] mean and std.dev: (2676.67, 2344.99)
[0000][PE] low and high boundaries for proper pairs: (1, 12057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 372.248 CPU sec, 20.818 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520897, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 361, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1103)
[0000][PE] mean and std.dev: (330.44, 172.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.82, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 369.772 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520485, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 314, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1094)
[0000][PE] mean and std.dev: (287.19, 184.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 374.628 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520494, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 225, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 881)
[0000][PE] mean and std.dev: (250.78, 122.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1089, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (1443.38, 1193.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 373.321 CPU sec, 20.884 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520705, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 337, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1500)
[0000][PE] mean and std.dev: (369.35, 225.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 369.483 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520171, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 279, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 686)
[0000][PE] mean and std.dev: (257.24, 123.96)
[0000][PE] low and high boundaries for proper pairs: (1, 859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 374.446 CPU sec, 20.946 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520385, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 321, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 654)
[0000][PE] mean and std.dev: (274.92, 72.68)
[0000][PE] low and high boundaries for proper pairs: (1, 788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 374.263 CPU sec, 20.935 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520315, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 248, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 671)
[0000][PE] mean and std.dev: (209.05, 107.14)
[0000][PE] low and high boundaries for proper pairs: (1, 846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 374.180 CPU sec, 20.957 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 521000, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 313, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (243.65, 145.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 369.299 CPU sec, 20.647 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520623, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 371, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (677.53, 669.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 2113, 3329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9407)
[0000][PE] mean and std.dev: (1976.91, 1658.59)
[0000][PE] low and high boundaries for proper pairs: (1, 12446)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 372.689 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520601, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 224, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 788)
[0000][PE] mean and std.dev: (249.05, 102.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 373.061 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520727, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 345, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1856)
[0000][PE] mean and std.dev: (420.52, 392.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.88, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 371.938 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520462, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 386, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (824.16, 885.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 374.849 CPU sec, 20.971 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520333, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 338, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (443.48, 330.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 370.203 CPU sec, 20.688 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520339, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 309, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (260.26, 155.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1585, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1567.90, 779.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 372.741 CPU sec, 20.854 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520725, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 214, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (226.11, 78.70)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.014 CPU sec, 20.883 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520541, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 223, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1856)
[0000][PE] mean and std.dev: (314.56, 277.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 373.910 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520288, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 263, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 792)
[0000][PE] mean and std.dev: (256.74, 135.80)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 371.028 CPU sec, 20.753 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520373, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 265, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2707)
[0000][PE] mean and std.dev: (478.36, 496.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 376.007 CPU sec, 21.060 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520306, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 312, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4884)
[0000][PE] mean and std.dev: (672.00, 788.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 372.520 CPU sec, 20.865 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520749, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 305, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (246.11, 143.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1138, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1489.75, 1108.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 372.068 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520716, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 208, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (308.85, 235.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 373.404 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520325, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 202, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (235.79, 160.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 374.828 CPU sec, 20.961 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520546, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 1279, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8105)
[0000][PE] mean and std.dev: (1852.88, 2359.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 377.156 CPU sec, 21.150 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520255, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (525.11, 536.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 373.919 CPU sec, 20.931 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520550, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 364, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (590.52, 681.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 372.896 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520582, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 347, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (272.12, 213.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 373.298 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520228, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 241, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (526.18, 686.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 374.822 CPU sec, 20.982 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520582, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 302, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1151)
[0000][PE] mean and std.dev: (287.71, 205.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.27, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 373.916 CPU sec, 20.941 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520462, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 314, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1729)
[0000][PE] mean and std.dev: (452.75, 371.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.67, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1291, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1264.17, 721.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 369.868 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520381, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 194, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (226.94, 134.14)
[0000][PE] low and high boundaries for proper pairs: (1, 866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 373.695 CPU sec, 20.902 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520739, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 358, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (906.06, 1101.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1834, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1360.00, 620.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 374.522 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520293, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 308, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (436.32, 395.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 373.541 CPU sec, 20.959 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520292, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 257, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 971)
[0000][PE] mean and std.dev: (252.83, 196.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 374.364 CPU sec, 21.055 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520721, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 305, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2108)
[0000][PE] mean and std.dev: (437.78, 463.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.34, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 371.571 CPU sec, 20.763 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520239, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (94, 206, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (245.29, 180.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 372.875 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520647, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 334, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (393.81, 283.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 373.172 CPU sec, 20.866 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520648, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 260, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 977)
[0000][PE] mean and std.dev: (229.71, 103.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 368.266 CPU sec, 20.592 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520418, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 400, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (501.11, 395.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 373.647 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520355, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 313, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1636)
[0000][PE] mean and std.dev: (392.57, 360.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.64, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 373.247 CPU sec, 20.835 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520978, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 311, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 766)
[0000][PE] mean and std.dev: (293.95, 125.60)
[0000][PE] low and high boundaries for proper pairs: (1, 948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 369.892 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520550, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 268, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (258.47, 115.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1248, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (401, 2141)
[0000][PE] mean and std.dev: (1333.10, 325.53)
[0000][PE] low and high boundaries for proper pairs: (31, 2635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 373.430 CPU sec, 20.884 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520579, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 276, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2321)
[0000][PE] mean and std.dev: (317.43, 358.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 371.489 CPU sec, 20.766 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520304, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 240, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (486.62, 644.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 374.940 CPU sec, 20.979 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520302, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 305, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1359)
[0000][PE] mean and std.dev: (321.92, 219.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 373.667 CPU sec, 20.983 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520902, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 324, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (703.62, 838.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 2052, 5307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13861)
[0000][PE] mean and std.dev: (3086.30, 2940.19)
[0000][PE] low and high boundaries for proper pairs: (1, 18138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 372.573 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520308, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 279, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (251.94, 110.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 373.972 CPU sec, 20.905 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520860, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 202, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (251.91, 138.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 371.464 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520369, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 368, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 928)
[0000][PE] mean and std.dev: (262.58, 139.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.63, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 374.584 CPU sec, 20.972 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520648, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 190, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (201.74, 131.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1496, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7891)
[0000][PE] mean and std.dev: (1902.09, 1259.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 374.971 CPU sec, 21.007 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520598, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 372, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (814.34, 942.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 372.196 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520552, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 318, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (634.38, 832.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.89, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 373.581 CPU sec, 20.929 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520674, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 301, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (507.60, 499.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1525, 5504, 5691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14023)
[0000][PE] mean and std.dev: (3577.50, 2659.41)
[0000][PE] low and high boundaries for proper pairs: (1, 18189)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 372.445 CPU sec, 20.843 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520664, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 194, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1350)
[0000][PE] mean and std.dev: (293.55, 292.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.80, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1315, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6018)
[0000][PE] mean and std.dev: (1723.90, 927.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 372.424 CPU sec, 20.846 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520712, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 218, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 779)
[0000][PE] mean and std.dev: (258.50, 100.61)
[0000][PE] low and high boundaries for proper pairs: (1, 978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 371.046 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520623, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 205, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1714)
[0000][PE] mean and std.dev: (404.75, 434.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.501 CPU sec, 20.890 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 521013, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 224, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (971.86, 1403.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 371.459 CPU sec, 20.842 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520482, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 368, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (402.46, 333.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.86, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1109, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (1066.77, 501.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 374.189 CPU sec, 20.955 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520606, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 324, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (476.27, 493.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 374.679 CPU sec, 20.965 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520606, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 458, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (909.60, 967.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.62, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 1397, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (1022.56, 500.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 371.762 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520659, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 779, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (965.05, 941.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1154, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1425.33, 844.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 373.236 CPU sec, 20.878 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520967, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 836, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (853.00, 656.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 370.042 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520734, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 351, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (267.23, 123.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1311, 5363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14339)
[0000][PE] mean and std.dev: (2745.82, 2546.87)
[0000][PE] low and high boundaries for proper pairs: (1, 18827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 370.481 CPU sec, 20.779 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520716, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 301, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (786.24, 1142.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 371.565 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519724, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 363, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (779.28, 834.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 376.891 CPU sec, 21.096 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520554, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 267, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (581.12, 685.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1607, 2090, 3972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8702)
[0000][PE] mean and std.dev: (2657.42, 1861.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 370.300 CPU sec, 20.735 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520473, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 265, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1943)
[0000][PE] mean and std.dev: (331.56, 326.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (913, 4016, 4934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12976)
[0000][PE] mean and std.dev: (3088.55, 2166.74)
[0000][PE] low and high boundaries for proper pairs: (1, 16997)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 373.369 CPU sec, 20.861 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520907, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 324, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1978)
[0000][PE] mean and std.dev: (359.08, 277.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.96, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 370.362 CPU sec, 20.749 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520601, 4, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 304, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1648)
[0000][PE] mean and std.dev: (308.91, 153.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 372.881 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520409, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 668, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7261)
[0000][PE] mean and std.dev: (1025.93, 1145.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.96, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 375.498 CPU sec, 21.017 real sec
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520670, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 271, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (345.62, 278.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 941, 4402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11478)
[0000][PE] mean and std.dev: (2438.60, 2614.86)
[0000][PE] low and high boundaries for proper pairs: (1, 15016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 372.369 CPU sec, 20.862 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520521, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 576, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (672.65, 614.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.94, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 373.435 CPU sec, 20.882 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520448, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 223, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 556)
[0000][PE] mean and std.dev: (230.13, 100.68)
[0000][PE] low and high boundaries for proper pairs: (1, 682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 373.683 CPU sec, 20.951 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520907, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 287, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1433)
[0000][PE] mean and std.dev: (265.93, 170.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 372.463 CPU sec, 20.850 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520297, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 238, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (244.95, 138.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 373.392 CPU sec, 20.962 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520412, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 199, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 952)
[0000][PE] mean and std.dev: (213.27, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 373.938 CPU sec, 20.950 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 521014, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1121)
[0000][PE] mean and std.dev: (269.91, 149.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.68, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 370.830 CPU sec, 20.767 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520311, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 357, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (299.18, 141.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 374.147 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520782, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 233, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (310.95, 229.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 371.118 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519980, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 226, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (549.73, 657.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 375.157 CPU sec, 20.982 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520792, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 481, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1089.39, 1202.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.74, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 370.198 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520564, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 370, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (781.62, 975.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.88, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 373.165 CPU sec, 20.916 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520786, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 379, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4309)
[0000][PE] mean and std.dev: (548.89, 618.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.54, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 371.218 CPU sec, 20.786 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520470, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 214, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1059)
[0000][PE] mean and std.dev: (271.44, 151.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 373.354 CPU sec, 20.851 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520659, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 411, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (685.72, 634.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.08, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1409, 1607, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (81, 3401)
[0000][PE] mean and std.dev: (1683.64, 529.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 369.946 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520854, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (107, 405, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1349)
[0000][PE] mean and std.dev: (314.50, 315.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 370.967 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000246 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520455, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 297, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (427.29, 503.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1657, 3567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8745)
[0000][PE] mean and std.dev: (2402.18, 2006.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 370.044 CPU sec, 20.699 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520443, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 340, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (528.95, 654.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000032 bp)...
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 370.714 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520586, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 350, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3038)
[0000][PE] mean and std.dev: (590.19, 512.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 1033, 4902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14412)
[0000][PE] mean and std.dev: (2170.27, 2489.02)
[0000][PE] low and high boundaries for proper pairs: (1, 19167)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 1128, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5073)
[0000][PE] mean and std.dev: (1247.14, 910.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 367.852 CPU sec, 20.641 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520458, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 233, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1417)
[0000][PE] mean and std.dev: (326.63, 273.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1441, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (1518.00, 999.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 369.322 CPU sec, 20.643 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520363, 12, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 269, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (295.67, 250.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 1583, 3827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10855)
[0000][PE] mean and std.dev: (2061.17, 2622.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14369)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 371.069 CPU sec, 20.785 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520768, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 340, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (478.50, 496.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 369.120 CPU sec, 20.678 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520570, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 289, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (796.96, 1010.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1453, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1489.80, 853.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 368.913 CPU sec, 20.651 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520437, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 320, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (688.25, 822.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 371.501 CPU sec, 20.897 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520645, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 399, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (478.62, 430.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 368.368 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520283, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 254, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 754)
[0000][PE] mean and std.dev: (234.17, 115.21)
[0000][PE] low and high boundaries for proper pairs: (1, 949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 371.679 CPU sec, 20.791 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520128, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 339, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (769.91, 807.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 373.649 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520390, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 333, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2236)
[0000][PE] mean and std.dev: (463.17, 485.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 366.322 CPU sec, 20.551 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520597, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 223, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (211.29, 90.93)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 368.879 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520837, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 188, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 699)
[0000][PE] mean and std.dev: (220.91, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1842, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6472)
[0000][PE] mean and std.dev: (1922.55, 935.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 367.662 CPU sec, 20.603 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520343, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 351, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (571.43, 618.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.39, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 369.532 CPU sec, 20.686 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520594, 11, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 343, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 834)
[0000][PE] mean and std.dev: (285.75, 135.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (390, 1468, 4004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11232)
[0000][PE] mean and std.dev: (2264.27, 2312.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14846)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 371.038 CPU sec, 20.752 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520548, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 294, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1383)
[0000][PE] mean and std.dev: (373.64, 305.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1625, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1715.23, 854.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 368.127 CPU sec, 20.576 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520922, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 209, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1799)
[0000][PE] mean and std.dev: (393.70, 382.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 368.116 CPU sec, 20.600 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520758, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 301, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (711.20, 1013.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 368.515 CPU sec, 20.623 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520556, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 348, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5898)
[0000][PE] mean and std.dev: (1245.58, 1684.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 370.868 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520707, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 266, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 981)
[0000][PE] mean and std.dev: (277.93, 165.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1508, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1537.62, 649.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 371.367 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520846, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 316, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (315.21, 201.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 366.706 CPU sec, 20.512 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520660, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 461, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (625.22, 498.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (450, 815, 3307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9021)
[0000][PE] mean and std.dev: (1563.36, 1397.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11878)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 369.231 CPU sec, 20.671 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520491, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 261, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 759)
[0000][PE] mean and std.dev: (237.22, 134.34)
[0000][PE] low and high boundaries for proper pairs: (1, 954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 372.698 CPU sec, 20.863 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520633, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 321, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (513.60, 436.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.99, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 371.513 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520515, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 270, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 808)
[0000][PE] mean and std.dev: (261.91, 119.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 370.202 CPU sec, 20.689 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520568, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 294, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (377.74, 336.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 368.855 CPU sec, 20.617 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520177, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 294, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (914.11, 1188.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1807, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1662.60, 842.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 369.612 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520901, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 255, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (246.93, 122.04)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.25, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 367.535 CPU sec, 20.570 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520832, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 239, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 927)
[0000][PE] mean and std.dev: (218.44, 96.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 366.901 CPU sec, 20.578 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520717, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 263, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (554.90, 555.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 366.689 CPU sec, 20.567 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520585, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 211, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1031)
[0000][PE] mean and std.dev: (196.10, 129.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 369.801 CPU sec, 20.655 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520643, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (82, 211, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8299)
[0000][PE] mean and std.dev: (1350.30, 1850.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.65, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1201, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1459.60, 856.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 370.663 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519964, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 271, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 682)
[0000][PE] mean and std.dev: (230.25, 142.49)
[0000][PE] low and high boundaries for proper pairs: (1, 853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 371.982 CPU sec, 20.847 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520726, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 344, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (232.64, 143.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1323, 3365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7927)
[0000][PE] mean and std.dev: (2323.36, 1798.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 366.577 CPU sec, 20.533 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520324, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 359, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (607.36, 627.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 374.073 CPU sec, 20.951 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520467, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 304, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 749)
[0000][PE] mean and std.dev: (267.85, 127.75)
[0000][PE] low and high boundaries for proper pairs: (1, 939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.91, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (519, 1424, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1140.00, 539.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 369.377 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520777, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 276, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1191)
[0000][PE] mean and std.dev: (255.18, 127.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 369.468 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520551, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 288, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1577)
[0000][PE] mean and std.dev: (335.30, 330.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 370.757 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520733, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 644, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (1056.27, 1303.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 370.143 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520346, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 198, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (598.35, 842.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 372.218 CPU sec, 20.836 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520908, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 257, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (268.86, 188.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.48, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (637, 866, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7246)
[0000][PE] mean and std.dev: (1695.82, 1462.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9449)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 371.779 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520565, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 328, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (275.27, 152.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 372.069 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520338, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 372, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5840)
[0000][PE] mean and std.dev: (1076.14, 1443.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.48, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 370.406 CPU sec, 20.688 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520258, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 206, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (296.16, 229.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 371.515 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520765, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 443, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2203)
[0000][PE] mean and std.dev: (555.47, 493.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.37, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 370.259 CPU sec, 20.701 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520530, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 389, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (480.44, 341.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 370.443 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520464, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 366, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2225)
[0000][PE] mean and std.dev: (383.65, 456.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 369.111 CPU sec, 20.761 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520387, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 274, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 990)
[0000][PE] mean and std.dev: (294.94, 185.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 369.311 CPU sec, 20.657 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520519, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 283, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1087)
[0000][PE] mean and std.dev: (339.75, 265.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 370.171 CPU sec, 20.721 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520594, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 336, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2669)
[0000][PE] mean and std.dev: (573.64, 607.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1911, 5865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15395)
[0000][PE] mean and std.dev: (2831.00, 2437.69)
[0000][PE] low and high boundaries for proper pairs: (1, 20160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 372.274 CPU sec, 20.851 real sec
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520611, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 297, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (500.57, 490.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 369.025 CPU sec, 20.674 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520528, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 387, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (937.06, 868.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 371.939 CPU sec, 20.829 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520842, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 390, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (434.09, 328.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 370.652 CPU sec, 20.806 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520262, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 345, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1817)
[0000][PE] mean and std.dev: (354.28, 355.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 372.864 CPU sec, 20.871 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520536, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 373, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1757)
[0000][PE] mean and std.dev: (403.05, 340.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1330, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (1144.22, 887.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 370.122 CPU sec, 20.689 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520993, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 315, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1379)
[0000][PE] mean and std.dev: (325.67, 179.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.56, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 367.079 CPU sec, 20.566 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520528, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 223, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (386.32, 458.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 368.350 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520594, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 335, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (584.65, 636.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 368.731 CPU sec, 20.636 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520392, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 280, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (469.00, 480.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 372.624 CPU sec, 20.862 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520666, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 215, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 675)
[0000][PE] mean and std.dev: (208.88, 96.71)
[0000][PE] low and high boundaries for proper pairs: (1, 854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 371.922 CPU sec, 20.864 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520388, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 397, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (570.00, 494.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.81, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 372.346 CPU sec, 20.860 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520391, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 275, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 961)
[0000][PE] mean and std.dev: (314.34, 199.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 373.018 CPU sec, 20.884 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520847, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 223, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (430.06, 505.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.98, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 371.661 CPU sec, 20.769 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520686, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 219, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1547)
[0000][PE] mean and std.dev: (346.88, 399.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.68, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 370.740 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520444, 14, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 207, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 724)
[0000][PE] mean and std.dev: (210.62, 90.41)
[0000][PE] low and high boundaries for proper pairs: (1, 907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.56, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (800, 1280, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5714)
[0000][PE] mean and std.dev: (1240.75, 832.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7352)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 369.829 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520465, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 403, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (482.33, 460.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 372.070 CPU sec, 20.809 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520384, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 338, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (289.45, 166.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1784, 3826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9738)
[0000][PE] mean and std.dev: (2144.42, 2097.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 370.075 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520462, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 279, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 804)
[0000][PE] mean and std.dev: (254.21, 130.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.48, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 371.339 CPU sec, 20.791 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520861, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 329, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1890)
[0000][PE] mean and std.dev: (407.29, 366.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.79, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 371.660 CPU sec, 20.793 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520380, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 224, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 802)
[0000][PE] mean and std.dev: (226.55, 100.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1053, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1229.46, 891.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 369.805 CPU sec, 20.707 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520703, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 358, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (785.65, 854.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1353, 1967, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6540)
[0000][PE] mean and std.dev: (2138.38, 1126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 372.770 CPU sec, 20.891 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520254, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 219, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1313)
[0000][PE] mean and std.dev: (233.64, 121.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 372.888 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520246, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 342, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (638.62, 810.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 371.800 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520662, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 344, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (532.74, 502.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 367.034 CPU sec, 20.515 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520174, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 315, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (594.59, 659.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 373.790 CPU sec, 20.895 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520272, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 336, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 929)
[0000][PE] mean and std.dev: (320.79, 186.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.61, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 895, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6921)
[0000][PE] mean and std.dev: (1579.15, 1568.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 373.736 CPU sec, 20.964 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520540, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 180, 251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 427)
[0000][PE] mean and std.dev: (175.00, 44.41)
[0000][PE] low and high boundaries for proper pairs: (1, 515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 372.880 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520664, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 334, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (483.79, 497.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.68, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 1883, 3669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10545)
[0000][PE] mean and std.dev: (2361.60, 2524.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13983)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 1497, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1497.80, 1271.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 371.424 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520472, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 311, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1863)
[0000][PE] mean and std.dev: (370.14, 335.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.91, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 917, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1441.64, 971.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 371.729 CPU sec, 20.823 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520452, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 339, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2142)
[0000][PE] mean and std.dev: (410.84, 439.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.31, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 371.212 CPU sec, 20.759 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520400, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 375, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (519.17, 482.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 373.322 CPU sec, 20.898 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519965, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 204, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (256.29, 199.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 370.388 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520533, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 221, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1318)
[0000][PE] mean and std.dev: (343.88, 354.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 423, 3040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8816)
[0000][PE] mean and std.dev: (2201.80, 3195.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14984)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 370.629 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520459, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 392, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2179)
[0000][PE] mean and std.dev: (552.94, 550.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 370.838 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520107, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 291, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1476)
[0000][PE] mean and std.dev: (426.11, 402.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 375.627 CPU sec, 21.038 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520950, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 337, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (594.93, 494.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 370.422 CPU sec, 20.703 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520583, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 242, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2077)
[0000][PE] mean and std.dev: (420.82, 419.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.55, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 991, 3486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9512)
[0000][PE] mean and std.dev: (1813.27, 2039.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 372.915 CPU sec, 20.946 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520366, 4, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 304, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (253.19, 144.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 372.025 CPU sec, 20.833 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520806, 13, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 313, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6023)
[0000][PE] mean and std.dev: (963.06, 1364.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (510.10, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 852, 6452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18760)
[0000][PE] mean and std.dev: (2527.15, 2943.76)
[0000][PE] low and high boundaries for proper pairs: (1, 24914)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 372.127 CPU sec, 20.841 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520388, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 509, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6645)
[0000][PE] mean and std.dev: (901.20, 1089.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.47, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 372.642 CPU sec, 20.843 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520551, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 383, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6386)
[0000][PE] mean and std.dev: (1209.29, 1781.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 369.746 CPU sec, 20.686 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520628, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 270, 624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1504)
[0000][PE] mean and std.dev: (264.41, 169.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 371.326 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520302, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 214, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 955)
[0000][PE] mean and std.dev: (232.27, 130.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.346 CPU sec, 20.825 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520557, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 545, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (1318.40, 1542.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.50, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 371.830 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520254, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 364, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (535.43, 534.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.57, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (535, 1785, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7894)
[0000][PE] mean and std.dev: (1740.45, 1264.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 373.436 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520654, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 350, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 996)
[0000][PE] mean and std.dev: (297.26, 159.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 372.493 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520593, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 366, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (368.52, 291.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 372.936 CPU sec, 20.932 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520764, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 326, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1674)
[0000][PE] mean and std.dev: (411.75, 327.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 371.839 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520330, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 301, 436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 900)
[0000][PE] mean and std.dev: (266.48, 97.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 369.663 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520212, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 385, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (588.67, 603.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1539, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6422)
[0000][PE] mean and std.dev: (1388.70, 954.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 373.334 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521000, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 310, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1596)
[0000][PE] mean and std.dev: (333.65, 231.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.83, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 369.688 CPU sec, 20.709 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520671, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 340, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1072)
[0000][PE] mean and std.dev: (294.93, 166.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.85, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1899, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1869.89, 1501.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 371.136 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520347, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 484, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (670.53, 685.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 370.246 CPU sec, 20.692 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520638, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 354, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (276.55, 162.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 368.140 CPU sec, 20.588 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520727, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 203, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1279)
[0000][PE] mean and std.dev: (259.12, 207.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 371.729 CPU sec, 20.807 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520812, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 209, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 624)
[0000][PE] mean and std.dev: (202.00, 98.74)
[0000][PE] low and high boundaries for proper pairs: (1, 779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 372.056 CPU sec, 20.803 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520309, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 336, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (456.54, 427.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 371.305 CPU sec, 20.753 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520241, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (74, 215, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (261.06, 244.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1606, 3765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10331)
[0000][PE] mean and std.dev: (2410.10, 2432.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 373.189 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520775, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 195, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 792)
[0000][PE] mean and std.dev: (225.33, 136.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1071, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5723)
[0000][PE] mean and std.dev: (1413.08, 1120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 370.074 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520473, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 203, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (197.41, 68.00)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 373.639 CPU sec, 20.909 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520266, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 304, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (545.29, 711.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1269, 2971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6545)
[0000][PE] mean and std.dev: (1999.85, 1442.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 371.489 CPU sec, 20.864 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520749, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 271, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (459.59, 511.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 368.146 CPU sec, 20.588 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520353, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 353, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (561.26, 618.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.614 CPU sec, 20.914 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520480, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 319, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (319.91, 184.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 370.828 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520728, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 334, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (592.29, 661.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 371.180 CPU sec, 20.767 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520252, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 316, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (299.67, 197.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 370.909 CPU sec, 20.780 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520226, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 331, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (487.17, 447.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.12, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 1354, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1229.89, 575.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 372.856 CPU sec, 20.887 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520480, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 203, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 782)
[0000][PE] mean and std.dev: (205.41, 118.45)
[0000][PE] low and high boundaries for proper pairs: (1, 999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 370.407 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520178, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 241, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 729)
[0000][PE] mean and std.dev: (240.19, 100.33)
[0000][PE] low and high boundaries for proper pairs: (1, 919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.51, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 372.193 CPU sec, 20.854 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520242, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 362, 621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1457)
[0000][PE] mean and std.dev: (447.08, 336.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1496, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (1350.67, 823.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 371.747 CPU sec, 20.801 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520670, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 292, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1020)
[0000][PE] mean and std.dev: (249.84, 129.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 369.780 CPU sec, 20.757 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520511, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 264, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1530)
[0000][PE] mean and std.dev: (402.71, 341.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 369.150 CPU sec, 20.660 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520408, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 311, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 830)
[0000][PE] mean and std.dev: (260.96, 181.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.17, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 371.290 CPU sec, 20.793 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520288, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 338, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (281.82, 95.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (354, 882, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6993)
[0000][PE] mean and std.dev: (1255.56, 1115.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9206)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 369.090 CPU sec, 20.668 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520412, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 192, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (636.21, 783.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1456, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1307.64, 1017.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 367.730 CPU sec, 20.548 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520498, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 333, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (695.26, 844.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 369.613 CPU sec, 20.658 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520772, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 188, 282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 490)
[0000][PE] mean and std.dev: (190.61, 77.98)
[0000][PE] low and high boundaries for proper pairs: (1, 594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (488, 3722, 5626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15902)
[0000][PE] mean and std.dev: (3786.80, 3241.08)
[0000][PE] low and high boundaries for proper pairs: (1, 21040)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1804, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5868)
[0000][PE] mean and std.dev: (1734.75, 891.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 366.633 CPU sec, 20.489 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520805, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 285, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1775)
[0000][PE] mean and std.dev: (364.00, 327.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 369.343 CPU sec, 20.679 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520983, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 237, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1101)
[0000][PE] mean and std.dev: (299.09, 245.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 368.025 CPU sec, 20.589 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520598, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 291, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (413.19, 391.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.78, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 370.959 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520624, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 271, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1659)
[0000][PE] mean and std.dev: (379.06, 342.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1093, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (1125.93, 687.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 372.165 CPU sec, 20.886 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520487, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 267, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 757)
[0000][PE] mean and std.dev: (254.50, 106.63)
[0000][PE] low and high boundaries for proper pairs: (1, 944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.52, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 618, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2185)
[0000][PE] mean and std.dev: (711.10, 544.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2889)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1086, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (959.88, 417.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 371.155 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520425, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 355, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1004)
[0000][PE] mean and std.dev: (328.76, 200.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1869, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1905.69, 968.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 368.707 CPU sec, 20.628 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520403, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 317, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (261.48, 173.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 4131, 4414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13132)
[0000][PE] mean and std.dev: (2948.20, 2226.04)
[0000][PE] low and high boundaries for proper pairs: (1, 17491)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 369.695 CPU sec, 20.658 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519978, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 335, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (451.35, 419.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.59, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 451, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6963)
[0000][PE] mean and std.dev: (1232.22, 1951.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9208)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 370.234 CPU sec, 20.705 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520292, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 335, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 978)
[0000][PE] mean and std.dev: (226.69, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.62, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 370.514 CPU sec, 20.754 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520445, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 365, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (829.70, 857.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 371.680 CPU sec, 20.817 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520956, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 306, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (491.55, 615.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.54, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1638, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1548.90, 1035.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 369.111 CPU sec, 20.679 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520527, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 340, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 874)
[0000][PE] mean and std.dev: (289.55, 136.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 369.208 CPU sec, 20.652 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520691, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 281, 613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1501)
[0000][PE] mean and std.dev: (355.60, 353.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.24, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 370.478 CPU sec, 20.753 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520782, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 191, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 662)
[0000][PE] mean and std.dev: (210.40, 112.68)
[0000][PE] low and high boundaries for proper pairs: (1, 830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 368.814 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520919, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 260, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1132)
[0000][PE] mean and std.dev: (330.00, 267.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.86, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 372.271 CPU sec, 20.867 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520636, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 327, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2241)
[0000][PE] mean and std.dev: (568.76, 590.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 371.506 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520502, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 323, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1180)
[0000][PE] mean and std.dev: (247.62, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 370.319 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520345, 6, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 244, 488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1110)
[0000][PE] mean and std.dev: (293.04, 223.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 373.730 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520531, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 230, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 974)
[0000][PE] mean and std.dev: (292.74, 193.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1511, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1421.29, 797.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 369.201 CPU sec, 20.686 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520650, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 233, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (431.09, 471.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 371.016 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520799, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 311, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2391)
[0000][PE] mean and std.dev: (514.07, 425.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 371.390 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520146, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 241, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2180)
[0000][PE] mean and std.dev: (537.59, 566.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1663, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5702)
[0000][PE] mean and std.dev: (1399.33, 875.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 373.690 CPU sec, 20.906 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520681, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 232, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2199)
[0000][PE] mean and std.dev: (536.26, 562.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.22, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 370.977 CPU sec, 20.784 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520649, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 197, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (233.12, 191.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1248, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (1309.14, 688.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 369.751 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520607, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 358, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (478.22, 430.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.60, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2266, 4573, 5069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10675)
[0000][PE] mean and std.dev: (4161.80, 2903.99)
[0000][PE] low and high boundaries for proper pairs: (1, 15778)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 374.168 CPU sec, 20.935 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520402, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 365, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1236)
[0000][PE] mean and std.dev: (382.32, 314.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 554, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (845.80, 911.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 369.679 CPU sec, 20.665 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520537, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 295, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (558.88, 669.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.61, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 369.815 CPU sec, 20.701 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520620, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 325, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (500.20, 454.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 371.516 CPU sec, 20.779 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520922, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 517, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (872.36, 1143.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 371.726 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520349, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 327, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (373.21, 296.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 369.821 CPU sec, 20.691 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520469, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 294, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1279)
[0000][PE] mean and std.dev: (282.77, 196.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.77, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 370.959 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520863, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 208, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2031)
[0000][PE] mean and std.dev: (282.53, 268.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 369.595 CPU sec, 20.682 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520461, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 318, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1938)
[0000][PE] mean and std.dev: (420.18, 486.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.80, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 371.549 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520775, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 348, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (270.18, 140.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 369.490 CPU sec, 20.639 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520951, 10, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 210, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 862)
[0000][PE] mean and std.dev: (221.84, 139.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1532, 2817, 5498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13430)
[0000][PE] mean and std.dev: (3007.10, 2152.44)
[0000][PE] low and high boundaries for proper pairs: (1, 17396)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 371.791 CPU sec, 20.790 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520170, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 311, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 738)
[0000][PE] mean and std.dev: (272.89, 140.53)
[0000][PE] low and high boundaries for proper pairs: (1, 920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1662, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6978)
[0000][PE] mean and std.dev: (1777.25, 1120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 371.936 CPU sec, 20.838 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520895, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 281, 624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (361.95, 337.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 368.378 CPU sec, 20.579 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520347, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 281, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (720.70, 919.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 370.636 CPU sec, 20.696 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520704, 9, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 252, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 904)
[0000][PE] mean and std.dev: (294.33, 196.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 370.263 CPU sec, 20.712 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519970, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 246, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 527)
[0000][PE] mean and std.dev: (228.59, 95.88)
[0000][PE] low and high boundaries for proper pairs: (1, 638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 373.347 CPU sec, 20.873 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520253, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 311, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (639.43, 685.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 373.443 CPU sec, 20.959 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520671, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 321, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (365.40, 234.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 371.542 CPU sec, 20.811 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520592, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 333, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (413.56, 416.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1603, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6107)
[0000][PE] mean and std.dev: (1781.22, 1235.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 371.024 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520457, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 357, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (628.28, 640.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (715, 2977, 3220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8230)
[0000][PE] mean and std.dev: (2153.40, 1563.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10735)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 1144, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1166.20, 865.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 370.338 CPU sec, 20.730 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520631, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 407, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (611.47, 609.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 368.041 CPU sec, 20.603 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 521133, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 343, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1240)
[0000][PE] mean and std.dev: (352.30, 242.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1373, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (1418.10, 592.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 366.962 CPU sec, 20.516 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520662, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 353, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (612.00, 597.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.58, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 368.417 CPU sec, 20.606 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520400, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 266, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1092)
[0000][PE] mean and std.dev: (282.89, 222.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.69, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 370.552 CPU sec, 20.753 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520507, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 228, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 944)
[0000][PE] mean and std.dev: (239.19, 144.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 369.121 CPU sec, 20.659 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520496, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 203, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (335.35, 279.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.40, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 372.310 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520762, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 280, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (511.70, 564.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 370.368 CPU sec, 20.699 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520497, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 219, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 743)
[0000][PE] mean and std.dev: (202.39, 108.75)
[0000][PE] low and high boundaries for proper pairs: (1, 944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.93, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 1638, 4765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13855)
[0000][PE] mean and std.dev: (2330.80, 2598.98)
[0000][PE] low and high boundaries for proper pairs: (1, 18400)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 370.713 CPU sec, 20.724 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520277, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 283, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (682.00, 828.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.62, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1456, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6048)
[0000][PE] mean and std.dev: (1571.50, 1184.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 371.768 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520655, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 405, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (497.05, 493.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1801, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1763.20, 991.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 373.008 CPU sec, 20.859 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520653, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 243, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1774)
[0000][PE] mean and std.dev: (318.90, 331.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1146, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6971)
[0000][PE] mean and std.dev: (1509.22, 1314.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 369.964 CPU sec, 20.689 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520745, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 336, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2306)
[0000][PE] mean and std.dev: (563.10, 548.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 369.257 CPU sec, 20.636 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520802, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 265, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1445)
[0000][PE] mean and std.dev: (365.72, 373.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.20, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (696, 882, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7230)
[0000][PE] mean and std.dev: (1506.90, 1546.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9408)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 370.786 CPU sec, 20.733 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520864, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 358, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (425.76, 334.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.37, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 368.437 CPU sec, 20.648 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520786, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 368, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1224)
[0000][PE] mean and std.dev: (294.94, 186.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 370.308 CPU sec, 20.721 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520150, 2, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 336, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2010)
[0000][PE] mean and std.dev: (479.64, 389.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 373.172 CPU sec, 20.937 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520371, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 335, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2170)
[0000][PE] mean and std.dev: (389.83, 337.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 1835, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1774.00, 823.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 372.913 CPU sec, 20.893 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000072 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520817, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 283, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1026)
[0000][PE] mean and std.dev: (286.74, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.43, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 369.386 CPU sec, 20.663 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520734, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 292, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (436.27, 449.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.69, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 368.288 CPU sec, 20.608 real sec
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520837, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 182, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (221.36, 112.30)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.39, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 366.454 CPU sec, 20.497 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520826, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 312, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (631.44, 580.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 2054, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7450)
[0000][PE] mean and std.dev: (1881.09, 1269.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.589 CPU sec, 20.826 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520685, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 377, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (600.81, 619.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1263, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1339.20, 788.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 370.540 CPU sec, 20.738 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520727, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 286, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (273.95, 193.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1099, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (940.11, 403.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 369.524 CPU sec, 20.669 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520530, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 254, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (232.64, 111.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.73, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 368.252 CPU sec, 20.581 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520801, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 236, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1019)
[0000][PE] mean and std.dev: (298.71, 148.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 371.144 CPU sec, 20.757 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520107, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 219, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 922)
[0000][PE] mean and std.dev: (261.84, 176.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.66, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 372.750 CPU sec, 20.858 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520809, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 192, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 819)
[0000][PE] mean and std.dev: (242.30, 197.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1486, 2216, 2757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1946.30, 947.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 371.645 CPU sec, 20.771 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520484, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 304, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2681)
[0000][PE] mean and std.dev: (543.92, 499.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.68, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 370.748 CPU sec, 20.751 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520369, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 267, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (403.07, 327.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 2136, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7175)
[0000][PE] mean and std.dev: (1977.36, 949.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 367.997 CPU sec, 20.594 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 521031, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 216, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (300.47, 231.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 369.336 CPU sec, 20.671 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520456, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 422, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (503.90, 379.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.91, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 1568, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6320)
[0000][PE] mean and std.dev: (1270.64, 1032.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8345)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 2192, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6186)
[0000][PE] mean and std.dev: (2058.56, 1397.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 370.803 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520789, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 348, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1998)
[0000][PE] mean and std.dev: (600.05, 546.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 369.438 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520873, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 364, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (465.30, 416.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 365.841 CPU sec, 20.465 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520776, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 325, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (547.12, 561.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.80, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 369.438 CPU sec, 20.680 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520389, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 432, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (465.00, 517.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.67, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1469, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6205)
[0000][PE] mean and std.dev: (1689.85, 1342.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 371.461 CPU sec, 20.794 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520637, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 227, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (235.23, 105.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1272, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5297)
[0000][PE] mean and std.dev: (1066.25, 630.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 370.449 CPU sec, 20.762 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520414, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 383, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (671.52, 749.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 371.565 CPU sec, 20.787 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520521, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 360, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (333.33, 199.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1440, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1470.67, 1067.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 369.778 CPU sec, 20.680 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520350, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 236, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (397.28, 411.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1471, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1565.56, 775.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 368.663 CPU sec, 20.660 real sec
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520430, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 231, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1699)
[0000][PE] mean and std.dev: (349.84, 277.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.94, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1435, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1530.27, 766.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 369.925 CPU sec, 20.728 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520712, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 280, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (355.11, 271.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 369.233 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520402, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 304, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2298)
[0000][PE] mean and std.dev: (544.70, 529.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1801, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1530.22, 841.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 374.993 CPU sec, 21.035 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 521044, 10, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 237, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (251.16, 148.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (711, 3150, 5191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14151)
[0000][PE] mean and std.dev: (2962.50, 2385.28)
[0000][PE] low and high boundaries for proper pairs: (1, 18631)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 369.712 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520455, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 269, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (363.95, 305.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 371.644 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520205, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 189, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (239.48, 188.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.55, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 375.096 CPU sec, 20.999 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520717, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 393, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (657.65, 697.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.36, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 367.983 CPU sec, 20.555 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520920, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 223, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 658)
[0000][PE] mean and std.dev: (243.17, 137.79)
[0000][PE] low and high boundaries for proper pairs: (1, 817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 367.991 CPU sec, 20.588 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520332, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 236, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 747)
[0000][PE] mean and std.dev: (245.18, 126.09)
[0000][PE] low and high boundaries for proper pairs: (1, 936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.57, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 372.043 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520742, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 357, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1039)
[0000][PE] mean and std.dev: (343.12, 270.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.34, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 1448, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1341.86, 840.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 373.393 CPU sec, 20.869 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520774, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 213, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1576)
[0000][PE] mean and std.dev: (327.73, 302.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.64, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 372.652 CPU sec, 20.879 real sec
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520453, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 302, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (279.22, 126.16)
[0000][PE] low and high boundaries for proper pairs: (1, 949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1873, 2895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1938.30, 1108.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 372.038 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520648, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 192, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 858)
[0000][PE] mean and std.dev: (241.04, 169.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 368.290 CPU sec, 20.658 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520635, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 261, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1745)
[0000][PE] mean and std.dev: (301.40, 183.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 370.945 CPU sec, 20.753 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521229, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 305, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (277.12, 144.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 372.589 CPU sec, 20.849 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520191, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 326, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1661)
[0000][PE] mean and std.dev: (331.10, 212.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.96, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1588, 3725, 6046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14962)
[0000][PE] mean and std.dev: (3803.80, 2910.78)
[0000][PE] low and high boundaries for proper pairs: (1, 19420)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 369.256 CPU sec, 20.665 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520154, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 304, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (297.41, 223.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 374.598 CPU sec, 21.010 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520185, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 196, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 947)
[0000][PE] mean and std.dev: (204.57, 105.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 2274, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (2345.58, 1353.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 368.849 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520525, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 265, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 752)
[0000][PE] mean and std.dev: (223.20, 108.47)
[0000][PE] low and high boundaries for proper pairs: (1, 943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (617, 1527, 4138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11180)
[0000][PE] mean and std.dev: (2285.50, 2028.46)
[0000][PE] low and high boundaries for proper pairs: (1, 14701)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 370.808 CPU sec, 20.760 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 521064, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 214, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (440.48, 509.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 368.905 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520705, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 344, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (863.07, 1009.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1575, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (1498.80, 765.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 371.310 CPU sec, 20.748 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520205, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 385, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (892.64, 1277.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.29, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 372.302 CPU sec, 20.844 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520396, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 338, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (877.97, 1119.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1279, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (1155.38, 374.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 372.813 CPU sec, 20.848 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520208, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 380, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (855.25, 915.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 372.219 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520526, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 298, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (310.28, 154.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 371.298 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520825, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 287, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (270.14, 127.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.73, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 366.793 CPU sec, 20.555 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520180, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 368, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2013)
[0000][PE] mean and std.dev: (431.00, 290.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 369.520 CPU sec, 20.679 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520437, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 249, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1005)
[0000][PE] mean and std.dev: (340.00, 266.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 2062, 3177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (2142.00, 1386.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 372.088 CPU sec, 20.816 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520564, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 335, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1398)
[0000][PE] mean and std.dev: (375.00, 280.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.77, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 368.423 CPU sec, 20.661 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520538, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 212, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 777)
[0000][PE] mean and std.dev: (241.80, 114.96)
[0000][PE] low and high boundaries for proper pairs: (1, 980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 371.295 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520212, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 278, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (285.79, 128.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 371.764 CPU sec, 20.862 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520723, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 355, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (306.37, 174.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.97, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 370.007 CPU sec, 20.678 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520912, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 212, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 730)
[0000][PE] mean and std.dev: (230.15, 120.59)
[0000][PE] low and high boundaries for proper pairs: (1, 919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 371.240 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520365, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 233, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1683)
[0000][PE] mean and std.dev: (312.00, 250.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 371.655 CPU sec, 20.825 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520572, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 452, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (493.94, 418.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 369.685 CPU sec, 20.669 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520580, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 326, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (336.76, 278.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1872, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1594.89, 701.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 370.497 CPU sec, 20.727 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520651, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 337, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2496)
[0000][PE] mean and std.dev: (629.41, 684.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 369.290 CPU sec, 20.654 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520868, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (104, 280, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (260.29, 175.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 369.686 CPU sec, 20.677 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520654, 12, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 254, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 813)
[0000][PE] mean and std.dev: (256.11, 142.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 1370, 4586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13578)
[0000][PE] mean and std.dev: (1839.33, 2051.34)
[0000][PE] low and high boundaries for proper pairs: (1, 18074)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1764, 3585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8553)
[0000][PE] mean and std.dev: (2642.67, 2479.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 372.549 CPU sec, 20.859 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520373, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 261, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (660.04, 789.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 374.046 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520696, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 295, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (508.67, 544.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 368.285 CPU sec, 20.605 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520963, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 871, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (950.47, 1109.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 371.727 CPU sec, 20.804 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520538, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 244, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (665.33, 838.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 371.031 CPU sec, 20.760 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520664, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 355, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (731.14, 770.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 1173, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1151.90, 599.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 371.913 CPU sec, 20.818 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520279, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 390, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (470.10, 503.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 371.935 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520798, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 432, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (839.29, 922.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (372, 1516, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5745)
[0000][PE] mean and std.dev: (1442.50, 953.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 370.860 CPU sec, 20.760 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520697, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 283, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2449)
[0000][PE] mean and std.dev: (504.67, 515.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1949, 6386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16768)
[0000][PE] mean and std.dev: (2809.77, 2351.54)
[0000][PE] low and high boundaries for proper pairs: (1, 21959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 371.227 CPU sec, 20.789 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520735, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 324, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (325.65, 188.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 372.955 CPU sec, 20.866 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520300, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 398, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (882.47, 1062.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.51, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 372.351 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520623, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 361, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (445.80, 395.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 372.827 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520478, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 229, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (245.19, 154.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.86, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1448, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (1696.57, 946.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 369.284 CPU sec, 20.667 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520529, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 200, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 944)
[0000][PE] mean and std.dev: (212.21, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.71, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 373.240 CPU sec, 20.889 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520346, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 400, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (603.09, 678.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.74, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 2249, 5321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14611)
[0000][PE] mean and std.dev: (2932.91, 2853.45)
[0000][PE] low and high boundaries for proper pairs: (1, 19256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 373.537 CPU sec, 20.966 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520288, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 297, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (771.39, 1002.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1255, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1200.70, 751.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 371.809 CPU sec, 20.830 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520412, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 411, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (644.81, 626.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 373.166 CPU sec, 20.896 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520881, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 362, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1980)
[0000][PE] mean and std.dev: (344.88, 213.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.49, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 369.397 CPU sec, 20.650 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520159, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 272, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6598)
[0000][PE] mean and std.dev: (904.05, 1404.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.59, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (745, 1492, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1234.89, 797.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 375.359 CPU sec, 21.067 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520119, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 376, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1871)
[0000][PE] mean and std.dev: (576.66, 520.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.73, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1744, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1409.50, 640.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 374.312 CPU sec, 20.935 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520652, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 194, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 981)
[0000][PE] mean and std.dev: (199.25, 123.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1534, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (1174.00, 408.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 372.342 CPU sec, 20.852 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520406, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 369, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 909)
[0000][PE] mean and std.dev: (295.00, 131.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.64, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 372.469 CPU sec, 20.823 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520429, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 379, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (599.85, 686.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.84, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (456, 925, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (1197.00, 958.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 371.378 CPU sec, 20.795 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520682, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 286, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (457.81, 460.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 370.223 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520833, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 258, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (259.23, 116.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 370.218 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520199, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 217, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (270.62, 197.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1931, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (1479.18, 794.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 372.628 CPU sec, 20.871 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520986, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 352, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1611)
[0000][PE] mean and std.dev: (380.20, 354.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1146, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1747.64, 1424.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 373.697 CPU sec, 20.929 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 521033, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 359, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (483.67, 418.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.72, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 372.764 CPU sec, 20.906 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520673, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 283, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1507)
[0000][PE] mean and std.dev: (276.73, 194.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 371.452 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520395, 8, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 381, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (549.44, 593.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 374.214 CPU sec, 20.943 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520311, 1, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 514, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (828.55, 688.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.71, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 371.064 CPU sec, 20.742 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520722, 9, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 229, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (559.20, 735.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 370.871 CPU sec, 20.777 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520781, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 334, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (619.37, 649.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.55, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1128, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (1632.27, 1014.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 370.744 CPU sec, 20.735 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520707, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 205, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 972)
[0000][PE] mean and std.dev: (267.48, 205.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 370.320 CPU sec, 20.706 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520530, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 299, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1304)
[0000][PE] mean and std.dev: (363.61, 226.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.50, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1386, 3875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9323)
[0000][PE] mean and std.dev: (2620.54, 2473.70)
[0000][PE] low and high boundaries for proper pairs: (1, 12515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 372.199 CPU sec, 20.857 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520161, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 329, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1054)
[0000][PE] mean and std.dev: (317.00, 183.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 654, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6761)
[0000][PE] mean and std.dev: (1060.08, 1040.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8942)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1699, 2902, 4657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10573)
[0000][PE] mean and std.dev: (3159.73, 2233.60)
[0000][PE] low and high boundaries for proper pairs: (1, 13531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 375.034 CPU sec, 21.015 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520352, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 237, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 979)
[0000][PE] mean and std.dev: (277.89, 189.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 372.211 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520592, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 428, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (656.76, 636.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.72, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (459, 852, 6753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19341)
[0000][PE] mean and std.dev: (2625.55, 3304.07)
[0000][PE] low and high boundaries for proper pairs: (1, 25635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 373.778 CPU sec, 20.915 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520539, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 366, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1306)
[0000][PE] mean and std.dev: (308.05, 237.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1465, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1262.42, 471.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 370.164 CPU sec, 20.743 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520995, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 228, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1073)
[0000][PE] mean and std.dev: (310.11, 246.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.81, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 374.490 CPU sec, 20.949 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520434, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 418, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (724.21, 690.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 372.993 CPU sec, 20.903 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520923, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 380, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (583.22, 539.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.50, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1509, 5315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14207)
[0000][PE] mean and std.dev: (2319.50, 2268.03)
[0000][PE] low and high boundaries for proper pairs: (1, 18653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 370.774 CPU sec, 20.717 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 521317, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 366, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (552.22, 482.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.80, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 369.661 CPU sec, 20.695 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520183, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 361, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (872.77, 1089.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 372.717 CPU sec, 20.848 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520281, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 292, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 792)
[0000][PE] mean and std.dev: (274.33, 180.48)
[0000][PE] low and high boundaries for proper pairs: (1, 996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.55, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.427 CPU sec, 20.783 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520413, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 475, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (945.92, 1044.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.53, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 373.302 CPU sec, 20.904 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 521003, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 333, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 911)
[0000][PE] mean and std.dev: (252.28, 108.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.68, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 370.019 CPU sec, 20.685 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520066, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 216, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 758)
[0000][PE] mean and std.dev: (243.60, 159.82)
[0000][PE] low and high boundaries for proper pairs: (1, 953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 375.324 CPU sec, 21.018 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520455, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 391, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (678.25, 717.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 370.598 CPU sec, 20.762 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520299, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 341, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (766.88, 764.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.76, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 372.799 CPU sec, 20.924 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520508, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 211, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (227.24, 108.39)
[0000][PE] low and high boundaries for proper pairs: (1, 867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 373.772 CPU sec, 20.907 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520553, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 226, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1654)
[0000][PE] mean and std.dev: (356.37, 380.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.85, 120.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 2218, 3869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9889)
[0000][PE] mean and std.dev: (2362.92, 1749.82)
[0000][PE] low and high boundaries for proper pairs: (1, 12899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 371.615 CPU sec, 20.774 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520560, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 195, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1902)
[0000][PE] mean and std.dev: (360.44, 342.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.38, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.841 CPU sec, 20.874 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520548, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (77, 221, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1571)
[0000][PE] mean and std.dev: (202.00, 161.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1392, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1314.00, 533.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 371.660 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520368, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 300, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1559)
[0000][PE] mean and std.dev: (375.65, 238.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.48, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 373.267 CPU sec, 20.912 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520329, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 280, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (652.26, 814.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 372.302 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520697, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 261, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (264.42, 176.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.69, 119.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 371.168 CPU sec, 20.750 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520664, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (107, 211, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1898)
[0000][PE] mean and std.dev: (309.64, 321.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.51, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 373.665 CPU sec, 20.926 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520052, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 330, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (395.56, 340.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 376.055 CPU sec, 21.028 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520362, 11, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 277, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 795)
[0000][PE] mean and std.dev: (236.89, 96.78)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.85, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (761, 1250, 5674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15500)
[0000][PE] mean and std.dev: (2961.18, 2882.09)
[0000][PE] low and high boundaries for proper pairs: (1, 20413)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 375.360 CPU sec, 20.986 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520470, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 189, 299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 557)
[0000][PE] mean and std.dev: (202.73, 103.86)
[0000][PE] low and high boundaries for proper pairs: (1, 686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.49, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1850, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1660.00, 719.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 375.705 CPU sec, 21.013 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520160, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 225, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1343)
[0000][PE] mean and std.dev: (326.00, 291.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 374.667 CPU sec, 20.967 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520891, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 287, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1452)
[0000][PE] mean and std.dev: (357.92, 279.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 1630, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1204.92, 908.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6951)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 372.102 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520657, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 373, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1423)
[0000][PE] mean and std.dev: (453.19, 418.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 371.782 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520863, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 291, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1289)
[0000][PE] mean and std.dev: (283.83, 134.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 371.096 CPU sec, 20.773 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520586, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 266, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (562.09, 802.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.27, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1240, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1503.73, 1120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 371.317 CPU sec, 20.759 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521016, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 236, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (987.33, 1291.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.76, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 371.878 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520833, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 293, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (354.67, 217.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 371.198 CPU sec, 20.768 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520916, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 216, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1654)
[0000][PE] mean and std.dev: (372.67, 334.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.70, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 373.039 CPU sec, 20.873 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520165, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 279, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (232.47, 103.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 373.944 CPU sec, 20.919 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520050, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 365, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1570)
[0000][PE] mean and std.dev: (349.43, 280.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.52, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 377.319 CPU sec, 21.114 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520320, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 214, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (605.11, 699.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.53, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 1130, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5598)
[0000][PE] mean and std.dev: (1492.27, 1464.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 373.832 CPU sec, 20.901 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520137, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 420, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (631.33, 640.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.90, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1683, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1776.55, 793.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 377.090 CPU sec, 21.131 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520747, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 321, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (872.50, 969.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.78, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 373.291 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520195, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 273, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 802)
[0000][PE] mean and std.dev: (261.04, 130.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (456, 842, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1096.89, 824.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 377.944 CPU sec, 21.199 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520514, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 234, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1339)
[0000][PE] mean and std.dev: (256.83, 181.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.72, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 375.233 CPU sec, 21.011 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520386, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 211, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (544.75, 791.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 373.895 CPU sec, 20.991 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520540, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 183, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (319.29, 355.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.67, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 374.910 CPU sec, 21.022 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520528, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 237, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2531)
[0000][PE] mean and std.dev: (397.00, 445.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.82, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1417, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1284.45, 690.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 373.980 CPU sec, 20.938 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520881, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 245, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (281.86, 253.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.57, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 374.129 CPU sec, 20.945 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520134, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 323, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1487)
[0000][PE] mean and std.dev: (377.33, 268.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.41, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 377.147 CPU sec, 21.125 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520932, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 342, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1531)
[0000][PE] mean and std.dev: (324.81, 262.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.30, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1854, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (1630.60, 639.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 373.302 CPU sec, 20.874 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520702, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 339, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1242)
[0000][PE] mean and std.dev: (372.69, 228.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 374.698 CPU sec, 20.965 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520487, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 272, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (513.91, 524.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.69, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 373.896 CPU sec, 20.959 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520589, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 347, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (565.73, 556.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.58, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1319, 3077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7415)
[0000][PE] mean and std.dev: (1785.33, 1561.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 373.263 CPU sec, 20.881 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520660, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 326, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 825)
[0000][PE] mean and std.dev: (295.19, 161.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.63, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 373.953 CPU sec, 20.930 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520279, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 294, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (269.74, 144.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 374.734 CPU sec, 20.965 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520511, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 369, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (525.59, 591.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.28, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 370.912 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520475, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 290, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 760)
[0000][PE] mean and std.dev: (262.95, 133.20)
[0000][PE] low and high boundaries for proper pairs: (1, 953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.13, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 372.971 CPU sec, 20.862 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520509, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 373, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1704)
[0000][PE] mean and std.dev: (410.64, 427.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.49, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 370.288 CPU sec, 20.747 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520455, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 315, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2218)
[0000][PE] mean and std.dev: (478.82, 412.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.87, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 373.210 CPU sec, 20.910 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520737, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 572, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (859.18, 791.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.65, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 373.412 CPU sec, 20.916 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521253, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 409, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1177)
[0000][PE] mean and std.dev: (335.50, 289.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.66, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 369.828 CPU sec, 20.690 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520650, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 337, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (293.92, 132.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 373.897 CPU sec, 20.936 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520600, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 329, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (513.88, 509.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.59, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1036, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1244.00, 845.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 369.307 CPU sec, 20.744 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520569, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 361, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (543.85, 503.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.26, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1408, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6839)
[0000][PE] mean and std.dev: (1600.09, 890.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 370.811 CPU sec, 20.795 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520029, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 355, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (444.33, 404.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 375.119 CPU sec, 21.029 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520831, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 317, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (523.33, 621.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 368.735 CPU sec, 20.617 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520456, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 586, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (765.65, 659.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.71, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 371.592 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520321, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 276, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 670)
[0000][PE] mean and std.dev: (244.71, 87.51)
[0000][PE] low and high boundaries for proper pairs: (1, 822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 369.223 CPU sec, 20.741 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520602, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 283, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (267.53, 220.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 371.415 CPU sec, 20.799 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520838, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 255, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (294.52, 239.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.61, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 371.728 CPU sec, 20.798 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520886, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 320, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (378.19, 345.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 371.628 CPU sec, 20.776 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520886, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 385, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (990.45, 972.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.47, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1868, 2963, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7133)
[0000][PE] mean and std.dev: (2797.40, 1187.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 370.936 CPU sec, 20.804 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520687, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 268, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (424.00, 440.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 372.897 CPU sec, 20.876 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520456, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 341, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (527.58, 463.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.39, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 373.382 CPU sec, 20.866 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520706, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 297, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (394.48, 291.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.79, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 372.619 CPU sec, 20.837 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520414, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 225, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (791.94, 1068.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.54, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 372.284 CPU sec, 20.812 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520654, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 343, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (508.33, 619.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.63, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 368.695 CPU sec, 20.670 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520684, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (86, 178, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 758)
[0000][PE] mean and std.dev: (183.84, 112.30)
[0000][PE] low and high boundaries for proper pairs: (1, 982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.568 CPU sec, 20.828 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520795, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 498, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (984.71, 1143.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.46, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1788, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6668)
[0000][PE] mean and std.dev: (1616.08, 1259.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 371.295 CPU sec, 20.807 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520570, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 259, 401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 843)
[0000][PE] mean and std.dev: (263.20, 151.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.44, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 372.188 CPU sec, 20.810 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520183, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 218, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (295.59, 237.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.56, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 373.300 CPU sec, 20.899 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520889, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 307, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (353.16, 229.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.83, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 372.500 CPU sec, 20.842 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520368, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 347, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1971)
[0000][PE] mean and std.dev: (463.77, 413.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.15, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1661, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1840.60, 782.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 371.693 CPU sec, 20.802 real sec
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520371, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 319, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 946)
[0000][PE] mean and std.dev: (259.60, 104.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 370.944 CPU sec, 20.746 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520741, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 397, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (798.41, 853.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.45, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 372.668 CPU sec, 20.853 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520724, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 281, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (884.00, 1064.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.68, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 978, 3971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10529)
[0000][PE] mean and std.dev: (1841.10, 1732.61)
[0000][PE] low and high boundaries for proper pairs: (1, 13808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 371.907 CPU sec, 20.796 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520905, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 216, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2279)
[0000][PE] mean and std.dev: (440.91, 509.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1134, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1370.60, 1073.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 370.180 CPU sec, 20.740 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520955, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 322, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (644.43, 690.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.53, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1418, 1739, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5339)
[0000][PE] mean and std.dev: (2020.18, 1182.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 369.805 CPU sec, 20.675 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520364, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 259, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1655)
[0000][PE] mean and std.dev: (346.88, 346.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.41, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 370.900 CPU sec, 20.755 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520763, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 301, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (575.09, 595.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.58, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1507, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6257)
[0000][PE] mean and std.dev: (1570.38, 849.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 372.631 CPU sec, 20.872 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520713, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 190, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (182.83, 85.85)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.64, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1070, 4135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10991)
[0000][PE] mean and std.dev: (2323.67, 2465.91)
[0000][PE] low and high boundaries for proper pairs: (1, 14419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 372.070 CPU sec, 20.840 real sec
[0000] Calling mem_process_seqs.., task: 2089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520409, 5, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 357, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (1133.86, 1578.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.59, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 376.603 CPU sec, 21.054 real sec
[0000] Calling mem_process_seqs.., task: 2090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520856, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 386, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (389.38, 328.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 368.283 CPU sec, 20.593 real sec
[0000] Calling mem_process_seqs.., task: 2091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520112, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 320, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (731.80, 843.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.32, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1392, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (1167.67, 879.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 373.588 CPU sec, 21.029 real sec
[0000] Calling mem_process_seqs.., task: 2092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520086, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 428, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4732)
[0000][PE] mean and std.dev: (801.05, 894.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.60, 120.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 373.570 CPU sec, 20.925 real sec
[0000] Calling mem_process_seqs.., task: 2093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520457, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 355, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (436.55, 341.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.46, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1042, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1555.50, 1653.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 370.902 CPU sec, 20.775 real sec
[0000] Calling mem_process_seqs.., task: 2094
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000120 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520623, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 320, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (737.95, 985.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.67, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 371.430 CPU sec, 20.779 real sec
[0000] Calling mem_process_seqs.., task: 2095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520932, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 202, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 918)
[0000][PE] mean and std.dev: (192.45, 118.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.75, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 369.779 CPU sec, 20.702 real sec
[0000] Calling mem_process_seqs.., task: 2096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520404, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 218, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1342)
[0000][PE] mean and std.dev: (343.06, 296.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.35, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 370.858 CPU sec, 20.805 real sec
[0000] Calling mem_process_seqs.., task: 2097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521081, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 309, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (498.24, 504.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.40, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 368.477 CPU sec, 20.617 real sec
[0000] Calling mem_process_seqs.., task: 2098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520689, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 357, 785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1835)
[0000][PE] mean and std.dev: (446.23, 402.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.42, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 369.640 CPU sec, 20.710 real sec
[0000] Calling mem_process_seqs.., task: 2099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520549, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 260, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1893)
[0000][PE] mean and std.dev: (385.18, 433.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.58, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 371.815 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 2100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520637, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 185, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (188.94, 88.22)
[0000][PE] low and high boundaries for proper pairs: (1, 753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.44, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 368.073 CPU sec, 20.595 real sec
[0000] Calling mem_process_seqs.., task: 2101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520737, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 335, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 990)
[0000][PE] mean and std.dev: (306.04, 204.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.18, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1462, 2017, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (2051.60, 792.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 368.689 CPU sec, 20.626 real sec
[0000] Calling mem_process_seqs.., task: 2102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520912, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 348, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3038)
[0000][PE] mean and std.dev: (529.20, 571.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.23, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 367.048 CPU sec, 20.534 real sec
[0000] Calling mem_process_seqs.., task: 2103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521012, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 377, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6756)
[0000][PE] mean and std.dev: (1007.83, 1391.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.75, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1272, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6819)
[0000][PE] mean and std.dev: (1797.82, 1375.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 368.924 CPU sec, 20.640 real sec
[0000] Calling mem_process_seqs.., task: 2104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520167, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 346, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (338.76, 266.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.33, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1220, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7563)
[0000][PE] mean and std.dev: (1717.46, 1267.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 372.507 CPU sec, 20.822 real sec
[0000] Calling mem_process_seqs.., task: 2105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520631, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 175, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 788)
[0000][PE] mean and std.dev: (150.27, 80.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.54, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 368.073 CPU sec, 20.596 real sec
[0000] Calling mem_process_seqs.., task: 2106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520379, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 324, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1896)
[0000][PE] mean and std.dev: (391.71, 327.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.55, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (97, 761, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (537.62, 513.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 367.568 CPU sec, 20.561 real sec
[0000] Calling mem_process_seqs.., task: 2107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520187, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 302, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (582.17, 657.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.52, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 370.721 CPU sec, 20.716 real sec
[0000] Calling mem_process_seqs.., task: 2108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520522, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 320, 621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1493)
[0000][PE] mean and std.dev: (325.43, 208.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.43, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 370.365 CPU sec, 20.722 real sec
[0000] Calling mem_process_seqs.., task: 2109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520832, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 207, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 672)
[0000][PE] mean and std.dev: (203.78, 83.40)
[0000][PE] low and high boundaries for proper pairs: (1, 837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.80, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 367.324 CPU sec, 20.566 real sec
[0000] Calling mem_process_seqs.., task: 2110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520932, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 224, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1004)
[0000][PE] mean and std.dev: (275.64, 189.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 889)
[0000][PE] mean and std.dev: (509.50, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 364.495 CPU sec, 20.374 real sec
[0000] Calling mem_process_seqs.., task: 2111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520729, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 330, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (455.38, 410.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.70, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 368.634 CPU sec, 20.624 real sec
[0000] Calling mem_process_seqs.., task: 2112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520434, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 301, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1368)
[0000][PE] mean and std.dev: (291.42, 155.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 506, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 894)
[0000][PE] mean and std.dev: (509.86, 120.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (675, 923, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7128)
[0000][PE] mean and std.dev: (1692.36, 1848.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9279)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 2079, 3349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7933)
[0000][PE] mean and std.dev: (2198.70, 1381.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 371.926 CPU sec, 20.811 real sec
[0000] Calling mem_process_seqs.., task: 2113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 116682502, nseq: 781390
	[0000][ M::kt_pipeline] read 781390 sequences (116682502 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520459, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 254, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (223.64, 154.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 505, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 891)
[0000][PE] mean and std.dev: (509.40, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1342, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6140)
[0000][PE] mean and std.dev: (1711.30, 1242.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 368.966 CPU sec, 20.707 real sec
[0000] Calling mem_process_seqs.., task: 2114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 781390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 337683, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 225, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1943)
[0000][PE] mean and std.dev: (278.90, 185.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 505, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 892)
[0000][PE] mean and std.dev: (509.86, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 781390 reads in 233.943 CPU sec, 13.128 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.336864 MHz
Runtime profile:

	Time taken for main_mem function: 44033.77 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2211.64, (2211.64, 2211.64)
	Writing IO time (SAM) avg: 3578.91, (3578.91, 3578.91)
	Reading IO time (Reference Genome) avg: 14.91, (14.91, 14.91)
	Index read time avg: 29.86, (29.86, 29.86)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 43988.92
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 43949.50, (43949.50, 43949.50)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 17886.58, (17886.58, 17886.58)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 25853.94, (25853.94, 25853.94)
		SMEM compute avg: 8555.60, (8559.81, 8550.37)
		SAL compute avg: 3424.61, (3427.64, 3422.02)
				MEM_SA avg: 1532.56, (1533.41, 1531.51)

		BSW time, avg: 10268.10, (10271.11, 10260.01)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
